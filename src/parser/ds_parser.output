Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 335 conflicts: 1 shift/reduce
State 433 conflicts: 1 shift/reduce
State 539 conflicts: 2 shift/reduce
State 541 conflicts: 2 shift/reduce
State 653 conflicts: 1 shift/reduce
State 735 conflicts: 1 shift/reduce
State 945 conflicts: 1 shift/reduce
State 1089 conflicts: 1 shift/reduce
State 1200 conflicts: 1 shift/reduce
State 1201 conflicts: 1 shift/reduce
State 1490 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 optional_not_required: %empty
   23                      | '!' "inscope"

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   25 character_sequence: STRING_CHARACTER
   26                   | STRING_CHARACTER_ESC
   27                   | character_sequence STRING_CHARACTER
   28                   | character_sequence STRING_CHARACTER_ESC

   29 string_constant: "start of the string" character_sequence "end of the string"
   30                | "start of the string" "end of the string"

   31 format_string: %empty
   32              | format_string STRING_CHARACTER

   33 optional_format_string: %empty

   34 $@1: %empty

   35 optional_format_string: ':' $@1 format_string

   36 string_builder_body: %empty
   37                    | string_builder_body character_sequence
   38                    | string_builder_body "{" expr optional_format_string "}"

   39 string_builder: "start of the string" string_builder_body "end of the string"

   40 reader_character_sequence: STRING_CHARACTER
   41                          | reader_character_sequence STRING_CHARACTER

   42 $@2: %empty

   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   44 options_declaration: "options" annotation_argument_list

   45 require_declaration: "require" require_module

   46 keyword_or_name: "name"
   47                | "keyword"
   48                | "type function"

   49 require_module_name: keyword_or_name
   50                    | '%' require_module_name
   51                    | require_module_name '.' keyword_or_name
   52                    | require_module_name '/' keyword_or_name

   53 require_module: require_module_name is_public_module
   54               | require_module_name "as" "name" is_public_module

   55 is_public_module: %empty
   56                 | "public"

   57 expect_declaration: "expect" expect_list

   58 expect_list: expect_error
   59            | expect_list ',' expect_error

   60 expect_error: "integer constant"
   61             | "integer constant" ':' "integer constant"

   62 expression_label: "label" "integer constant" ':'

   63 expression_goto: "goto" "label" "integer constant"
   64                | "goto" expr

   65 elif_or_static_elif: "elif"
   66                    | "static_elif"

   67 expression_else: %empty
   68                | "else" expression_block
   69                | elif_or_static_elif expr expression_block expression_else

   70 semicolon: "end of line"
   71          | "end of expression"

   72 if_or_static_if: "if"
   73                | "static_if"

   74 expression_else_one_liner: %empty

   75 $@3: %empty

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return_no_pipe
   79                        | expression_yield_no_pipe
   80                        | expression_break
   81                        | expression_continue

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else

   83 $@4: %empty

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   85 $@5: %empty

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   87 expression_unsafe: "unsafe" expression_block

   88 expression_while_loop: "while" expr expression_block

   89 expression_with: "with" expr expression_block

   90 $@6: %empty

   91 expression_with_alias: "assume" "name" '=' $@6 expr

   92 annotation_argument_value: string_constant
   93                          | "name"
   94                          | "integer constant"
   95                          | "floating point constant"
   96                          | "true"
   97                          | "false"

   98 annotation_argument_value_list: annotation_argument_value
   99                               | annotation_argument_value_list ',' annotation_argument_value

  100 annotation_argument_name: "name"
  101                         | "type"
  102                         | "in"

  103 annotation_argument: annotation_argument_name '=' string_constant
  104                    | annotation_argument_name '=' "name"
  105                    | annotation_argument_name '=' "integer constant"
  106                    | annotation_argument_name '=' "floating point constant"
  107                    | annotation_argument_name '=' "true"
  108                    | annotation_argument_name '=' "false"
  109                    | annotation_argument_name
  110                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  111 annotation_argument_list: annotation_argument
  112                         | annotation_argument_list ',' annotation_argument

  113 metadata_argument_list: '@' annotation_argument
  114                       | metadata_argument_list '@' annotation_argument
  115                       | metadata_argument_list semicolon

  116 annotation_declaration_name: name_in_namespace
  117                            | "require"
  118                            | "private"
  119                            | "template"

  120 annotation_declaration_basic: annotation_declaration_name
  121                             | annotation_declaration_name '(' annotation_argument_list ')'

  122 annotation_declaration: annotation_declaration_basic
  123                       | '!' annotation_declaration
  124                       | annotation_declaration "&&" annotation_declaration
  125                       | annotation_declaration "||" annotation_declaration
  126                       | annotation_declaration "^^" annotation_declaration
  127                       | '(' annotation_declaration ')'
  128                       | "|>" annotation_declaration

  129 annotation_list: annotation_declaration
  130                | annotation_list ',' annotation_declaration

  131 optional_annotation_list: %empty
  132                         | '[' annotation_list ']'

  133 optional_function_argument_list: %empty
  134                                | '(' ')'
  135                                | '(' function_argument_list ')'

  136 optional_function_type: %empty
  137                       | ':' type_declaration

  138 function_name: "name"
  139              | "operator" '!'
  140              | "operator" '~'
  141              | "operator" "+="
  142              | "operator" "-="
  143              | "operator" "*="
  144              | "operator" "/="
  145              | "operator" "%="
  146              | "operator" "&="
  147              | "operator" "|="
  148              | "operator" "^="
  149              | "operator" "&&="
  150              | "operator" "||="
  151              | "operator" "^^="
  152              | "operator" "&&"
  153              | "operator" "||"
  154              | "operator" "^^"
  155              | "operator" '+'
  156              | "operator" '-'
  157              | "operator" '*'
  158              | "operator" '/'
  159              | "operator" '%'
  160              | "operator" '<'
  161              | "operator" '>'
  162              | "operator" ".."
  163              | "operator" "=="
  164              | "operator" "!="
  165              | "operator" "<="
  166              | "operator" ">="
  167              | "operator" '&'
  168              | "operator" '|'
  169              | "operator" '^'
  170              | "++" "operator"
  171              | "--" "operator"
  172              | "operator" "++"
  173              | "operator" "--"
  174              | "operator" "<<"
  175              | "operator" ">>"
  176              | "operator" "<<="
  177              | "operator" ">>="
  178              | "operator" "<<<"
  179              | "operator" ">>>"
  180              | "operator" "<<<="
  181              | "operator" ">>>="
  182              | "operator" '[' ']'
  183              | "operator" "?[" ']'
  184              | "operator" '.'
  185              | "operator" "?."
  186              | "operator" '.' "name"
  187              | "operator" '.' "name" ":="
  188              | "operator" "?." "name"
  189              | "operator" ":="
  190              | "operator" "delete"
  191              | "operator" "??"
  192              | "operator" "is"
  193              | "operator" "as"
  194              | "operator" "is" "name"
  195              | "operator" "as" "name"
  196              | "operator" '?' "as"
  197              | "operator" '?' "as" "name"
  198              | "bool"
  199              | "string"
  200              | "int"
  201              | "int2"
  202              | "int3"
  203              | "int4"
  204              | "uint"
  205              | "uint2"
  206              | "uint3"
  207              | "uint4"
  208              | "float"
  209              | "float2"
  210              | "float3"
  211              | "float4"
  212              | "range"
  213              | "urange"
  214              | "range64"
  215              | "urange64"
  216              | "int64"
  217              | "uint64"
  218              | "double"
  219              | "int8"
  220              | "uint8"
  221              | "int16"
  222              | "uint16"

  223 global_function_declaration: optional_annotation_list "def" function_declaration

  224 optional_public_or_private_function: %empty
  225                                    | "private"
  226                                    | "public"

  227 function_declaration_header: function_name optional_function_argument_list optional_function_type

  228 $@7: %empty

  229 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  230 open_block: "begin of code block"
  231           | "new scope"

  232 close_block: "end of code block"
  233            | "close scope"

  234 expression_block: open_block expressions close_block
  235                 | open_block expressions close_block "finally" open_block expressions close_block

  236 expr_call_pipe: expr expr_full_block_assumed_piped
  237               | expression_keyword expr_full_block_assumed_piped
  238               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  239 expression_any: semicolon
  240               | expr_pipe
  241               | expr_keyword
  242               | expr_assign_pipe
  243               | expr_assign semicolon
  244               | expression_delete semicolon
  245               | expression_let
  246               | expression_while_loop
  247               | expression_unsafe
  248               | expression_with
  249               | expression_with_alias
  250               | expression_for_loop
  251               | expression_break semicolon
  252               | expression_continue semicolon
  253               | expression_return
  254               | expression_yield
  255               | expression_if_then_else
  256               | expression_try_catch
  257               | expression_label semicolon
  258               | expression_goto semicolon
  259               | "pass" semicolon

  260 expressions: %empty
  261            | expressions expression_any
  262            | expressions error

  263 expr_keyword: "keyword" expr expression_block

  264 optional_expr_list: %empty
  265                   | expr_list optional_comma

  266 optional_expr_list_in_braces: %empty
  267                             | '(' optional_expr_list optional_comma ')'

  268 optional_expr_map_tuple_list: %empty
  269                             | expr_map_tuple_list optional_comma

  270 type_declaration_no_options_list: type_declaration
  271                                 | type_declaration_no_options_list c_or_s type_declaration

  272 $@8: %empty

  273 $@9: %empty

  274 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  275 $@10: %empty

  276 $@11: %empty

  277 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  278 expr_pipe: expr_assign " <|" expr_block
  279          | "@ <|" expr_block
  280          | "@@ <|" expr_block
  281          | "$ <|" expr_block
  282          | expr_call_pipe

  283 name_in_namespace: "name"
  284                  | "name" "::" "name"
  285                  | "::" "name"

  286 expression_delete: "delete" expr
  287                  | "delete" "explicit" expr

  288 $@12: %empty

  289 $@13: %empty

  290 new_type_declaration: '<' $@12 type_declaration '>' $@13
  291                     | structure_type_declaration

  292 expr_new: "new" new_type_declaration
  293         | "new" new_type_declaration '(' use_initializer ')'
  294         | "new" new_type_declaration '(' expr_list ')'
  295         | "new" new_type_declaration '(' make_struct_single ')'
  296         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  297         | "new" make_decl

  298 expression_break: "break"

  299 expression_continue: "continue"

  300 expression_return_no_pipe: "return"
  301                          | "return" expr_list
  302                          | "return" "<-" expr_list

  303 expression_return: expression_return_no_pipe semicolon
  304                  | "return" expr_pipe
  305                  | "return" "<-" expr_pipe

  306 expression_yield_no_pipe: "yield" expr
  307                         | "yield" "<-" expr

  308 expression_yield: expression_yield_no_pipe semicolon
  309                 | "yield" expr_pipe
  310                 | "yield" "<-" expr_pipe

  311 expression_try_catch: "try" expression_block "recover" expression_block

  312 kwd_let_var_or_nothing: "let"
  313                       | "var"
  314                       | %empty

  315 kwd_let: "let"
  316        | "var"

  317 optional_in_scope: "inscope"
  318                  | %empty

  319 tuple_expansion: "name"
  320                | tuple_expansion ',' "name"

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  324                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  327                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  328                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  329 expression_let: kwd_let optional_in_scope let_variable_declaration
  330               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  331 $@14: %empty

  332 $@15: %empty

  333 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  334 $@16: %empty

  335 $@17: %empty

  336 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  337 $@18: %empty

  338 $@19: %empty

  339 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  340 $@20: %empty

  341 $@21: %empty

  342 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  343 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  344               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  345               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  346               | "typeinfo" name_in_namespace '(' expr ')'
  347               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  348               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  349 expr_list: expr
  350          | expr_list ',' expr

  351 block_or_simple_block: expression_block
  352                      | "=>" expr
  353                      | "=>" "<-" expr

  354 block_or_lambda: '$'
  355                | '@'
  356                | '@' '@'

  357 capture_entry: '&' "name"
  358              | '=' "name"
  359              | "<-" "name"
  360              | ":=" "name"
  361              | "name" '(' "name" ')'

  362 capture_list: capture_entry
  363             | capture_list ',' capture_entry

  364 optional_capture_list: %empty
  365                      | "[[" capture_list ']' ']'
  366                      | "capture" '(' capture_list ')'

  367 expr_block: expression_block
  368           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  370 $@22: %empty

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  372 expr_numeric_const: "integer constant"
  373                   | "unsigned integer constant"
  374                   | "long integer constant"
  375                   | "unsigned long integer constant"
  376                   | "unsigned int8 constant"
  377                   | "floating point constant"
  378                   | "double constant"

  379 expr_assign: expr
  380            | expr '=' expr
  381            | expr "<-" expr
  382            | expr ":=" expr
  383            | expr "&=" expr
  384            | expr "|=" expr
  385            | expr "^=" expr
  386            | expr "&&=" expr
  387            | expr "||=" expr
  388            | expr "^^=" expr
  389            | expr "+=" expr
  390            | expr "-=" expr
  391            | expr "*=" expr
  392            | expr "/=" expr
  393            | expr "%=" expr
  394            | expr "<<=" expr
  395            | expr ">>=" expr
  396            | expr "<<<=" expr
  397            | expr ">>>=" expr

  398 expr_assign_pipe_right: "@ <|" expr_block
  399                       | "@@ <|" expr_block
  400                       | "$ <|" expr_block
  401                       | expr_call_pipe

  402 expr_assign_pipe: expr '=' expr_assign_pipe_right
  403                 | expr "<-" expr_assign_pipe_right
  404                 | expr "&=" expr_assign_pipe_right
  405                 | expr "|=" expr_assign_pipe_right
  406                 | expr "^=" expr_assign_pipe_right
  407                 | expr "&&=" expr_assign_pipe_right
  408                 | expr "||=" expr_assign_pipe_right
  409                 | expr "^^=" expr_assign_pipe_right
  410                 | expr "+=" expr_assign_pipe_right
  411                 | expr "-=" expr_assign_pipe_right
  412                 | expr "*=" expr_assign_pipe_right
  413                 | expr "/=" expr_assign_pipe_right
  414                 | expr "%=" expr_assign_pipe_right
  415                 | expr "<<=" expr_assign_pipe_right
  416                 | expr ">>=" expr_assign_pipe_right
  417                 | expr "<<<=" expr_assign_pipe_right
  418                 | expr ">>>=" expr_assign_pipe_right

  419 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  420                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  421 expr_method_call: expr "->" "name" '(' ')'
  422                 | expr "->" "name" '(' expr_list ')'

  423 func_addr_name: name_in_namespace
  424               | "$i" '(' expr ')'

  425 func_addr_expr: '@' '@' func_addr_name

  426 $@23: %empty

  427 $@24: %empty

  428 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  429 $@25: %empty

  430 $@26: %empty

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  432 expr_field: expr '.' "name"
  433           | expr '.' '.' "name"
  434           | expr '.' "name" '(' ')'
  435           | expr '.' "name" '(' expr_list ')'
  436           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr '.' basic_type_declaration '(' ')'
  438           | expr '.' basic_type_declaration '(' expr_list ')'

  439 $@27: %empty

  440 $@28: %empty

  441 expr_field: expr '.' $@27 error $@28

  442 expr_call: name_in_namespace '(' ')'
  443          | name_in_namespace '(' "uninitialized" ')'
  444          | name_in_namespace '(' make_struct_single ')'
  445          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  446          | name_in_namespace '(' expr_list ')'
  447          | basic_type_declaration '(' ')'
  448          | basic_type_declaration '(' expr_list ')'

  449 expr: "null"
  450     | name_in_namespace
  451     | expr_numeric_const
  452     | expr_reader
  453     | string_builder
  454     | make_decl
  455     | "true"
  456     | "false"
  457     | expr_field
  458     | expr_mtag
  459     | '!' expr
  460     | '~' expr
  461     | '+' expr
  462     | '-' expr
  463     | expr "<<" expr
  464     | expr ">>" expr
  465     | expr "<<<" expr
  466     | expr ">>>" expr
  467     | expr '+' expr
  468     | expr '-' expr
  469     | expr '*' expr
  470     | expr '/' expr
  471     | expr '%' expr
  472     | expr '<' expr
  473     | expr '>' expr
  474     | expr "==" expr
  475     | expr "!=" expr
  476     | expr "<=" expr
  477     | expr ">=" expr
  478     | expr '&' expr
  479     | expr '|' expr
  480     | expr '^' expr
  481     | expr "&&" expr
  482     | expr "||" expr
  483     | expr "^^" expr
  484     | expr ".." expr
  485     | "++" expr
  486     | "--" expr
  487     | expr "++"
  488     | expr "--"
  489     | '(' expr_list optional_comma ')'
  490     | '(' make_struct_single ')'
  491     | expr '[' expr ']'
  492     | expr '.' '[' expr ']'
  493     | expr "?[" expr ']'
  494     | expr '.' "?[" expr ']'
  495     | expr "?." "name"
  496     | expr '.' "?." "name"
  497     | func_addr_expr
  498     | expr_call
  499     | '*' expr
  500     | "deref" '(' expr ')'
  501     | "addr" '(' expr ')'
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  503     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  504     | expr "??" expr
  505     | expr '?' expr ':' expr

  506 $@29: %empty

  507 $@30: %empty

  508 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr "is" basic_type_declaration
  510     | expr "is" "name"
  511     | expr "as" "name"

  512 $@31: %empty

  513 $@32: %empty

  514 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr "as" basic_type_declaration
  516     | expr '?' "as" "name"

  517 $@33: %empty

  518 $@34: %empty

  519 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr '?' "as" basic_type_declaration
  521     | expr_type_info
  522     | expr_type_decl
  523     | expr_cast
  524     | expr_new
  525     | expr_method_call
  526     | expr_named_call
  527     | expr_full_block
  528     | expr "<|" expr
  529     | expr "|>" expr
  530     | expr "|>" basic_type_declaration
  531     | name_in_namespace "name"
  532     | "unsafe" '(' expr ')'
  533     | expression_keyword

  534 expr_mtag: "$$" '(' expr ')'
  535          | "$i" '(' expr ')'
  536          | "$v" '(' expr ')'
  537          | "$b" '(' expr ')'
  538          | "$a" '(' expr ')'
  539          | "..."
  540          | "$c" '(' expr ')' '(' ')'
  541          | "$c" '(' expr ')' '(' expr_list ')'
  542          | expr '.' "$f" '(' expr ')'
  543          | expr "?." "$f" '(' expr ')'
  544          | expr '.' '.' "$f" '(' expr ')'
  545          | expr '.' "?." "$f" '(' expr ')'
  546          | expr "as" "$f" '(' expr ')'
  547          | expr '?' "as" "$f" '(' expr ')'
  548          | expr "is" "$f" '(' expr ')'
  549          | '@' '@' "$c" '(' expr ')'

  550 optional_field_annotation: %empty
  551                          | "[[" annotation_argument_list ']' ']'
  552                          | metadata_argument_list

  553 optional_override: %empty
  554                  | "override"
  555                  | "sealed"

  556 optional_constant: %empty
  557                  | "const"

  558 optional_public_or_private_member_variable: %empty
  559                                           | "public"
  560                                           | "private"

  561 optional_static_member_variable: %empty
  562                                | "static"

  563 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  564 struct_variable_declaration_list: %empty
  565                                 | struct_variable_declaration_list semicolon

  566 $@35: %empty

  567 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  568 $@36: %empty

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  570 $@37: %empty

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  572                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  573 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  574 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  575                                   | "$a" '(' expr ')'

  576 function_argument_list: function_argument_declaration_no_type
  577                       | function_argument_declaration_type
  578                       | function_argument_declaration_no_type semicolon function_argument_list
  579                       | function_argument_declaration_type semicolon function_argument_list
  580                       | function_argument_declaration_type ',' function_argument_list

  581 tuple_type: type_declaration
  582           | "name" ':' type_declaration

  583 tuple_type_list: tuple_type
  584                | tuple_type_list c_or_s tuple_type

  585 tuple_alias_type_list: %empty
  586                      | tuple_alias_type_list c_or_s
  587                      | tuple_alias_type_list tuple_type c_or_s

  588 variant_type: "name" ':' type_declaration

  589 variant_type_list: variant_type
  590                  | variant_type_list c_or_s variant_type

  591 variant_alias_type_list: %empty
  592                        | variant_alias_type_list c_or_s
  593                        | variant_alias_type_list variant_type c_or_s

  594 copy_or_move: '='
  595             | "<-"

  596 variable_declaration_no_type: variable_name_with_pos_list
  597                             | variable_name_with_pos_list '&'
  598                             | variable_name_with_pos_list copy_or_move expr

  599 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  600                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  601 variable_declaration: variable_declaration_type
  602                     | variable_declaration_no_type

  603 copy_or_move_or_clone: '='
  604                      | "<-"
  605                      | ":="

  606 optional_ref: %empty
  607             | '&'

  608 let_variable_name_with_pos_list: "name"
  609                                | "$i" '(' expr ')'
  610                                | "name" "aka" "name"
  611                                | let_variable_name_with_pos_list ',' "name"
  612                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  613 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  614                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  616                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  617                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  618 global_variable_declaration_list: %empty
  619                                 | global_variable_declaration_list "end of line"

  620 $@38: %empty

  621 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  622 optional_shared: %empty
  623                | "shared"

  624 optional_public_or_private_variable: %empty
  625                                    | "private"
  626                                    | "public"

  627 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  628 $@39: %empty

  629 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  630 enum_list: %empty
  631          | enum_list semicolon
  632          | enum_list "name" semicolon
  633          | enum_list "name" '=' expr semicolon

  634 optional_public_or_private_alias: %empty
  635                                 | "private"
  636                                 | "public"

  637 $@40: %empty

  638 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  639 alias_list: single_alias semicolon
  640           | alias_list single_alias semicolon

  641 alias_declaration: "typedef" open_block alias_list close_block

  642 $@41: %empty

  643 alias_declaration: "typedef" $@41 single_alias semicolon

  644 optional_public_or_private_enum: %empty
  645                                | "private"
  646                                | "public"

  647 enum_name: "name"

  648 $@42: %empty

  649 $@43: %empty

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  651 $@44: %empty

  652 $@45: %empty

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  654 optional_structure_parent: %empty
  655                          | ':' name_in_namespace

  656 optional_sealed: %empty
  657                | "sealed"

  658 structure_name: optional_sealed "name" optional_structure_parent

  659 class_or_struct: "class"
  660                | "struct"
  661                | "template" "class"
  662                | "template" "struct"

  663 optional_public_or_private_structure: %empty
  664                                     | "private"
  665                                     | "public"

  666 optional_struct_variable_declaration_list: %empty
  667                                          | open_block struct_variable_declaration_list close_block

  668 $@46: %empty

  669 $@47: %empty

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  671 variable_name_with_pos_list: "name"
  672                            | "$i" '(' expr ')'
  673                            | "name" "aka" "name"
  674                            | variable_name_with_pos_list ',' "name"
  675                            | variable_name_with_pos_list ',' "name" "aka" "name"

  676 basic_type_declaration: "bool"
  677                       | "string"
  678                       | "int"
  679                       | "int8"
  680                       | "int16"
  681                       | "int64"
  682                       | "int2"
  683                       | "int3"
  684                       | "int4"
  685                       | "uint"
  686                       | "uint8"
  687                       | "uint16"
  688                       | "uint64"
  689                       | "uint2"
  690                       | "uint3"
  691                       | "uint4"
  692                       | "float"
  693                       | "float2"
  694                       | "float3"
  695                       | "float4"
  696                       | "void"
  697                       | "range"
  698                       | "urange"
  699                       | "range64"
  700                       | "urange64"
  701                       | "double"
  702                       | "bitfield"

  703 enum_basic_type_declaration: "int"
  704                            | "int8"
  705                            | "int16"
  706                            | "uint"
  707                            | "uint8"
  708                            | "uint16"
  709                            | "int64"
  710                            | "uint64"

  711 structure_type_declaration: name_in_namespace

  712 auto_type_declaration: "auto"
  713                      | "auto" '(' "name" ')'
  714                      | "$t" '(' expr ')'

  715 bitfield_bits: "name"
  716              | bitfield_bits semicolon "name"

  717 bitfield_alias_bits: %empty
  718                    | bitfield_alias_bits semicolon
  719                    | bitfield_alias_bits "name" semicolon

  720 $@48: %empty

  721 $@49: %empty

  722 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  723 c_or_s: ','
  724       | semicolon

  725 table_type_pair: type_declaration
  726                | type_declaration c_or_s type_declaration

  727 dim_list: '[' expr ']'
  728         | dim_list '[' expr ']'

  729 type_declaration_no_options: basic_type_declaration
  730                            | auto_type_declaration
  731                            | bitfield_type_declaration
  732                            | structure_type_declaration
  733                            | type_declaration_no_options dim_list
  734                            | type_declaration_no_options '[' ']'

  735 $@50: %empty

  736 $@51: %empty

  737 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  738                            | "typedecl" '(' expr ')'
  739                            | '$' name_in_namespace '(' optional_expr_list ')'

  740 $@52: %empty

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  742                            | type_declaration_no_options '-' '[' ']'
  743                            | type_declaration_no_options "explicit"
  744                            | type_declaration_no_options "const"
  745                            | type_declaration_no_options '-' "const"
  746                            | type_declaration_no_options '&'
  747                            | type_declaration_no_options '-' '&'
  748                            | type_declaration_no_options '#'
  749                            | type_declaration_no_options "implicit"
  750                            | type_declaration_no_options '-' '#'
  751                            | type_declaration_no_options "==" "const"
  752                            | type_declaration_no_options "==" '&'
  753                            | type_declaration_no_options '?'

  754 $@53: %empty

  755 $@54: %empty

  756 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  757                            | type_declaration_no_options "??"

  758 $@55: %empty

  759 $@56: %empty

  760 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  761 $@57: %empty

  762 $@58: %empty

  763 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  764 $@59: %empty

  765 $@60: %empty

  766 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  767                            | "block"

  768 $@61: %empty

  769 $@62: %empty

  770 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  771 $@63: %empty

  772 $@64: %empty

  773 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  774                            | "function"

  775 $@65: %empty

  776 $@66: %empty

  777 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  778 $@67: %empty

  779 $@68: %empty

  780 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  781                            | "lambda"

  782 $@69: %empty

  783 $@70: %empty

  784 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  785 $@71: %empty

  786 $@72: %empty

  787 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  788 $@73: %empty

  789 $@74: %empty

  790 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  791 $@75: %empty

  792 $@76: %empty

  793 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  794 type_declaration: type_declaration_no_options
  795                 | type_declaration '|' type_declaration_no_options
  796                 | type_declaration '|' '#'

  797 $@77: %empty

  798 $@78: %empty

  799 $@79: %empty

  800 $@80: %empty

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  802 $@81: %empty

  803 $@82: %empty

  804 $@83: %empty

  805 $@84: %empty

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  807 $@85: %empty

  808 $@86: %empty

  809 $@87: %empty

  810 $@88: %empty

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

  812 make_decl: make_struct_decl
  813          | make_dim_decl
  814          | make_table_decl
  815          | array_comprehension
  816          | make_tuple_call

  817 make_struct_fields: "name" copy_or_move expr
  818                   | "name" ":=" expr
  819                   | make_struct_fields ',' "name" copy_or_move expr
  820                   | make_struct_fields ',' "name" ":=" expr
  821                   | "$f" '(' expr ')' copy_or_move expr
  822                   | "$f" '(' expr ')' ":=" expr
  823                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  825 make_variant_dim: %empty
  826                 | make_struct_fields

  827 make_struct_single: make_struct_fields optional_comma

  828 make_struct_dim: make_struct_fields
  829                | make_struct_dim "end of expression" make_struct_fields

  830 make_struct_dim_list: '(' make_struct_fields ')'
  831                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  832 make_struct_dim_decl: make_struct_fields
  833                     | make_struct_dim_list optional_comma

  834 optional_make_struct_dim_decl: make_struct_dim_decl
  835                              | %empty

  836 optional_block: %empty
  837               | "where" expr_block

  838 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  839                                    | ";}}"

  840 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  841                                    | ";}]"

  842 optional_trailing_semicolon_sqr_sqr: ']' ']'
  843                                    | ";]]"

  844 optional_trailing_delim_sqr_sqr: ']' ']'
  845                                | ";]]"
  846                                | ",]]"

  847 optional_trailing_delim_cur_sqr: "end of code block" ']'
  848                                | ";}]"
  849                                | ",}]"

  850 use_initializer: %empty
  851                | "uninitialized"

  852 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  854                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  855                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  856                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  857                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  858 $@89: %empty

  859 $@90: %empty

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  861 $@91: %empty

  862 $@92: %empty

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  864 $@93: %empty

  865 $@94: %empty

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  867 $@95: %empty

  868 $@96: %empty

  869 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  870 make_tuple: expr
  871           | expr "=>" expr
  872           | make_tuple ',' expr

  873 make_map_tuple: expr "=>" expr
  874               | expr

  875 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  876 $@97: %empty

  877 $@98: %empty

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  879 make_dim: make_tuple
  880         | make_dim "end of expression" make_tuple

  881 make_dim_decl: '[' optional_expr_list ']'
  882              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  883              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  884 $@99: %empty

  885 $@100: %empty

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  887 $@101: %empty

  888 $@102: %empty

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  890 $@103: %empty

  891 $@104: %empty

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  893              | "array" '(' expr_list optional_comma ')'

  894 $@105: %empty

  895 $@106: %empty

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  897              | "fixed_array" '(' expr_list optional_comma ')'

  898 $@107: %empty

  899 $@108: %empty

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  901 make_table: make_map_tuple
  902           | make_table "end of expression" make_map_tuple

  903 expr_map_tuple_list: make_map_tuple
  904                    | expr_map_tuple_list ',' make_map_tuple

  905 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  906                | "{{" make_table optional_trailing_semicolon_cur_cur
  907                | "table" '(' optional_expr_map_tuple_list ')'
  908                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  909                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  910 array_comprehension_where: %empty
  911                          | "end of expression" "where" expr

  912 optional_comma: %empty
  913               | ','

  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  916                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  917                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  918                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  919                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23 123 139 459
    '#' (35) 748 750 796
    '$' (36) 20 354 739 741
    '%' (37) 43 50 159 471
    '&' (38) 167 357 478 597 607 746 747 752
    '(' (40) 110 121 127 134 135 267 293 294 295 296 323 324 327 328 343 344 345 346 347 348 361 366 419 420 421 422 424 434 435 436 437 438 442 443 444 445 446 447 448 489 490 500 501 502 503 532 534 535 536 537 538 540 541 542 543 544 545 546 547 548 549 575 609 672 713 714 738 739 741 821 822 823 824 830 831 854 855 857 860 863 866 875 878 886 889 892 893 896 897 900 907 908 909
    ')' (41) 110 121 127 134 135 267 293 294 295 296 323 324 327 328 343 344 345 346 347 348 361 366 419 420 421 422 424 434 435 436 437 438 442 443 444 445 446 447 448 489 490 500 501 502 503 532 534 535 536 537 538 540 541 542 543 544 545 546 547 548 549 575 609 672 713 714 738 739 741 821 822 823 824 830 831 854 855 857 860 863 866 875 878 886 889 892 893 896 897 900 907 908 909
    '*' (42) 157 469 499
    '+' (43) 155 461 467
    ',' (44) 59 99 112 130 320 350 363 420 580 611 612 674 675 723 819 820 823 824 831 872 904 913
    '-' (45) 156 462 468 742 745 747 750
    '.' (46) 51 184 186 187 432 433 434 435 436 437 438 441 492 494 496 542 544 545
    '/' (47) 52 158 470
    ':' (58) 35 61 62 137 321 322 323 324 505 582 588 599 600 613 614 615 653 655
    "end of expression" (59) 71 348 829 880 902 911 914 915 916 917 918 919
    '<' (60) 160 238 274 277 290 333 336 339 342 344 345 347 348 428 431 472 502 503 508 514 519 722 737 741 756 760 763 766 770 773 777 780 784 787 790 793 860 863 866 869 878 886 889 892 896 900 908 909
    '=' (61) 91 103 104 105 106 107 108 110 358 380 402 594 603 633 638
    '>' (62) 161 238 274 277 290 333 336 339 342 344 345 347 348 428 431 473 502 503 508 514 519 722 737 741 756 760 763 766 770 773 777 780 784 787 790 793 860 863 866 869 878 886 889 892 896 900 908 909
    '?' (63) 196 197 505 516 519 520 547 753
    '@' (64) 113 114 355 356 425 428 431 549
    '[' (91) 132 182 419 420 436 491 492 572 727 728 734 742 881 914 915
    ']' (93) 132 182 183 321 322 325 326 365 419 420 436 491 492 493 494 551 572 727 728 734 742 840 842 844 847 881 914 915 916 917
    '^' (94) 169 480
    "begin of code block" (123) 230 905 918
    '|' (124) 168 479 795 796
    "end of code block" (125) 232 838 840 847 905 917 918 919
    '~' (126) 140 460
    error (256) 262 441
    "lexer error" (258)
    "capture" (259) 366
    "struct" (260) 660 662 860 886
    "class" (261) 659 661 863
    "let" (262) 312 315
    "def" (263) 223 569 571
    "while" (264) 88
    "if" (265) 72 84
    "static_if" (266) 73
    "else" (267) 68 76
    "for" (268) 86 914 915 916 917 918 919
    "recover" (269) 311
    "true" (270) 96 107 455
    "false" (271) 97 108 456
    "new" (272) 292 293 294 295 296 297
    "typeinfo" (273) 343 344 345 346 347 348
    "type" (274) 101 342 508 514 519 737
    "in" (275) 86 102 914 915 916 917 918 919
    "is" (276) 192 194 508 509 510 548
    "as" (277) 54 193 195 196 197 511 514 515 516 519 520 546 547
    "elif" (278) 65
    "static_elif" (279) 66
    "array" (280) 760 886 889 892 893 896
    "return" (281) 300 301 302 304 305
    "null" (282) 449
    "break" (283) 298
    "try" (284) 311
    "options" (285) 44
    "table" (286) 763 907 908 909
    "expect" (287) 57
    "const" (288) 557 744 745 751
    "require" (289) 45 117
    "operator" (290) 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
    "enum" (291) 650 653
    "finally" (292) 235
    "delete" (293) 190 286 287
    "deref" (294) 500
    "typedef" (295) 641 643
    "typedecl" (296) 738
    "with" (297) 89
    "aka" (298) 610 612 673 675
    "assume" (299) 91
    "cast" (300) 333
    "override" (301) 554
    "abstract" (302) 569
    "upcast" (303) 336
    "iterator" (304) 766 915
    "var" (305) 313 316
    "addr" (306) 501
    "continue" (307) 299
    "where" (308) 837 911
    "pass" (309) 259
    "reinterpret" (310) 339
    "module" (311) 24
    "public" (312) 18 56 226 559 626 636 646 665
    "label" (313) 62 63
    "goto" (314) 63 64
    "implicit" (315) 749
    "explicit" (316) 287 743
    "shared" (317) 623
    "private" (318) 19 118 225 560 625 635 645 664
    "smart_ptr" (319) 756
    "unsafe" (320) 87 532
    "inscope" (321) 23 317
    "static" (322) 562
    "fixed_array" (323) 897 900
    "default" (324) 869
    "uninitialized" (325) 296 443 445 851
    "bool" (326) 198 676
    "void" (327) 696
    "string" (328) 199 677
    "auto" (329) 712 713
    "int" (330) 200 678 703
    "int2" (331) 201 682
    "int3" (332) 202 683
    "int4" (333) 203 684
    "uint" (334) 204 685 706
    "bitfield" (335) 702 722 811
    "uint2" (336) 205 689
    "uint3" (337) 206 690
    "uint4" (338) 207 691
    "float" (339) 208 692
    "float2" (340) 209 693
    "float3" (341) 210 694
    "float4" (342) 211 695
    "range" (343) 212 697
    "urange" (344) 213 698
    "range64" (345) 214 699
    "urange64" (346) 215 700
    "block" (347) 767 770 773
    "int64" (348) 216 681 709
    "uint64" (349) 217 688 710
    "double" (350) 218 701
    "function" (351) 774 777 780
    "lambda" (352) 781 784 787
    "int8" (353) 219 679 704
    "uint8" (354) 220 686 707
    "int16" (355) 221 680 705
    "uint16" (356) 222 687 708
    "tuple" (357) 790 801 875 878 889
    "variant" (358) 793 806 866 892
    "generator" (359) 238 502 503
    "yield" (360) 306 307 309 310
    "sealed" (361) 555 657
    "template" (362) 119 661 662
    "+=" (363) 141 389 410
    "-=" (364) 142 390 411
    "/=" (365) 144 392 413
    "*=" (366) 143 391 412
    "%=" (367) 145 393 414
    "&=" (368) 146 383 404
    "|=" (369) 147 384 405
    "^=" (370) 148 385 406
    "<<" (371) 174 463
    ">>" (372) 175 464
    "++" (373) 170 172 485 487
    "--" (374) 171 173 486 488
    "<=" (375) 165 476
    "<<=" (376) 176 394 415
    ">>=" (377) 177 395 416
    ">=" (378) 166 477
    "==" (379) 163 474 751 752
    "!=" (380) 164 475
    "->" (381) 421 422
    "<-" (382) 302 305 307 310 353 359 381 403 595 604
    "??" (383) 191 504 757
    "?." (384) 185 188 495 496 543 545
    "?[" (385) 183 493 494
    "<|" (386) 528
    " <|" (387) 278
    "$ <|" (388) 281 400
    "@ <|" (389) 279 398
    "@@ <|" (390) 280 399
    "|>" (391) 128 529 530
    ":=" (392) 187 189 360 382 605 818 820 822 824
    "<<<" (393) 178 465
    ">>>" (394) 179 466
    "<<<=" (395) 180 396 417
    ">>>=" (396) 181 397 418
    "=>" (397) 352 353 871 873
    "::" (398) 284 285
    "&&" (399) 124 152 481
    "||" (400) 125 153 482
    "^^" (401) 126 154 483
    "&&=" (402) 149 386 407
    "||=" (403) 150 387 408
    "^^=" (404) 151 388 409
    ".." (405) 162 484
    "$$" (406) 534
    "$i" (407) 424 535 609 672
    "$v" (408) 536
    "$b" (409) 537
    "$a" (410) 538 575
    "$t" (411) 714
    "$c" (412) 540 541 549
    "$f" (413) 542 543 544 545 546 547 548 821 822 823 824
    "..." (414) 539
    "[[" (415) 321 322 325 326 365 551 852 853 854 855 882 916
    "[{" (416) 856 857 883 917
    "{{" (417) 906 919
    "new scope" <i> (418) 231
    "close scope" <i> (419) 233
    "end of line" (420) 70 619
    "integer constant" <i> (421) 60 61 62 63 94 105 372
    "long integer constant" <i64> (422) 374
    "unsigned integer constant" <ui> (423) 373
    "unsigned long integer constant" <ui64> (424) 375
    "unsigned int8 constant" <ui> (425) 376
    "floating point constant" <fd> (426) 95 106 377
    "double constant" <d> (427) 378
    "name" <s> (428) 21 46 54 91 93 100 104 138 186 187 188 194 195 197 283 284 285 319 320 344 345 347 348 357 358 359 360 361 421 422 432 433 434 435 436 495 496 510 511 516 531 582 588 608 610 611 612 632 633 638 647 658 671 673 674 675 713 715 716 719 801 806 811 817 818 819 820
    "keyword" <s> (429) 47 263 274
    "type function" <s> (430) 48 277
    "start of the string" (431) 29 30 39
    STRING_CHARACTER <ch> (432) 25 27 32 40 41
    STRING_CHARACTER_ESC (433) 26 28
    "end of the string" (434) 29 30 39
    "{" (435) 38
    "}" (436) 38
    "end of failed eader macro" (437)
    ";}}" (438) 839
    ";}]" (439) 841 848
    ";]]" (440) 843 845
    ",]]" (441) 846
    ",}]" (442) 849
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 24
    module_name <s> (226)
        on left: 20 21
        on right: 24
    optional_not_required <b> (227)
        on left: 22 23
        on right: 24
    module_declaration (228)
        on left: 24
        on right: 2
    character_sequence <s> (229)
        on left: 25 26 27 28
        on right: 27 28 29 37
    string_constant <s> (230)
        on left: 29 30
        on right: 92 103
    format_string <s> (231)
        on left: 31 32
        on right: 32 35
    optional_format_string <s> (232)
        on left: 33 35
        on right: 38
    $@1 (233)
        on left: 34
        on right: 35
    string_builder_body <pExpression> (234)
        on left: 36 37 38
        on right: 37 38 39
    string_builder <pExpression> (235)
        on left: 39
        on right: 453
    reader_character_sequence (236)
        on left: 40 41
        on right: 41 43
    expr_reader <pExpression> (237)
        on left: 43
        on right: 16 452
    $@2 (238)
        on left: 42
        on right: 43
    options_declaration (239)
        on left: 44
        on right: 9
    require_declaration (240)
        on left: 45
        on right: 8
    keyword_or_name <s> (241)
        on left: 46 47 48
        on right: 49 51 52
    require_module_name <s> (242)
        on left: 49 50 51 52
        on right: 50 51 52 53 54
    require_module (243)
        on left: 53 54
        on right: 45
    is_public_module <b> (244)
        on left: 55 56
        on right: 53 54
    expect_declaration (245)
        on left: 57
        on right: 7
    expect_list (246)
        on left: 58 59
        on right: 57 59
    expect_error (247)
        on left: 60 61
        on right: 58 59
    expression_label <pExpression> (248)
        on left: 62
        on right: 257
    expression_goto <pExpression> (249)
        on left: 63 64
        on right: 258
    elif_or_static_elif <b> (250)
        on left: 65 66
        on right: 69
    expression_else <pExpression> (251)
        on left: 67 68 69
        on right: 69 82
    semicolon (252)
        on left: 70 71
        on right: 15 16 84 115 239 243 244 251 252 257 258 259 303 308 321 323 325 327 565 567 569 572 578 579 613 614 616 631 632 633 639 640 643 716 718 719 724
    if_or_static_if <b> (253)
        on left: 72 73
        on right: 82
    expression_else_one_liner <pExpression> (254)
        on left: 74 76
        on right: 84
    $@3 (255)
        on left: 75
        on right: 76
    expression_if_one_liner <pExpression> (256)
        on left: 77 78 79 80 81
        on right: 76 84
    expression_if_then_else <pExpression> (257)
        on left: 82 84
        on right: 255
    $@4 (258)
        on left: 83
        on right: 84
    expression_for_loop <pExpression> (259)
        on left: 86
        on right: 250
    $@5 (260)
        on left: 85
        on right: 86
    expression_unsafe <pExpression> (261)
        on left: 87
        on right: 247
    expression_while_loop <pExpression> (262)
        on left: 88
        on right: 246
    expression_with <pExpression> (263)
        on left: 89
        on right: 248
    expression_with_alias <pExpression> (264)
        on left: 91
        on right: 249
    $@6 (265)
        on left: 90
        on right: 91
    annotation_argument_value <aa> (266)
        on left: 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_value_list <aaList> (267)
        on left: 98 99
        on right: 99 110
    annotation_argument_name <s> (268)
        on left: 100 101 102
        on right: 103 104 105 106 107 108 109 110
    annotation_argument <aa> (269)
        on left: 103 104 105 106 107 108 109 110
        on right: 111 112 113 114
    annotation_argument_list <aaList> (270)
        on left: 111 112
        on right: 44 112 121 551
    metadata_argument_list <aaList> (271)
        on left: 113 114 115
        on right: 114 115 552
    annotation_declaration_name <s> (272)
        on left: 116 117 118 119
        on right: 120 121
    annotation_declaration_basic <fa> (273)
        on left: 120 121
        on right: 122
    annotation_declaration <fa> (274)
        on left: 122 123 124 125 126 127 128
        on right: 123 124 125 126 127 128 129 130
    annotation_list <faList> (275)
        on left: 129 130
        on right: 130 132 572
    optional_annotation_list <faList> (276)
        on left: 131 132
        on right: 223 368 369 371 569 571 650 653 670
    optional_function_argument_list <pVarDeclList> (277)
        on left: 133 134 135
        on right: 227 368 369 371 431 773 780 787
    optional_function_type <pTypeDecl> (278)
        on left: 136 137
        on right: 227 368 369 371 431 773 780 787
    function_name <s> (279)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222
        on right: 227
    global_function_declaration (280)
        on left: 223
        on right: 6
    optional_public_or_private_function <b> (281)
        on left: 224 225 226
        on right: 229
    function_declaration_header <pFuncDecl> (282)
        on left: 227
        on right: 229 569 571
    function_declaration <pFuncDecl> (283)
        on left: 229
        on right: 223
    $@7 (284)
        on left: 228
        on right: 229
    open_block (285)
        on left: 230 231
        on right: 234 235 627 641 650 653 667 801 806 811
    close_block (286)
        on left: 232 233
        on right: 234 235 627 641 650 653 667 801 806 811
    expression_block <pExpression> (287)
        on left: 234 235
        on right: 68 69 82 86 87 88 89 229 263 311 351 367 371 571
    expr_call_pipe <pExpression> (288)
        on left: 236 237 238
        on right: 282 401
    expression_any <pExpression> (289)
        on left: 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259
        on right: 261
    expressions <pExpression> (290)
        on left: 260 261 262
        on right: 234 235 261 262
    expr_keyword <pExpression> (291)
        on left: 263
        on right: 241
    optional_expr_list <pExpression> (292)
        on left: 264 265
        on right: 267 739 741 881 896
    optional_expr_list_in_braces <pExpression> (293)
        on left: 266 267
        on right: 277
    optional_expr_map_tuple_list <pExpression> (294)
        on left: 268 269
        on right: 905 907 908 909
    type_declaration_no_options_list <pTypeDeclList> (295)
        on left: 270 271
        on right: 271 274 277 741
    expression_keyword <pExpression> (296)
        on left: 274 277
        on right: 237 533
    $@8 (297)
        on left: 272
        on right: 274
    $@9 (298)
        on left: 273
        on right: 274
    $@10 (299)
        on left: 275
        on right: 277
    $@11 (300)
        on left: 276
        on right: 277
    expr_pipe <pExpression> (301)
        on left: 278 279 280 281 282
        on right: 240 304 305 309 310 322 324 326 328 615 617
    name_in_namespace <s> (302)
        on left: 283 284 285
        on right: 43 116 343 344 345 346 347 348 419 420 423 442 443 444 445 446 450 531 655 711 739 741
    expression_delete <pExpression> (303)
        on left: 286 287
        on right: 244
    new_type_declaration <pTypeDecl> (304)
        on left: 290 291
        on right: 292 293 294 295 296
    $@12 (305)
        on left: 288
        on right: 290
    $@13 (306)
        on left: 289
        on right: 290
    expr_new <pExpression> (307)
        on left: 292 293 294 295 296 297
        on right: 524
    expression_break <pExpression> (308)
        on left: 298
        on right: 80 251
    expression_continue <pExpression> (309)
        on left: 299
        on right: 81 252
    expression_return_no_pipe <pExpression> (310)
        on left: 300 301 302
        on right: 78 303
    expression_return <pExpression> (311)
        on left: 303 304 305
        on right: 253
    expression_yield_no_pipe <pExpression> (312)
        on left: 306 307
        on right: 79 308
    expression_yield <pExpression> (313)
        on left: 308 309 310
        on right: 254
    expression_try_catch <pExpression> (314)
        on left: 311
        on right: 256
    kwd_let_var_or_nothing <b> (315)
        on left: 312 313 314
        on right: 573 574
    kwd_let <b> (316)
        on left: 315 316
        on right: 329 330 627 629
    optional_in_scope <b> (317)
        on left: 317 318
        on right: 329 330
    tuple_expansion <pNameList> (318)
        on left: 319 320
        on right: 320 321 322 323 324 325 326 327 328
    tuple_expansion_variable_declaration <pVarDecl> (319)
        on left: 321 322 323 324 325 326 327 328
        on right: 330
    expression_let <pExpression> (320)
        on left: 329 330
        on right: 245
    expr_cast <pExpression> (321)
        on left: 333 336 339
        on right: 523
    $@14 (322)
        on left: 331
        on right: 333
    $@15 (323)
        on left: 332
        on right: 333
    $@16 (324)
        on left: 334
        on right: 336
    $@17 (325)
        on left: 335
        on right: 336
    $@18 (326)
        on left: 337
        on right: 339
    $@19 (327)
        on left: 338
        on right: 339
    expr_type_decl <pExpression> (328)
        on left: 342
        on right: 522
    $@20 (329)
        on left: 340
        on right: 342
    $@21 (330)
        on left: 341
        on right: 342
    expr_type_info <pExpression> (331)
        on left: 343 344 345 346 347 348
        on right: 521
    expr_list <pExpression> (332)
        on left: 349 350
        on right: 86 265 294 301 302 350 420 422 435 438 446 448 489 541 875 893 897 900 914 915 916 917 918 919
    block_or_simple_block <pExpression> (333)
        on left: 351 352 353
        on right: 368 369
    block_or_lambda <i> (334)
        on left: 354 355 356
        on right: 368 369 371
    capture_entry <pCapt> (335)
        on left: 357 358 359 360 361
        on right: 362 363
    capture_list <pCaptList> (336)
        on left: 362 363
        on right: 363 365 366
    optional_capture_list <pCaptList> (337)
        on left: 364 365 366
        on right: 238 368 369 371 502 503
    expr_block <pExpression> (338)
        on left: 367 368
        on right: 278 279 280 281 398 399 400 837
    expr_full_block <pExpression> (339)
        on left: 369
        on right: 527
    expr_full_block_assumed_piped <pExpression> (340)
        on left: 371
        on right: 236 237 238
    $@22 (341)
        on left: 370
        on right: 371
    expr_numeric_const <pExpression> (342)
        on left: 372 373 374 375 376 377 378
        on right: 451
    expr_assign <pExpression> (343)
        on left: 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397
        on right: 243 278
    expr_assign_pipe_right <pExpression> (344)
        on left: 398 399 400 401
        on right: 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418
    expr_assign_pipe <pExpression> (345)
        on left: 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418
        on right: 242
    expr_named_call <pExpression> (346)
        on left: 419 420
        on right: 526
    expr_method_call <pExpression> (347)
        on left: 421 422
        on right: 525
    func_addr_name <pExpression> (348)
        on left: 423 424
        on right: 425 428 431
    func_addr_expr <pExpression> (349)
        on left: 425 428 431
        on right: 497
    $@23 (350)
        on left: 426
        on right: 428
    $@24 (351)
        on left: 427
        on right: 428
    $@25 (352)
        on left: 429
        on right: 431
    $@26 (353)
        on left: 430
        on right: 431
    expr_field <pExpression> (354)
        on left: 432 433 434 435 436 437 438 441
        on right: 457
    $@27 (355)
        on left: 439
        on right: 441
    $@28 (356)
        on left: 440
        on right: 441
    expr_call <pExpression> (357)
        on left: 442 443 444 445 446 447 448
        on right: 498
    expr <pExpression> (358)
        on left: 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 508 509 510 511 514 515 516 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533
        on right
    $@29 (359)
        on left: 506
        on right: 508
    $@30 (360)
        on left: 507
        on right: 508
    $@31 (361)
        on left: 512
        on right: 514
    $@32 (362)
        on left: 513
        on right: 514
    $@33 (363)
        on left: 517
        on right: 519
    $@34 (364)
        on left: 518
        on right: 519
    expr_mtag <pExpression> (365)
        on left: 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549
        on right: 458
    optional_field_annotation <aaList> (366)
        on left: 550 551 552
        on right: 563 573 574 621 629
    optional_override <i> (367)
        on left: 553 554 555
        on right: 563 571
    optional_constant <b> (368)
        on left: 556 557
        on right: 569 571
    optional_public_or_private_member_variable <b> (369)
        on left: 558 559 560
        on right: 563 569 571
    optional_static_member_variable <b> (370)
        on left: 561 562
        on right: 563 571
    structure_variable_declaration <pVarDecl> (371)
        on left: 563
        on right: 567
    struct_variable_declaration_list <pVarDeclList> (372)
        on left: 564 565 567 569 571 572
        on right: 565 567 569 571 572 667
    $@35 (373)
        on left: 566
        on right: 567
    $@36 (374)
        on left: 568
        on right: 569
    $@37 (375)
        on left: 570
        on right: 571
    function_argument_declaration_no_type <pVarDecl> (376)
        on left: 573
        on right: 576 578
    function_argument_declaration_type <pVarDecl> (377)
        on left: 574 575
        on right: 577 579 580
    function_argument_list <pVarDeclList> (378)
        on left: 576 577 578 579 580
        on right: 135 578 579 580
    tuple_type <pVarDecl> (379)
        on left: 581 582
        on right: 583 584 587
    tuple_type_list <pVarDeclList> (380)
        on left: 583 584
        on right: 584 790 878 889
    tuple_alias_type_list <pVarDeclList> (381)
        on left: 585 586 587
        on right: 586 587 801
    variant_type <pVarDecl> (382)
        on left: 588
        on right: 589 590 593
    variant_type_list <pVarDeclList> (383)
        on left: 589 590
        on right: 590 793 866 892
    variant_alias_type_list <pVarDeclList> (384)
        on left: 591 592 593
        on right: 592 593 806
    copy_or_move <b> (385)
        on left: 594 595
        on right: 598 600 817 819 821 823
    variable_declaration_no_type <pVarDecl> (386)
        on left: 596 597 598
        on right: 573 602
    variable_declaration_type <pVarDecl> (387)
        on left: 599 600
        on right: 574 601
    variable_declaration <pVarDecl> (388)
        on left: 601 602
        on right: 563
    copy_or_move_or_clone <i> (389)
        on left: 603 604 605
        on right: 321 322 323 324 325 326 327 328 614 615 616 617
    optional_ref <b> (390)
        on left: 606 607
        on right: 325 326 327 328 616 617
    let_variable_name_with_pos_list <pNameWithPosList> (391)
        on left: 608 609 610 611 612
        on right: 611 612 613 614 615 616 617
    let_variable_declaration <pVarDecl> (392)
        on left: 613 614 615 616 617
        on right: 329 621 629
    global_variable_declaration_list <pVarDeclList> (393)
        on left: 618 619 621
        on right: 619 621 627
    $@38 (394)
        on left: 620
        on right: 621
    optional_shared <b> (395)
        on left: 622 623
        on right: 24 627 629
    optional_public_or_private_variable <b> (396)
        on left: 624 625 626
        on right: 627 629
    global_let (397)
        on left: 627 629
        on right: 5
    $@39 (398)
        on left: 628
        on right: 629
    enum_list <pEnum> (399)
        on left: 630 631 632 633
        on right: 631 632 633 650 653
    optional_public_or_private_alias <b> (400)
        on left: 634 635 636
        on right: 638 801 806 811
    single_alias (401)
        on left: 638
        on right: 639 640 643
    $@40 (402)
        on left: 637
        on right: 638
    alias_list (403)
        on left: 639 640
        on right: 640 641
    alias_declaration (404)
        on left: 641 643
        on right: 10
    $@41 (405)
        on left: 642
        on right: 643
    optional_public_or_private_enum <b> (406)
        on left: 644 645 646
        on right: 650 653
    enum_name <pEnum> (407)
        on left: 647
        on right: 650 653
    enum_declaration (408)
        on left: 650 653
        on right: 4
    $@42 (409)
        on left: 648
        on right: 650
    $@43 (410)
        on left: 649
        on right: 650
    $@44 (411)
        on left: 651
        on right: 653
    $@45 (412)
        on left: 652
        on right: 653
    optional_structure_parent <s> (413)
        on left: 654 655
        on right: 658
    optional_sealed <b> (414)
        on left: 656 657
        on right: 658
    structure_name <pStructure> (415)
        on left: 658
        on right: 670
    class_or_struct <i> (416)
        on left: 659 660 661 662
        on right: 670
    optional_public_or_private_structure <b> (417)
        on left: 663 664 665
        on right: 670
    optional_struct_variable_declaration_list <pVarDeclList> (418)
        on left: 666 667
        on right: 670
    structure_declaration (419)
        on left: 670
        on right: 3
    $@46 (420)
        on left: 668
        on right: 670
    $@47 (421)
        on left: 669
        on right: 670
    variable_name_with_pos_list <pNameWithPosList> (422)
        on left: 671 672 673 674 675
        on right: 86 596 597 598 599 600 674 675 914 915 916 917 918 919
    basic_type_declaration <type> (423)
        on left: 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702
        on right: 437 438 447 448 509 515 520 530 729
    enum_basic_type_declaration <type> (424)
        on left: 703 704 705 706 707 708 709 710
        on right: 653
    structure_type_declaration <pTypeDecl> (425)
        on left: 711
        on right: 291 732
    auto_type_declaration <pTypeDecl> (426)
        on left: 712 713 714
        on right: 730
    bitfield_bits <pNameList> (427)
        on left: 715 716
        on right: 716 722
    bitfield_alias_bits <pNameList> (428)
        on left: 717 718 719
        on right: 718 719 811
    bitfield_type_declaration <pTypeDecl> (429)
        on left: 722
        on right: 731
    $@48 (430)
        on left: 720
        on right: 722
    $@49 (431)
        on left: 721
        on right: 722
    c_or_s (432)
        on left: 723 724
        on right: 271 345 584 586 587 590 592 593 726 909
    table_type_pair <aTypePair> (433)
        on left: 725 726
        on right: 763
    dim_list <pTypeDecl> (434)
        on left: 727 728
        on right: 728 733
    type_declaration_no_options <pTypeDecl> (435)
        on left: 729 730 731 732 733 734 737 738 739 741 742 743 744 745 746 747 748 749 750 751 752 753 756 757 760 763 766 767 770 773 774 777 780 781 784 787 790 793
        on right: 238 321 322 323 324 333 336 339 428 502 503 508 613 614 615 733 734 742 743 744 745 746 747 748 749 750 751 752 753 757 794 795 852 853 854 855 856 857 860 863 869 882 883 886 896 900 908 909
    $@50 (436)
        on left: 735
        on right: 737
    $@51 (437)
        on left: 736
        on right: 737
    $@52 (438)
        on left: 740
        on right: 741
    $@53 (439)
        on left: 754
        on right: 756
    $@54 (440)
        on left: 755
        on right: 756
    $@55 (441)
        on left: 758
        on right: 760
    $@56 (442)
        on left: 759
        on right: 760
    $@57 (443)
        on left: 761
        on right: 763
    $@58 (444)
        on left: 762
        on right: 763
    $@59 (445)
        on left: 764
        on right: 766
    $@60 (446)
        on left: 765
        on right: 766
    $@61 (447)
        on left: 768
        on right: 770
    $@62 (448)
        on left: 769
        on right: 770
    $@63 (449)
        on left: 771
        on right: 773
    $@64 (450)
        on left: 772
        on right: 773
    $@65 (451)
        on left: 775
        on right: 777
    $@66 (452)
        on left: 776
        on right: 777
    $@67 (453)
        on left: 778
        on right: 780
    $@68 (454)
        on left: 779
        on right: 780
    $@69 (455)
        on left: 782
        on right: 784
    $@70 (456)
        on left: 783
        on right: 784
    $@71 (457)
        on left: 785
        on right: 787
    $@72 (458)
        on left: 786
        on right: 787
    $@73 (459)
        on left: 788
        on right: 790
    $@74 (460)
        on left: 789
        on right: 790
    $@75 (461)
        on left: 791
        on right: 793
    $@76 (462)
        on left: 792
        on right: 793
    type_declaration <pTypeDecl> (463)
        on left: 794 795 796
        on right: 137 270 271 290 342 514 519 581 582 588 599 600 638 725 726 737 756 760 766 770 777 784 795 796
    tuple_alias_declaration (464)
        on left: 801
        on right: 12
    $@77 (465)
        on left: 797
        on right: 801
    $@78 (466)
        on left: 798
        on right: 801
    $@79 (467)
        on left: 799
        on right: 801
    $@80 (468)
        on left: 800
        on right: 801
    variant_alias_declaration (469)
        on left: 806
        on right: 11
    $@81 (470)
        on left: 802
        on right: 806
    $@82 (471)
        on left: 803
        on right: 806
    $@83 (472)
        on left: 804
        on right: 806
    $@84 (473)
        on left: 805
        on right: 806
    bitfield_alias_declaration (474)
        on left: 811
        on right: 13
    $@85 (475)
        on left: 807
        on right: 811
    $@86 (476)
        on left: 808
        on right: 811
    $@87 (477)
        on left: 809
        on right: 811
    $@88 (478)
        on left: 810
        on right: 811
    make_decl <pExpression> (479)
        on left: 812 813 814 815 816
        on right: 297 454
    make_struct_fields <pMakeStruct> (480)
        on left: 817 818 819 820 821 822 823 824
        on right: 419 420 436 819 820 823 824 826 827 828 829 830 831 832
    make_variant_dim <pExpression> (481)
        on left: 825 826
        on right: 866 892
    make_struct_single <pExpression> (482)
        on left: 827
        on right: 295 296 444 445 490
    make_struct_dim <pExpression> (483)
        on left: 828 829
        on right: 829 852 855 856 857
    make_struct_dim_list <pExpression> (484)
        on left: 830 831
        on right: 831 833
    make_struct_dim_decl <pExpression> (485)
        on left: 832 833
        on right: 834
    optional_make_struct_dim_decl <pExpression> (486)
        on left: 834 835
        on right: 860 863 878 886 889
    optional_block <pExpression> (487)
        on left: 836 837
        on right: 852 853 854 855 856 857
    optional_trailing_semicolon_cur_cur (488)
        on left: 838 839
        on right: 906
    optional_trailing_semicolon_cur_sqr (489)
        on left: 840 841
        on right: 883
    optional_trailing_semicolon_sqr_sqr (490)
        on left: 842 843
        on right: 882
    optional_trailing_delim_sqr_sqr (491)
        on left: 844 845 846
        on right: 852 853 854 855
    optional_trailing_delim_cur_sqr (492)
        on left: 847 848 849
        on right: 856 857
    use_initializer <b> (493)
        on left: 850 851
        on right: 293 860 863 866 869 878 886 889
    make_struct_decl <pExpression> (494)
        on left: 852 853 854 855 856 857 860 863 866 869
        on right: 812
    $@89 (495)
        on left: 858
        on right: 860
    $@90 (496)
        on left: 859
        on right: 860
    $@91 (497)
        on left: 861
        on right: 863
    $@92 (498)
        on left: 862
        on right: 863
    $@93 (499)
        on left: 864
        on right: 866
    $@94 (500)
        on left: 865
        on right: 866
    $@95 (501)
        on left: 867
        on right: 869
    $@96 (502)
        on left: 868
        on right: 869
    make_tuple <pExpression> (503)
        on left: 870 871 872
        on right: 872 879 880
    make_map_tuple <pExpression> (504)
        on left: 873 874
        on right: 901 902 903 904 918 919
    make_tuple_call <pExpression> (505)
        on left: 875 878
        on right: 816
    $@97 (506)
        on left: 876
        on right: 878
    $@98 (507)
        on left: 877
        on right: 878
    make_dim <pExpression> (508)
        on left: 879 880
        on right: 880 882 883
    make_dim_decl <pExpression> (509)
        on left: 881 882 883 886 889 892 893 896 897 900
        on right: 813
    $@99 (510)
        on left: 884
        on right: 886
    $@100 (511)
        on left: 885
        on right: 886
    $@101 (512)
        on left: 887
        on right: 889
    $@102 (513)
        on left: 888
        on right: 889
    $@103 (514)
        on left: 890
        on right: 892
    $@104 (515)
        on left: 891
        on right: 892
    $@105 (516)
        on left: 894
        on right: 896
    $@106 (517)
        on left: 895
        on right: 896
    $@107 (518)
        on left: 898
        on right: 900
    $@108 (519)
        on left: 899
        on right: 900
    make_table <pExpression> (520)
        on left: 901 902
        on right: 902 906
    expr_map_tuple_list <pExpression> (521)
        on left: 903 904
        on right: 269 904
    make_table_decl <pExpression> (522)
        on left: 905 906 907 908 909
        on right: 814
    array_comprehension_where <pExpression> (523)
        on left: 910 911
        on right: 914 915 916 917 918 919
    optional_comma <b> (524)
        on left: 912 913
        on right: 265 267 269 489 827 833 875 893 897 900
    array_comprehension <pExpression> (525)
        on left: 914 915 916 917 918 919
        on right: 815


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  315 kwd_let: "let" .

    $default  reduce using rule 315 (kwd_let)


State 4

   44 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   57 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   45 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  641 alias_declaration: "typedef" . open_block alias_list close_block
  643                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 642 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  316 kwd_let: "var" .

    $default  reduce using rule 316 (kwd_let)


State 9

   24 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  811 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 634 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  801 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 634 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  806 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 634 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   70 semicolon: "end of line" .

    $default  reduce using rule 70 (semicolon)


State 14

   71 semicolon: "end of expression" .

    $default  reduce using rule 71 (semicolon)


State 15

   43 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  132 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  223 global_function_declaration: optional_annotation_list . "def" function_declaration
  650 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  653                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  670 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  627 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  629           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 622 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  101 annotation_argument_name: "type" .

    $default  reduce using rule 101 (annotation_argument_name)


State 35

  102 annotation_argument_name: "in" .

    $default  reduce using rule 102 (annotation_argument_name)


State 36

  100 annotation_argument_name: "name" .

    $default  reduce using rule 100 (annotation_argument_name)


State 37

  103 annotation_argument: annotation_argument_name . '=' string_constant
  104                    | annotation_argument_name . '=' "name"
  105                    | annotation_argument_name . '=' "integer constant"
  106                    | annotation_argument_name . '=' "floating point constant"
  107                    | annotation_argument_name . '=' "true"
  108                    | annotation_argument_name . '=' "false"
  109                    | annotation_argument_name .
  110                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 109 (annotation_argument)


State 38

  111 annotation_argument_list: annotation_argument .

    $default  reduce using rule 111 (annotation_argument_list)


State 39

   44 options_declaration: "options" annotation_argument_list .
  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 44 (options_declaration)


State 40

   60 expect_error: "integer constant" .
   61             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 60 (expect_error)


State 41

   57 expect_declaration: "expect" expect_list .
   59 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 57 (expect_declaration)


State 42

   58 expect_list: expect_error .

    $default  reduce using rule 58 (expect_list)


State 43

   46 keyword_or_name: "name" .

    $default  reduce using rule 46 (keyword_or_name)


State 44

   47 keyword_or_name: "keyword" .

    $default  reduce using rule 47 (keyword_or_name)


State 45

   48 keyword_or_name: "type function" .

    $default  reduce using rule 48 (keyword_or_name)


State 46

   50 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   49 require_module_name: keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 48

   51 require_module_name: require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name
   53 require_module: require_module_name . is_public_module
   54               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 94


State 49

   45 require_declaration: "require" require_module .

    $default  reduce using rule 45 (require_declaration)


State 50

  231 open_block: "new scope" .

    $default  reduce using rule 231 (open_block)


State 51

  230 open_block: "begin of code block" .

    $default  reduce using rule 230 (open_block)


State 52

  641 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 634 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  643 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 634 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   24 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 83

    $default  reduce using rule 622 (optional_shared)

    optional_shared  go to state 99


State 57

  636 optional_public_or_private_alias: "public" .

    $default  reduce using rule 636 (optional_public_or_private_alias)


State 58

  635 optional_public_or_private_alias: "private" .

    $default  reduce using rule 635 (optional_public_or_private_alias)


State 59

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 807 ($@85)

    $@85  go to state 100


State 60

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 797 ($@77)

    $@77  go to state 101


State 61

  806 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 802 ($@81)

    $@81  go to state 102


State 62

  285 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  283 name_in_namespace: "name" .
  284                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 283 (name_in_namespace)]
    $default  reduce using rule 283 (name_in_namespace)


State 64

   43 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 42 ($@2)

    $@2  go to state 105


State 65

  117 annotation_declaration_name: "require" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 66

  118 annotation_declaration_name: "private" .

    $default  reduce using rule 118 (annotation_declaration_name)


State 67

  119 annotation_declaration_name: "template" .

    $default  reduce using rule 119 (annotation_declaration_name)


State 68

  128 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  123 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  127 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  120 annotation_declaration_basic: annotation_declaration_name .
  121                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 120 (annotation_declaration_basic)


State 72

  122 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 122 (annotation_declaration)


State 73

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  129 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 129 (annotation_list)


State 74

  130 annotation_list: annotation_list . ',' annotation_declaration
  132 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  116 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 116 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  660 class_or_struct: "struct" .

    $default  reduce using rule 660 (class_or_struct)


State 78

  659 class_or_struct: "class" .

    $default  reduce using rule 659 (class_or_struct)


State 79

  223 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 224 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  650 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  653                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 644 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  661 class_or_struct: "template" . "class"
  662                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  670 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 663 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  623 optional_shared: "shared" .

    $default  reduce using rule 623 (optional_shared)


State 84

  627 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  629           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 624 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  103 annotation_argument: annotation_argument_name '=' . string_constant
  104                    | annotation_argument_name '=' . "name"
  105                    | annotation_argument_name '=' . "integer constant"
  106                    | annotation_argument_name '=' . "floating point constant"
  107                    | annotation_argument_name '=' . "true"
  108                    | annotation_argument_name '=' . "false"
  110                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  112 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   61 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   59 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   50 require_module_name: '%' require_module_name .
   51                    | require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 50 (require_module_name)


State 90

   54 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   56 is_public_module: "public" .

    $default  reduce using rule 56 (is_public_module)


State 92

   52 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   51 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   53 require_module: require_module_name is_public_module .

    $default  reduce using rule 53 (require_module)


State 95

  638 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  639 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  640 alias_list: alias_list . single_alias semicolon
  641 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 634 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  643 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   24 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  285 name_in_namespace: "::" "name" .

    $default  reduce using rule 285 (name_in_namespace)


State 104

  284 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   43 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  128                       | "|>" annotation_declaration .

    $default  reduce using rule 128 (annotation_declaration)


State 107

  123 annotation_declaration: '!' annotation_declaration .
  124                       | annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 123 (annotation_declaration)


State 108

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  127                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  121 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  124 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  125 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  126 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  130 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  132 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 132 (optional_annotation_list)


State 115

  226 optional_public_or_private_function: "public" .

    $default  reduce using rule 226 (optional_public_or_private_function)


State 116

  225 optional_public_or_private_function: "private" .

    $default  reduce using rule 225 (optional_public_or_private_function)


State 117

  229 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 228 ($@7)

    $@7  go to state 166


State 118

  223 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 223 (global_function_declaration)


State 119

  646 optional_public_or_private_enum: "public" .

    $default  reduce using rule 646 (optional_public_or_private_enum)


State 120

  645 optional_public_or_private_enum: "private" .

    $default  reduce using rule 645 (optional_public_or_private_enum)


State 121

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  653                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  662 class_or_struct: "template" "struct" .

    $default  reduce using rule 662 (class_or_struct)


State 123

  661 class_or_struct: "template" "class" .

    $default  reduce using rule 661 (class_or_struct)


State 124

  665 optional_public_or_private_structure: "public" .

    $default  reduce using rule 665 (optional_public_or_private_structure)


State 125

  664 optional_public_or_private_structure: "private" .

    $default  reduce using rule 664 (optional_public_or_private_structure)


State 126

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 668 ($@46)

    $@46  go to state 169


State 127

  626 optional_public_or_private_variable: "public" .

    $default  reduce using rule 626 (optional_public_or_private_variable)


State 128

  625 optional_public_or_private_variable: "private" .

    $default  reduce using rule 625 (optional_public_or_private_variable)


State 129

  627 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  629           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 628 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  107 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 107 (annotation_argument)


State 131

  108 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 108 (annotation_argument)


State 132

  105 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 105 (annotation_argument)


State 133

  106 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 106 (annotation_argument)


State 134

  104 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 104 (annotation_argument)


State 135

   29 string_constant: "start of the string" . character_sequence "end of the string"
   30                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  110 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  103 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 103 (annotation_argument)


State 138

  112 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 112 (annotation_argument_list)


State 139

   61 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 61 (expect_error)


State 140

   59 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 59 (expect_list)


State 141

   54 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 184


State 142

   52 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 52 (require_module_name)


State 143

   51 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 51 (require_module_name)


State 144

  638 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 637 ($@40)

    $@40  go to state 185


State 145

  639 alias_list: single_alias semicolon .

    $default  reduce using rule 639 (alias_list)


State 146

  233 close_block: "close scope" .

    $default  reduce using rule 233 (close_block)


State 147

  232 close_block: "end of code block" .

    $default  reduce using rule 232 (close_block)


State 148

  641 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 641 (alias_declaration)


State 149

  640 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  643 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 643 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 187

    $default  reduce using rule 22 (optional_not_required)

    optional_not_required  go to state 188


State 154

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 808 ($@86)

    $@86  go to state 189


State 155

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 798 ($@78)

    $@78  go to state 190


State 156

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 803 ($@82)

    $@82  go to state 191


State 157

  284 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 284 (name_in_namespace)


State 158

   40 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 40 (reader_character_sequence)


State 159

   41 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 192

    $default  reduce using rule 43 (expr_reader)


State 160

  127 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 127 (annotation_declaration)


State 161

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  121 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 193


State 162

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  124                       | annotation_declaration "&&" annotation_declaration .
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 124 (annotation_declaration)


State 163

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  125                       | annotation_declaration "||" annotation_declaration .
  126                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 125 (annotation_declaration)


State 164

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  126                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 126 (annotation_declaration)


State 165

  124 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration . "^^" annotation_declaration
  130 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 130 (annotation_list)


State 166

  229 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 224


State 167

  647 enum_name: "name" .

    $default  reduce using rule 647 (enum_name)


State 168

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  653                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 225

    open_block  go to state 226


State 169

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 227

    $default  reduce using rule 656 (optional_sealed)

    optional_sealed  go to state 228
    structure_name   go to state 229


State 170

  627 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 618 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 230


State 171

  629 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 234


State 172

   25 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 173

   26 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 174

   30 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 30 (string_constant)


State 175

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   29 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236
    "end of the string"   shift, and go to state 237


State 176

   96 annotation_argument_value: "true" .

    $default  reduce using rule 96 (annotation_argument_value)


State 177

   97 annotation_argument_value: "false" .

    $default  reduce using rule 97 (annotation_argument_value)


State 178

   94 annotation_argument_value: "integer constant" .

    $default  reduce using rule 94 (annotation_argument_value)


State 179

   95 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 95 (annotation_argument_value)


State 180

   93 annotation_argument_value: "name" .

    $default  reduce using rule 93 (annotation_argument_value)


State 181

   92 annotation_argument_value: string_constant .

    $default  reduce using rule 92 (annotation_argument_value)


State 182

   98 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 98 (annotation_argument_value_list)


State 183

   99 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 239


State 184

   54 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 54 (require_module)


State 185

  638 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 240


State 186

  640 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 640 (alias_list)


State 187

   23 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 241


State 188

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 24 (module_declaration)


State 189

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 242


State 190

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 243


State 191

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 244


State 192

   41 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 41 (reader_character_sequence)


State 193

  121 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 121 (annotation_declaration_basic)


State 194

  139 function_name: "operator" . '!'
  140              | "operator" . '~'
  141              | "operator" . "+="
  142              | "operator" . "-="
  143              | "operator" . "*="
  144              | "operator" . "/="
  145              | "operator" . "%="
  146              | "operator" . "&="
  147              | "operator" . "|="
  148              | "operator" . "^="
  149              | "operator" . "&&="
  150              | "operator" . "||="
  151              | "operator" . "^^="
  152              | "operator" . "&&"
  153              | "operator" . "||"
  154              | "operator" . "^^"
  155              | "operator" . '+'
  156              | "operator" . '-'
  157              | "operator" . '*'
  158              | "operator" . '/'
  159              | "operator" . '%'
  160              | "operator" . '<'
  161              | "operator" . '>'
  162              | "operator" . ".."
  163              | "operator" . "=="
  164              | "operator" . "!="
  165              | "operator" . "<="
  166              | "operator" . ">="
  167              | "operator" . '&'
  168              | "operator" . '|'
  169              | "operator" . '^'
  172              | "operator" . "++"
  173              | "operator" . "--"
  174              | "operator" . "<<"
  175              | "operator" . ">>"
  176              | "operator" . "<<="
  177              | "operator" . ">>="
  178              | "operator" . "<<<"
  179              | "operator" . ">>>"
  180              | "operator" . "<<<="
  181              | "operator" . ">>>="
  182              | "operator" . '[' ']'
  183              | "operator" . "?[" ']'
  184              | "operator" . '.'
  185              | "operator" . "?."
  186              | "operator" . '.' "name"
  187              | "operator" . '.' "name" ":="
  188              | "operator" . "?." "name"
  189              | "operator" . ":="
  190              | "operator" . "delete"
  191              | "operator" . "??"
  192              | "operator" . "is"
  193              | "operator" . "as"
  194              | "operator" . "is" "name"
  195              | "operator" . "as" "name"
  196              | "operator" . '?' "as"
  197              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 245
    "as"      shift, and go to state 246
    "delete"  shift, and go to state 247
    "+="      shift, and go to state 248
    "-="      shift, and go to state 249
    "/="      shift, and go to state 250
    "*="      shift, and go to state 251
    "%="      shift, and go to state 252
    "&="      shift, and go to state 253
    "|="      shift, and go to state 254
    "^="      shift, and go to state 255
    "<<"      shift, and go to state 256
    ">>"      shift, and go to state 257
    "++"      shift, and go to state 258
    "--"      shift, and go to state 259
    "<="      shift, and go to state 260
    "<<="     shift, and go to state 261
    ">>="     shift, and go to state 262
    ">="      shift, and go to state 263
    "=="      shift, and go to state 264
    "!="      shift, and go to state 265
    "??"      shift, and go to state 266
    "?."      shift, and go to state 267
    "?["      shift, and go to state 268
    ":="      shift, and go to state 269
    "<<<"     shift, and go to state 270
    ">>>"     shift, and go to state 271
    "<<<="    shift, and go to state 272
    ">>>="    shift, and go to state 273
    "&&"      shift, and go to state 274
    "||"      shift, and go to state 275
    "^^"      shift, and go to state 276
    "&&="     shift, and go to state 277
    "||="     shift, and go to state 278
    "^^="     shift, and go to state 279
    ".."      shift, and go to state 280
    '?'       shift, and go to state 281
    '|'       shift, and go to state 282
    '^'       shift, and go to state 283
    '&'       shift, and go to state 284
    '<'       shift, and go to state 285
    '>'       shift, and go to state 286
    '-'       shift, and go to state 287
    '+'       shift, and go to state 288
    '*'       shift, and go to state 289
    '/'       shift, and go to state 290
    '%'       shift, and go to state 291
    '~'       shift, and go to state 292
    '!'       shift, and go to state 293
    '.'       shift, and go to state 294
    '['       shift, and go to state 295


State 195

  198 function_name: "bool" .

    $default  reduce using rule 198 (function_name)


State 196

  199 function_name: "string" .

    $default  reduce using rule 199 (function_name)


State 197

  200 function_name: "int" .

    $default  reduce using rule 200 (function_name)


State 198

  201 function_name: "int2" .

    $default  reduce using rule 201 (function_name)


State 199

  202 function_name: "int3" .

    $default  reduce using rule 202 (function_name)


State 200

  203 function_name: "int4" .

    $default  reduce using rule 203 (function_name)


State 201

  204 function_name: "uint" .

    $default  reduce using rule 204 (function_name)


State 202

  205 function_name: "uint2" .

    $default  reduce using rule 205 (function_name)


State 203

  206 function_name: "uint3" .

    $default  reduce using rule 206 (function_name)


State 204

  207 function_name: "uint4" .

    $default  reduce using rule 207 (function_name)


State 205

  208 function_name: "float" .

    $default  reduce using rule 208 (function_name)


State 206

  209 function_name: "float2" .

    $default  reduce using rule 209 (function_name)


State 207

  210 function_name: "float3" .

    $default  reduce using rule 210 (function_name)


State 208

  211 function_name: "float4" .

    $default  reduce using rule 211 (function_name)


State 209

  212 function_name: "range" .

    $default  reduce using rule 212 (function_name)


State 210

  213 function_name: "urange" .

    $default  reduce using rule 213 (function_name)


State 211

  214 function_name: "range64" .

    $default  reduce using rule 214 (function_name)


State 212

  215 function_name: "urange64" .

    $default  reduce using rule 215 (function_name)


State 213

  216 function_name: "int64" .

    $default  reduce using rule 216 (function_name)


State 214

  217 function_name: "uint64" .

    $default  reduce using rule 217 (function_name)


State 215

  218 function_name: "double" .

    $default  reduce using rule 218 (function_name)


State 216

  219 function_name: "int8" .

    $default  reduce using rule 219 (function_name)


State 217

  220 function_name: "uint8" .

    $default  reduce using rule 220 (function_name)


State 218

  221 function_name: "int16" .

    $default  reduce using rule 221 (function_name)


State 219

  222 function_name: "uint16" .

    $default  reduce using rule 222 (function_name)


State 220

  170 function_name: "++" . "operator"

    "operator"  shift, and go to state 296


State 221

  171 function_name: "--" . "operator"

    "operator"  shift, and go to state 297


State 222

  138 function_name: "name" .

    $default  reduce using rule 138 (function_name)


State 223

  227 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 299


State 224

  229 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 301


State 225

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 302
    "uint"    shift, and go to state 303
    "int64"   shift, and go to state 304
    "uint64"  shift, and go to state 305
    "int8"    shift, and go to state 306
    "uint8"   shift, and go to state 307
    "int16"   shift, and go to state 308
    "uint16"  shift, and go to state 309

    enum_basic_type_declaration  go to state 310


State 226

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 648 ($@42)

    $@42  go to state 311


State 227

  657 optional_sealed: "sealed" .

    $default  reduce using rule 657 (optional_sealed)


State 228

  658 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 312


State 229

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 669 ($@47)

    $@47  go to state 313


State 230

  619 global_variable_declaration_list: global_variable_declaration_list . "end of line"
  621                                 | global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  627 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 314
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 620 ($@38)

    close_block  go to state 315
    $@38         go to state 316


State 231

  551 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 317


State 232

  113 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 318


State 233

  114 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  115                       | metadata_argument_list . semicolon
  552 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 319

    $default  reduce using rule 552 (optional_field_annotation)

    semicolon  go to state 320


State 234

  629 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 321
    "name"  shift, and go to state 322

    let_variable_name_with_pos_list  go to state 323
    let_variable_declaration         go to state 324


State 235

   27 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 236

   28 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 237

   29 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 29 (string_constant)


State 238

   99 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 325


State 239

  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 110 (annotation_argument)


State 240

  638 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 373


State 241

   23 optional_not_required: '!' "inscope" .

    $default  reduce using rule 23 (optional_not_required)


State 242

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 809 ($@87)

    $@87  go to state 374


State 243

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 799 ($@79)

    $@79  go to state 375


State 244

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 804 ($@83)

    $@83  go to state 376


State 245

  192 function_name: "operator" "is" .
  194              | "operator" "is" . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 192 (function_name)


State 246

  193 function_name: "operator" "as" .
  195              | "operator" "as" . "name"

    "name"  shift, and go to state 378

    $default  reduce using rule 193 (function_name)


State 247

  190 function_name: "operator" "delete" .

    $default  reduce using rule 190 (function_name)


State 248

  141 function_name: "operator" "+=" .

    $default  reduce using rule 141 (function_name)


State 249

  142 function_name: "operator" "-=" .

    $default  reduce using rule 142 (function_name)


State 250

  144 function_name: "operator" "/=" .

    $default  reduce using rule 144 (function_name)


State 251

  143 function_name: "operator" "*=" .

    $default  reduce using rule 143 (function_name)


State 252

  145 function_name: "operator" "%=" .

    $default  reduce using rule 145 (function_name)


State 253

  146 function_name: "operator" "&=" .

    $default  reduce using rule 146 (function_name)


State 254

  147 function_name: "operator" "|=" .

    $default  reduce using rule 147 (function_name)


State 255

  148 function_name: "operator" "^=" .

    $default  reduce using rule 148 (function_name)


State 256

  174 function_name: "operator" "<<" .

    $default  reduce using rule 174 (function_name)


State 257

  175 function_name: "operator" ">>" .

    $default  reduce using rule 175 (function_name)


State 258

  172 function_name: "operator" "++" .

    $default  reduce using rule 172 (function_name)


State 259

  173 function_name: "operator" "--" .

    $default  reduce using rule 173 (function_name)


State 260

  165 function_name: "operator" "<=" .

    $default  reduce using rule 165 (function_name)


State 261

  176 function_name: "operator" "<<=" .

    $default  reduce using rule 176 (function_name)


State 262

  177 function_name: "operator" ">>=" .

    $default  reduce using rule 177 (function_name)


State 263

  166 function_name: "operator" ">=" .

    $default  reduce using rule 166 (function_name)


State 264

  163 function_name: "operator" "==" .

    $default  reduce using rule 163 (function_name)


State 265

  164 function_name: "operator" "!=" .

    $default  reduce using rule 164 (function_name)


State 266

  191 function_name: "operator" "??" .

    $default  reduce using rule 191 (function_name)


State 267

  185 function_name: "operator" "?." .
  188              | "operator" "?." . "name"

    "name"  shift, and go to state 379

    $default  reduce using rule 185 (function_name)


State 268

  183 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 380


State 269

  189 function_name: "operator" ":=" .

    $default  reduce using rule 189 (function_name)


State 270

  178 function_name: "operator" "<<<" .

    $default  reduce using rule 178 (function_name)


State 271

  179 function_name: "operator" ">>>" .

    $default  reduce using rule 179 (function_name)


State 272

  180 function_name: "operator" "<<<=" .

    $default  reduce using rule 180 (function_name)


State 273

  181 function_name: "operator" ">>>=" .

    $default  reduce using rule 181 (function_name)


State 274

  152 function_name: "operator" "&&" .

    $default  reduce using rule 152 (function_name)


State 275

  153 function_name: "operator" "||" .

    $default  reduce using rule 153 (function_name)


State 276

  154 function_name: "operator" "^^" .

    $default  reduce using rule 154 (function_name)


State 277

  149 function_name: "operator" "&&=" .

    $default  reduce using rule 149 (function_name)


State 278

  150 function_name: "operator" "||=" .

    $default  reduce using rule 150 (function_name)


State 279

  151 function_name: "operator" "^^=" .

    $default  reduce using rule 151 (function_name)


State 280

  162 function_name: "operator" ".." .

    $default  reduce using rule 162 (function_name)


State 281

  196 function_name: "operator" '?' . "as"
  197              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 381


State 282

  168 function_name: "operator" '|' .

    $default  reduce using rule 168 (function_name)


State 283

  169 function_name: "operator" '^' .

    $default  reduce using rule 169 (function_name)


State 284

  167 function_name: "operator" '&' .

    $default  reduce using rule 167 (function_name)


State 285

  160 function_name: "operator" '<' .

    $default  reduce using rule 160 (function_name)


State 286

  161 function_name: "operator" '>' .

    $default  reduce using rule 161 (function_name)


State 287

  156 function_name: "operator" '-' .

    $default  reduce using rule 156 (function_name)


State 288

  155 function_name: "operator" '+' .

    $default  reduce using rule 155 (function_name)


State 289

  157 function_name: "operator" '*' .

    $default  reduce using rule 157 (function_name)


State 290

  158 function_name: "operator" '/' .

    $default  reduce using rule 158 (function_name)


State 291

  159 function_name: "operator" '%' .

    $default  reduce using rule 159 (function_name)


State 292

  140 function_name: "operator" '~' .

    $default  reduce using rule 140 (function_name)


State 293

  139 function_name: "operator" '!' .

    $default  reduce using rule 139 (function_name)


State 294

  184 function_name: "operator" '.' .
  186              | "operator" '.' . "name"
  187              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 382

    $default  reduce using rule 184 (function_name)


State 295

  182 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 383


State 296

  170 function_name: "++" "operator" .

    $default  reduce using rule 170 (function_name)


State 297

  171 function_name: "--" "operator" .

    $default  reduce using rule 171 (function_name)


State 298

  134 optional_function_argument_list: '(' . ')'
  135                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 384
    "[["  shift, and go to state 231
    ')'   shift, and go to state 385
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 386
    function_argument_declaration_no_type  go to state 387
    function_argument_declaration_type     go to state 388
    function_argument_list                 go to state 389


State 299

  227 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 391


State 300

  234 expression_block: open_block . expressions close_block
  235                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 260 (expressions)

    expressions  go to state 392


State 301

  229 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 229 (function_declaration)


State 302

  703 enum_basic_type_declaration: "int" .

    $default  reduce using rule 703 (enum_basic_type_declaration)


State 303

  706 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 706 (enum_basic_type_declaration)


State 304

  709 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 709 (enum_basic_type_declaration)


State 305

  710 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 710 (enum_basic_type_declaration)


State 306

  704 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 704 (enum_basic_type_declaration)


State 307

  707 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 707 (enum_basic_type_declaration)


State 308

  705 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 705 (enum_basic_type_declaration)


State 309

  708 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 708 (enum_basic_type_declaration)


State 310

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 393


State 311

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 630 (enum_list)

    enum_list  go to state 394


State 312

  658 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 395

    $default  reduce using rule 654 (optional_structure_parent)

    optional_structure_parent  go to state 396


State 313

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 666 (optional_struct_variable_declaration_list)

    open_block                                 go to state 397
    optional_struct_variable_declaration_list  go to state 398


State 314

  619 global_variable_declaration_list: global_variable_declaration_list "end of line" .

    $default  reduce using rule 619 (global_variable_declaration_list)


State 315

  627 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 627 (global_let)


State 316

  621 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 399


State 317

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  551 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 400


State 318

  113 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 113 (metadata_argument_list)


State 319

  114 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 401


State 320

  115 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 115 (metadata_argument_list)


State 321

  609 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 402


State 322

  608 let_variable_name_with_pos_list: "name" .
  610                                | "name" . "aka" "name"

    "aka"  shift, and go to state 403

    $default  reduce using rule 608 (let_variable_name_with_pos_list)


State 323

  611 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  612                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  613 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  614                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  616                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  617                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 404
    ':'  shift, and go to state 405
    '&'  shift, and go to state 406

    $default  reduce using rule 606 (optional_ref)

    optional_ref  go to state 407


State 324

  629 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 629 (global_let)


State 325

   99 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 99 (annotation_argument_value_list)


State 326

  737 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 408


State 327

  760 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 409


State 328

  763 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 410


State 329

  738 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 411


State 330

  766 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 412


State 331

  756 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 413


State 332

  676 basic_type_declaration: "bool" .

    $default  reduce using rule 676 (basic_type_declaration)


State 333

  696 basic_type_declaration: "void" .

    $default  reduce using rule 696 (basic_type_declaration)


State 334

  677 basic_type_declaration: "string" .

    $default  reduce using rule 677 (basic_type_declaration)


State 335

  712 auto_type_declaration: "auto" .
  713                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 414

    '('       [reduce using rule 712 (auto_type_declaration)]
    $default  reduce using rule 712 (auto_type_declaration)


State 336

  678 basic_type_declaration: "int" .

    $default  reduce using rule 678 (basic_type_declaration)


State 337

  682 basic_type_declaration: "int2" .

    $default  reduce using rule 682 (basic_type_declaration)


State 338

  683 basic_type_declaration: "int3" .

    $default  reduce using rule 683 (basic_type_declaration)


State 339

  684 basic_type_declaration: "int4" .

    $default  reduce using rule 684 (basic_type_declaration)


State 340

  685 basic_type_declaration: "uint" .

    $default  reduce using rule 685 (basic_type_declaration)


State 341

  702 basic_type_declaration: "bitfield" .
  722 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 415

    $default  reduce using rule 702 (basic_type_declaration)


State 342

  689 basic_type_declaration: "uint2" .

    $default  reduce using rule 689 (basic_type_declaration)


State 343

  690 basic_type_declaration: "uint3" .

    $default  reduce using rule 690 (basic_type_declaration)


State 344

  691 basic_type_declaration: "uint4" .

    $default  reduce using rule 691 (basic_type_declaration)


State 345

  692 basic_type_declaration: "float" .

    $default  reduce using rule 692 (basic_type_declaration)


State 346

  693 basic_type_declaration: "float2" .

    $default  reduce using rule 693 (basic_type_declaration)


State 347

  694 basic_type_declaration: "float3" .

    $default  reduce using rule 694 (basic_type_declaration)


State 348

  695 basic_type_declaration: "float4" .

    $default  reduce using rule 695 (basic_type_declaration)


State 349

  697 basic_type_declaration: "range" .

    $default  reduce using rule 697 (basic_type_declaration)


State 350

  698 basic_type_declaration: "urange" .

    $default  reduce using rule 698 (basic_type_declaration)


State 351

  699 basic_type_declaration: "range64" .

    $default  reduce using rule 699 (basic_type_declaration)


State 352

  700 basic_type_declaration: "urange64" .

    $default  reduce using rule 700 (basic_type_declaration)


State 353

  767 type_declaration_no_options: "block" .
  770                            | "block" . '<' $@61 type_declaration '>' $@62
  773                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 416

    $default  reduce using rule 767 (type_declaration_no_options)


State 354

  681 basic_type_declaration: "int64" .

    $default  reduce using rule 681 (basic_type_declaration)


State 355

  688 basic_type_declaration: "uint64" .

    $default  reduce using rule 688 (basic_type_declaration)


State 356

  701 basic_type_declaration: "double" .

    $default  reduce using rule 701 (basic_type_declaration)


State 357

  774 type_declaration_no_options: "function" .
  777                            | "function" . '<' $@65 type_declaration '>' $@66
  780                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 417

    $default  reduce using rule 774 (type_declaration_no_options)


State 358

  781 type_declaration_no_options: "lambda" .
  784                            | "lambda" . '<' $@69 type_declaration '>' $@70
  787                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 418

    $default  reduce using rule 781 (type_declaration_no_options)


State 359

  679 basic_type_declaration: "int8" .

    $default  reduce using rule 679 (basic_type_declaration)


State 360

  686 basic_type_declaration: "uint8" .

    $default  reduce using rule 686 (basic_type_declaration)


State 361

  680 basic_type_declaration: "int16" .

    $default  reduce using rule 680 (basic_type_declaration)


State 362

  687 basic_type_declaration: "uint16" .

    $default  reduce using rule 687 (basic_type_declaration)


State 363

  790 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 419


State 364

  793 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 420


State 365

  714 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 421


State 366

  739 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  741                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 422


State 367

  711 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 711 (structure_type_declaration)


State 368

  729 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 729 (type_declaration_no_options)


State 369

  732 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 732 (type_declaration_no_options)


State 370

  730 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 730 (type_declaration_no_options)


State 371

  731 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 731 (type_declaration_no_options)


State 372

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  794 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    $default  reduce using rule 794 (type_declaration)

    dim_list  go to state 433


State 373

  638 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 638 (single_alias)


State 374

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 717 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 435


State 375

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 585 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 436


State 376

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 591 (variant_alias_type_list)

    variant_alias_type_list  go to state 437


State 377

  194 function_name: "operator" "is" "name" .

    $default  reduce using rule 194 (function_name)


State 378

  195 function_name: "operator" "as" "name" .

    $default  reduce using rule 195 (function_name)


State 379

  188 function_name: "operator" "?." "name" .

    $default  reduce using rule 188 (function_name)


State 380

  183 function_name: "operator" "?[" ']' .

    $default  reduce using rule 183 (function_name)


State 381

  196 function_name: "operator" '?' "as" .
  197              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 438

    $default  reduce using rule 196 (function_name)


State 382

  186 function_name: "operator" '.' "name" .
  187              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 439

    $default  reduce using rule 186 (function_name)


State 383

  182 function_name: "operator" '[' ']' .

    $default  reduce using rule 182 (function_name)


State 384

  575 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 440


State 385

  134 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 134 (optional_function_argument_list)


State 386

  573 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  574 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 441
    "var"  shift, and go to state 442

    $default  reduce using rule 314 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 443


State 387

  576 function_argument_list: function_argument_declaration_no_type .
  578                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 576 (function_argument_list)

    semicolon  go to state 444


State 388

  577 function_argument_list: function_argument_declaration_type .
  579                       | function_argument_declaration_type . semicolon function_argument_list
  580                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 445

    $default  reduce using rule 577 (function_argument_list)

    semicolon  go to state 446


State 389

  135 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 447


State 390

  137 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 448


State 391

  227 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 227 (function_declaration_header)


State 392

  234 expression_block: open_block expressions . close_block
  235                 | open_block expressions . close_block "finally" open_block expressions close_block
  261 expressions: expressions . expression_any
  262            | expressions . error

    error                             shift, and go to state 449
    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 452
    "if"                              shift, and go to state 453
    "static_if"                       shift, and go to state 454
    "for"                             shift, and go to state 455
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "return"                          shift, and go to state 462
    "null"                            shift, and go to state 463
    "break"                           shift, and go to state 464
    "try"                             shift, and go to state 465
    "table"                           shift, and go to state 466
    "delete"                          shift, and go to state 467
    "deref"                           shift, and go to state 468
    "with"                            shift, and go to state 469
    "assume"                          shift, and go to state 470
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 473
    "continue"                        shift, and go to state 474
    "pass"                            shift, and go to state 475
    "reinterpret"                     shift, and go to state 476
    "label"                           shift, and go to state 477
    "goto"                            shift, and go to state 478
    "unsafe"                          shift, and go to state 479
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "yield"                           shift, and go to state 486
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 509
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder             go to state 522
    expr_reader                go to state 523
    expression_label           go to state 524
    expression_goto            go to state 525
    semicolon                  go to state 526
    if_or_static_if            go to state 527
    expression_if_one_liner    go to state 528
    expression_if_then_else    go to state 529
    expression_for_loop        go to state 530
    expression_unsafe          go to state 531
    expression_while_loop      go to state 532
    expression_with            go to state 533
    expression_with_alias      go to state 534
    close_block                go to state 535
    expr_call_pipe             go to state 536
    expression_any             go to state 537
    expr_keyword               go to state 538
    expression_keyword         go to state 539
    expr_pipe                  go to state 540
    name_in_namespace          go to state 541
    expression_delete          go to state 542
    expr_new                   go to state 543
    expression_break           go to state 544
    expression_continue        go to state 545
    expression_return_no_pipe  go to state 546
    expression_return          go to state 547
    expression_yield_no_pipe   go to state 548
    expression_yield           go to state 549
    expression_try_catch       go to state 550
    kwd_let                    go to state 551
    expression_let             go to state 552
    expr_cast                  go to state 553
    expr_type_decl             go to state 554
    expr_type_info             go to state 555
    block_or_lambda            go to state 556
    expr_full_block            go to state 557
    expr_numeric_const         go to state 558
    expr_assign                go to state 559
    expr_assign_pipe           go to state 560
    expr_named_call            go to state 561
    expr_method_call           go to state 562
    func_addr_expr             go to state 563
    expr_field                 go to state 564
    expr_call                  go to state 565
    expr                       go to state 566
    expr_mtag                  go to state 567
    basic_type_declaration     go to state 568
    make_decl                  go to state 569
    make_struct_decl           go to state 570
    make_tuple_call            go to state 571
    make_dim_decl              go to state 572
    make_table_decl            go to state 573
    array_comprehension        go to state 574


State 393

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 651 ($@44)

    $@44  go to state 575


State 394

  631 enum_list: enum_list . semicolon
  632          | enum_list . "name" semicolon
  633          | enum_list . "name" '=' expr semicolon
  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 576
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 649 ($@43)

    semicolon  go to state 577
    $@43       go to state 578


State 395

  655 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 579


State 396

  658 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 658 (structure_name)


State 397

  667 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 564 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 580


State 398

  670 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 670 (structure_declaration)


State 399

  621 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 321
    "name"  shift, and go to state 322

    let_variable_name_with_pos_list  go to state 323
    let_variable_declaration         go to state 581


State 400

  551 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 582


State 401

  114 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 114 (metadata_argument_list)


State 402

  609 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 587
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 403

  610 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 588


State 404

  611 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  612                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 589


State 405

  613 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  614                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 590


State 406

  607 optional_ref: '&' .

    $default  reduce using rule 607 (optional_ref)


State 407

  616 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  617                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 591
    ":="  shift, and go to state 592
    '='   shift, and go to state 593

    copy_or_move_or_clone  go to state 594


State 408

  737 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 735 ($@50)

    $@50  go to state 595


State 409

  760 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 758 ($@55)

    $@55  go to state 596


State 410

  763 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 761 ($@57)

    $@57  go to state 597


State 411

  738 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 598
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 412

  766 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 764 ($@59)

    $@59  go to state 599


State 413

  756 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 754 ($@53)

    $@53  go to state 600


State 414

  713 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 601


State 415

  722 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 720 ($@48)

    $@48  go to state 602


State 416

  770 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  773                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 771 ($@63)
    '>'       reduce using rule 771 ($@63)
    '('       reduce using rule 771 ($@63)
    $default  reduce using rule 768 ($@61)

    $@61  go to state 603
    $@63  go to state 604


State 417

  777 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  780                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 778 ($@67)
    '>'       reduce using rule 778 ($@67)
    '('       reduce using rule 778 ($@67)
    $default  reduce using rule 775 ($@65)

    $@65  go to state 605
    $@67  go to state 606


State 418

  784 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  787                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 785 ($@71)
    '>'       reduce using rule 785 ($@71)
    '('       reduce using rule 785 ($@71)
    $default  reduce using rule 782 ($@69)

    $@69  go to state 607
    $@71  go to state 608


State 419

  790 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 788 ($@73)

    $@73  go to state 609


State 420

  793 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 791 ($@75)

    $@75  go to state 610


State 421

  714 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 611
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 422

  739 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  741                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 612
    '('  shift, and go to state 613


State 423

  744 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 744 (type_declaration_no_options)


State 424

  749 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 749 (type_declaration_no_options)


State 425

  743 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 743 (type_declaration_no_options)


State 426

  751 type_declaration_no_options: type_declaration_no_options "==" . "const"
  752                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 614
    '&'      shift, and go to state 615


State 427

  757 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 757 (type_declaration_no_options)


State 428

  753 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 753 (type_declaration_no_options)


State 429

  746 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 746 (type_declaration_no_options)


State 430

  742 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  745                            | type_declaration_no_options '-' . "const"
  747                            | type_declaration_no_options '-' . '&'
  750                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 616
    '&'      shift, and go to state 617
    '['      shift, and go to state 618
    '#'      shift, and go to state 619


State 431

  727 dim_list: '[' . expr ']'
  734 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    ']'                               shift, and go to state 620
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 621
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 432

  748 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 748 (type_declaration_no_options)


State 433

  728 dim_list: dim_list . '[' expr ']'
  733 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 622

    '['       [reduce using rule 733 (type_declaration_no_options)]
    $default  reduce using rule 733 (type_declaration_no_options)


State 434

  795 type_declaration: type_declaration '|' . type_declaration_no_options
  796                 | type_declaration '|' . '#'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366
    '#'          shift, and go to state 623

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 624


State 435

  718 bitfield_alias_bits: bitfield_alias_bits . semicolon
  719                    | bitfield_alias_bits . "name" semicolon
  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 625
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 810 ($@88)

    semicolon  go to state 626
    $@88       go to state 627


State 436

  586 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  587                      | tuple_alias_type_list . tuple_type c_or_s
  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 326
    "array"              shift, and go to state 327
    "table"              shift, and go to state 328
    "typedecl"           shift, and go to state 329
    "iterator"           shift, and go to state 330
    "smart_ptr"          shift, and go to state 331
    "bool"               shift, and go to state 332
    "void"               shift, and go to state 333
    "string"             shift, and go to state 334
    "auto"               shift, and go to state 335
    "int"                shift, and go to state 336
    "int2"               shift, and go to state 337
    "int3"               shift, and go to state 338
    "int4"               shift, and go to state 339
    "uint"               shift, and go to state 340
    "bitfield"           shift, and go to state 341
    "uint2"              shift, and go to state 342
    "uint3"              shift, and go to state 343
    "uint4"              shift, and go to state 344
    "float"              shift, and go to state 345
    "float2"             shift, and go to state 346
    "float3"             shift, and go to state 347
    "float4"             shift, and go to state 348
    "range"              shift, and go to state 349
    "urange"             shift, and go to state 350
    "range64"            shift, and go to state 351
    "urange64"           shift, and go to state 352
    "block"              shift, and go to state 353
    "int64"              shift, and go to state 354
    "uint64"             shift, and go to state 355
    "double"             shift, and go to state 356
    "function"           shift, and go to state 357
    "lambda"             shift, and go to state 358
    "int8"               shift, and go to state 359
    "uint8"              shift, and go to state 360
    "int16"              shift, and go to state 361
    "uint16"             shift, and go to state 362
    "tuple"              shift, and go to state 363
    "variant"            shift, and go to state 364
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 365
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 628
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '$'                  shift, and go to state 366

    $default  reduce using rule 800 ($@80)

    semicolon                    go to state 630
    name_in_namespace            go to state 367
    tuple_type                   go to state 631
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    c_or_s                       go to state 632
    type_declaration_no_options  go to state 372
    type_declaration             go to state 633
    $@80                         go to state 634


State 437

  592 variant_alias_type_list: variant_alias_type_list . c_or_s
  593                        | variant_alias_type_list . variant_type c_or_s
  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 635
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629

    $default  reduce using rule 805 ($@84)

    semicolon     go to state 630
    variant_type  go to state 636
    c_or_s        go to state 637
    $@84          go to state 638


State 438

  197 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 197 (function_name)


State 439

  187 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 187 (function_name)


State 440

  575 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 639
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 441

  312 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 312 (kwd_let_var_or_nothing)


State 442

  313 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 313 (kwd_let_var_or_nothing)


State 443

  573 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  574 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_declaration_no_type  go to state 642
    variable_declaration_type     go to state 643
    variable_name_with_pos_list   go to state 644


State 444

  578 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 384
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 386
    function_argument_declaration_no_type  go to state 387
    function_argument_declaration_type     go to state 388
    function_argument_list                 go to state 645


State 445

  580 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 384
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 386
    function_argument_declaration_no_type  go to state 387
    function_argument_declaration_type     go to state 388
    function_argument_list                 go to state 646


State 446

  579 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 384
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 386
    function_argument_declaration_no_type  go to state 387
    function_argument_declaration_type     go to state 388
    function_argument_list                 go to state 647


State 447

  135 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 135 (optional_function_argument_list)


State 448

  137 optional_function_type: ':' type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 137 (optional_function_type)


State 449

  262 expressions: expressions error .

    $default  reduce using rule 262 (expressions)


State 450

  860 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 648


State 451

  863 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 649


State 452

   88 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 650
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 453

   72 if_or_static_if: "if" .

    $default  reduce using rule 72 (if_or_static_if)


State 454

   73 if_or_static_if: "static_if" .

    $default  reduce using rule 73 (if_or_static_if)


State 455

   86 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 85 ($@5)

    $@5  go to state 651


State 456

  455 expr: "true" .

    $default  reduce using rule 455 (expr)


State 457

  456 expr: "false" .

    $default  reduce using rule 456 (expr)


State 458

  292 expr_new: "new" . new_type_declaration
  293         | "new" . new_type_declaration '(' use_initializer ')'
  294         | "new" . new_type_declaration '(' expr_list ')'
  295         | "new" . new_type_declaration '(' make_struct_single ')'
  296         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  297         | "new" . make_decl

    "struct"               shift, and go to state 450
    "class"                shift, and go to state 451
    "array"                shift, and go to state 461
    "table"                shift, and go to state 466
    "fixed_array"          shift, and go to state 480
    "default"              shift, and go to state 481
    "tuple"                shift, and go to state 483
    "variant"              shift, and go to state 484
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 499
    "[{"                   shift, and go to state 500
    "{{"                   shift, and go to state 501
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 512
    '<'                    shift, and go to state 652
    '['                    shift, and go to state 518

    name_in_namespace           go to state 367
    new_type_declaration        go to state 653
    structure_type_declaration  go to state 654
    make_decl                   go to state 655
    make_struct_decl            go to state 570
    make_tuple_call             go to state 571
    make_dim_decl               go to state 572
    make_table_decl             go to state 573
    array_comprehension         go to state 574


State 459

  343 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  344               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  345               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  346               | "typeinfo" . name_in_namespace '(' expr ')'
  347               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  348               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 656

    name_in_namespace  go to state 657


State 460

  342 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 658


State 461

  886 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  889              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  892              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  893              | "array" . '(' expr_list optional_comma ')'
  896              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 659
    "tuple"    shift, and go to state 660
    "variant"  shift, and go to state 661
    '<'        shift, and go to state 662
    '('        shift, and go to state 663


State 462

  300 expression_return_no_pipe: "return" .
  301                          | "return" . expr_list
  302                          | "return" . "<-" expr_list
  304 expression_return: "return" . expr_pipe
  305                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "<-"                              shift, and go to state 664
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 300 (expression_return_no_pipe)

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 665
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 666
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 668
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 463

  449 expr: "null" .

    $default  reduce using rule 449 (expr)


State 464

  298 expression_break: "break" .

    $default  reduce using rule 298 (expression_break)


State 465

  311 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 669


State 466

  907 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  908                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  909                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 670
    '('  shift, and go to state 671


State 467

  286 expression_delete: "delete" . expr
  287                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "explicit"                        shift, and go to state 672
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 673
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 468

  500 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 674


State 469

   89 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 675
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 470

   91 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 676


State 471

  333 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 677


State 472

  336 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 678


State 473

  501 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 679


State 474

  299 expression_continue: "continue" .

    $default  reduce using rule 299 (expression_continue)


State 475

  259 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 680


State 476

  339 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 681


State 477

   62 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 682


State 478

   63 expression_goto: "goto" . "label" "integer constant"
   64                | "goto" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "label"                           shift, and go to state 683
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 684
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 479

   87 expression_unsafe: "unsafe" . expression_block
  532 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 685

    open_block        go to state 300
    expression_block  go to state 686


State 480

  897 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  900              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 687
    '('  shift, and go to state 688


State 481

  869 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 689


State 482

  702 basic_type_declaration: "bitfield" .

    $default  reduce using rule 702 (basic_type_declaration)


State 483

  875 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  878                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 690
    '('  shift, and go to state 691


State 484

  866 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 692


State 485

  238 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  502 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  503     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 693


State 486

  306 expression_yield_no_pipe: "yield" . expr
  307                         | "yield" . "<-" expr
  309 expression_yield: "yield" . expr_pipe
  310                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "<-"                              shift, and go to state 694
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 695
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 696
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 487

  485 expr: "++" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 697
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 488

  486 expr: "--" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 698
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 489

  281 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 702


State 490

  279 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 703


State 491

  280 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 704


State 492

  534 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 705


State 493

  535 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 706


State 494

  536 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 707


State 495

  537 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 708


State 496

  538 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 709


State 497

  540 expr_mtag: "$c" . '(' expr ')' '(' ')'
  541          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 710


State 498

  539 expr_mtag: "..." .

    $default  reduce using rule 539 (expr_mtag)


State 499

  852 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  854                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  855                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  882 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  916 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 711
    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 712


State 500

  856 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  857                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  883 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  917 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 713
    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 714


State 501

  906 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  919 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 715
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 716
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_map_tuple          go to state 717
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table              go to state 718
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 502

  372 expr_numeric_const: "integer constant" .

    $default  reduce using rule 372 (expr_numeric_const)


State 503

  374 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 504

  373 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 373 (expr_numeric_const)


State 505

  375 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 506

  376 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 507

  377 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 508

  378 expr_numeric_const: "double constant" .

    $default  reduce using rule 378 (expr_numeric_const)


State 509

  263 expr_keyword: "keyword" . expr expression_block
  274 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '<'                               shift, and go to state 719
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 720
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 510

  277 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 721


State 511

   39 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 36 (string_builder_body)

    string_builder_body  go to state 722


State 512

  905 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  918 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 723
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 522
    expr_reader                   go to state 523
    optional_expr_map_tuple_list  go to state 724
    expression_keyword            go to state 586
    name_in_namespace             go to state 541
    expr_new                      go to state 543
    expr_cast                     go to state 553
    expr_type_decl                go to state 554
    expr_type_info                go to state 555
    block_or_lambda               go to state 556
    expr_full_block               go to state 557
    expr_numeric_const            go to state 558
    expr_named_call               go to state 561
    expr_method_call              go to state 562
    func_addr_expr                go to state 563
    expr_field                    go to state 564
    expr_call                     go to state 565
    expr                          go to state 716
    expr_mtag                     go to state 567
    basic_type_declaration        go to state 568
    make_decl                     go to state 569
    make_struct_decl              go to state 570
    make_map_tuple                go to state 725
    make_tuple_call               go to state 571
    make_dim_decl                 go to state 572
    expr_map_tuple_list           go to state 726
    make_table_decl               go to state 573
    array_comprehension           go to state 574


State 513

  462 expr: '-' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 727
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 514

  461 expr: '+' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 728
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 515

  499 expr: '*' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 729
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 516

  460 expr: '~' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 730
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 517

  459 expr: '!' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 731
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 518

  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 519

  489 expr: '(' . expr_list optional_comma ')'
  490     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 739
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 740
    make_struct_single      go to state 741
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 520

  354 block_or_lambda: '$' .

    $default  reduce using rule 354 (block_or_lambda)


State 521

  355 block_or_lambda: '@' .
  356                | '@' . '@'
  425 func_addr_expr: '@' . '@' func_addr_name
  428               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  431               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  549 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 742

    $default  reduce using rule 355 (block_or_lambda)


State 522

  453 expr: string_builder .

    $default  reduce using rule 453 (expr)


State 523

  452 expr: expr_reader .

    $default  reduce using rule 452 (expr)


State 524

  257 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 743


State 525

  258 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 744


State 526

  239 expression_any: semicolon .

    $default  reduce using rule 239 (expression_any)


State 527

   82 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 745
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 528

   84 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 746


State 529

  255 expression_any: expression_if_then_else .

    $default  reduce using rule 255 (expression_any)


State 530

  250 expression_any: expression_for_loop .

    $default  reduce using rule 250 (expression_any)


State 531

  247 expression_any: expression_unsafe .

    $default  reduce using rule 247 (expression_any)


State 532

  246 expression_any: expression_while_loop .

    $default  reduce using rule 246 (expression_any)


State 533

  248 expression_any: expression_with .

    $default  reduce using rule 248 (expression_any)


State 534

  249 expression_any: expression_with_alias .

    $default  reduce using rule 249 (expression_any)


State 535

  234 expression_block: open_block expressions close_block .
  235                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 747

    $default  reduce using rule 234 (expression_block)


State 536

  282 expr_pipe: expr_call_pipe .

    $default  reduce using rule 282 (expr_pipe)


State 537

  261 expressions: expressions expression_any .

    $default  reduce using rule 261 (expressions)


State 538

  241 expression_any: expr_keyword .

    $default  reduce using rule 241 (expression_any)


State 539

  237 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  533 expr: expression_keyword .

    '$'  shift, and go to state 520
    '@'  shift, and go to state 699

    '$'       [reduce using rule 533 (expr)]
    '@'       [reduce using rule 533 (expr)]
    $default  reduce using rule 533 (expr)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 749


State 540

  240 expression_any: expr_pipe .

    $default  reduce using rule 240 (expression_any)


State 541

  419 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  420                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  442 expr_call: name_in_namespace . '(' ')'
  443          | name_in_namespace . '(' "uninitialized" ')'
  444          | name_in_namespace . '(' make_struct_single ')'
  445          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  446          | name_in_namespace . '(' expr_list ')'
  450 expr: name_in_namespace .
  531     | name_in_namespace . "name"

    "name"  shift, and go to state 750
    '('     shift, and go to state 751

    "name"    [reduce using rule 450 (expr)]
    '('       [reduce using rule 450 (expr)]
    $default  reduce using rule 450 (expr)


State 542

  244 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 752


State 543

  524 expr: expr_new .

    $default  reduce using rule 524 (expr)


State 544

   80 expression_if_one_liner: expression_break .
  251 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 80 (expression_if_one_liner)

    semicolon  go to state 753


State 545

   81 expression_if_one_liner: expression_continue .
  252 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 81 (expression_if_one_liner)

    semicolon  go to state 754


State 546

   78 expression_if_one_liner: expression_return_no_pipe .
  303 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 755


State 547

  253 expression_any: expression_return .

    $default  reduce using rule 253 (expression_any)


State 548

   79 expression_if_one_liner: expression_yield_no_pipe .
  308 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 756


State 549

  254 expression_any: expression_yield .

    $default  reduce using rule 254 (expression_any)


State 550

  256 expression_any: expression_try_catch .

    $default  reduce using rule 256 (expression_any)


State 551

  329 expression_let: kwd_let . optional_in_scope let_variable_declaration
  330               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 757

    $default  reduce using rule 318 (optional_in_scope)

    optional_in_scope  go to state 758


State 552

  245 expression_any: expression_let .

    $default  reduce using rule 245 (expression_any)


State 553

  523 expr: expr_cast .

    $default  reduce using rule 523 (expr)


State 554

  522 expr: expr_type_decl .

    $default  reduce using rule 522 (expr)


State 555

  521 expr: expr_type_info .

    $default  reduce using rule 521 (expr)


State 556

  369 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 759


State 557

  527 expr: expr_full_block .

    $default  reduce using rule 527 (expr)


State 558

  451 expr: expr_numeric_const .

    $default  reduce using rule 451 (expr)


State 559

  243 expression_any: expr_assign . semicolon
  278 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 760
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 761


State 560

  242 expression_any: expr_assign_pipe .

    $default  reduce using rule 242 (expression_any)


State 561

  526 expr: expr_named_call .

    $default  reduce using rule 526 (expr)


State 562

  525 expr: expr_method_call .

    $default  reduce using rule 525 (expr)


State 563

  497 expr: func_addr_expr .

    $default  reduce using rule 497 (expr)


State 564

  457 expr: expr_field .

    $default  reduce using rule 457 (expr)


State 565

  498 expr: expr_call .

    $default  reduce using rule 498 (expr)


State 566

   77 expression_if_one_liner: expr .
  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  402 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  403                 | expr . "<-" expr_assign_pipe_right
  404                 | expr . "&=" expr_assign_pipe_right
  405                 | expr . "|=" expr_assign_pipe_right
  406                 | expr . "^=" expr_assign_pipe_right
  407                 | expr . "&&=" expr_assign_pipe_right
  408                 | expr . "||=" expr_assign_pipe_right
  409                 | expr . "^^=" expr_assign_pipe_right
  410                 | expr . "+=" expr_assign_pipe_right
  411                 | expr . "-=" expr_assign_pipe_right
  412                 | expr . "*=" expr_assign_pipe_right
  413                 | expr . "/=" expr_assign_pipe_right
  414                 | expr . "%=" expr_assign_pipe_right
  415                 | expr . "<<=" expr_assign_pipe_right
  416                 | expr . ">>=" expr_assign_pipe_right
  417                 | expr . "<<<=" expr_assign_pipe_right
  418                 | expr . ">>>=" expr_assign_pipe_right
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 762
    "as"    shift, and go to state 763
    "+="    shift, and go to state 764
    "-="    shift, and go to state 765
    "/="    shift, and go to state 766
    "*="    shift, and go to state 767
    "%="    shift, and go to state 768
    "&="    shift, and go to state 769
    "|="    shift, and go to state 770
    "^="    shift, and go to state 771
    "<<"    shift, and go to state 772
    ">>"    shift, and go to state 773
    "++"    shift, and go to state 774
    "--"    shift, and go to state 775
    "<="    shift, and go to state 776
    "<<="   shift, and go to state 777
    ">>="   shift, and go to state 778
    ">="    shift, and go to state 779
    "=="    shift, and go to state 780
    "!="    shift, and go to state 781
    "->"    shift, and go to state 782
    "<-"    shift, and go to state 783
    "??"    shift, and go to state 784
    "?."    shift, and go to state 785
    "?["    shift, and go to state 786
    "<|"    shift, and go to state 787
    "|>"    shift, and go to state 788
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 790
    ">>>"   shift, and go to state 791
    "<<<="  shift, and go to state 792
    ">>>="  shift, and go to state 793
    "&&"    shift, and go to state 794
    "||"    shift, and go to state 795
    "^^"    shift, and go to state 796
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 800
    '='     shift, and go to state 801
    '?'     shift, and go to state 802
    '|'     shift, and go to state 803
    '^'     shift, and go to state 804
    '&'     shift, and go to state 805
    '<'     shift, and go to state 806
    '>'     shift, and go to state 807
    '-'     shift, and go to state 808
    '+'     shift, and go to state 809
    '*'     shift, and go to state 810
    '/'     shift, and go to state 811
    '%'     shift, and go to state 812
    '.'     shift, and go to state 813
    '['     shift, and go to state 814
    '$'     shift, and go to state 520
    '@'     shift, and go to state 699

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 567

  458 expr: expr_mtag .

    $default  reduce using rule 458 (expr)


State 568

  447 expr_call: basic_type_declaration . '(' ')'
  448          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 816


State 569

  454 expr: make_decl .

    $default  reduce using rule 454 (expr)


State 570

  812 make_decl: make_struct_decl .

    $default  reduce using rule 812 (make_decl)


State 571

  816 make_decl: make_tuple_call .

    $default  reduce using rule 816 (make_decl)


State 572

  813 make_decl: make_dim_decl .

    $default  reduce using rule 813 (make_decl)


State 573

  814 make_decl: make_table_decl .

    $default  reduce using rule 814 (make_decl)


State 574

  815 make_decl: array_comprehension .

    $default  reduce using rule 815 (make_decl)


State 575

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 630 (enum_list)

    enum_list  go to state 817


State 576

  632 enum_list: enum_list "name" . semicolon
  633          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 818

    semicolon  go to state 819


State 577

  631 enum_list: enum_list semicolon .

    $default  reduce using rule 631 (enum_list)


State 578

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 820


State 579

  655 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 655 (optional_structure_parent)


State 580

  565 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  567                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  569                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  571                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  572                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  667 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 821

    "def"     reduce using rule 131 (optional_annotation_list)
    $default  reduce using rule 566 ($@35)

    semicolon                 go to state 822
    optional_annotation_list  go to state 823
    close_block               go to state 824
    $@35                      go to state 825


State 581

  621 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 621 (global_variable_declaration_list)


State 582

  551 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 551 (optional_field_annotation)


State 583

  532 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 685


State 584

  502 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  503     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 826


State 585

  274 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 719


State 586

  533 expr: expression_keyword .

    $default  reduce using rule 533 (expr)


State 587

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  609 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 827


State 588

  610 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 610 (let_variable_name_with_pos_list)


State 589

  611 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  612                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 828

    $default  reduce using rule 611 (let_variable_name_with_pos_list)


State 590

  613 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  614                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 423
    "implicit"           shift, and go to state 424
    "explicit"           shift, and go to state 425
    "=="                 shift, and go to state 426
    "<-"                 shift, and go to state 591
    "??"                 shift, and go to state 427
    ":="                 shift, and go to state 592
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 593
    '?'                  shift, and go to state 428
    '&'                  shift, and go to state 429
    '-'                  shift, and go to state 430
    '['                  shift, and go to state 431
    '#'                  shift, and go to state 432

    semicolon              go to state 829
    copy_or_move_or_clone  go to state 830
    dim_list               go to state 433


State 591

  604 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 604 (copy_or_move_or_clone)


State 592

  605 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 605 (copy_or_move_or_clone)


State 593

  603 copy_or_move_or_clone: '=' .

    $default  reduce using rule 603 (copy_or_move_or_clone)


State 594

  616 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  617                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 831
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 832
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 595

  737 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 833


State 596

  760 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 834


State 597

  763 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    table_type_pair              go to state 835
    type_declaration_no_options  go to state 372
    type_declaration             go to state 836


State 598

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  738 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 837


State 599

  766 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 838


State 600

  756 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 839


State 601

  713 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 840


State 602

  722 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 841

    bitfield_bits  go to state 842


State 603

  770 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 843


State 604

  773 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 844


State 605

  777 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 845


State 606

  780 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 846


State 607

  784 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 847


State 608

  787 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 848


State 609

  790 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 628
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    tuple_type                   go to state 849
    tuple_type_list              go to state 850
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 633


State 610

  793 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 635

    variant_type       go to state 851
    variant_type_list  go to state 852


State 611

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  714 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 853


State 612

  741 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 740 ($@52)

    $@52  go to state 854


State 613

  739 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 855
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 614

  751 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 751 (type_declaration_no_options)


State 615

  752 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 752 (type_declaration_no_options)


State 616

  745 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 745 (type_declaration_no_options)


State 617

  747 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 747 (type_declaration_no_options)


State 618

  742 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 856


State 619

  750 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 750 (type_declaration_no_options)


State 620

  734 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 734 (type_declaration_no_options)


State 621

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  727 dim_list: '[' expr . ']'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 857


State 622

  728 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 858
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 623

  796 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 796 (type_declaration)


State 624

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  795 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    $default  reduce using rule 795 (type_declaration)

    dim_list  go to state 433


State 625

  719 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 859


State 626

  718 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 718 (bitfield_alias_bits)


State 627

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 860


State 628

  283 name_in_namespace: "name" .
  284                  | "name" . "::" "name"
  582 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 861

    $default  reduce using rule 283 (name_in_namespace)


State 629

  723 c_or_s: ',' .

    $default  reduce using rule 723 (c_or_s)


State 630

  724 c_or_s: semicolon .

    $default  reduce using rule 724 (c_or_s)


State 631

  587 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629

    semicolon  go to state 630
    c_or_s     go to state 862


State 632

  586 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 586 (tuple_alias_type_list)


State 633

  581 tuple_type: type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 581 (tuple_type)


State 634

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 863


State 635

  588 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 864


State 636

  593 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629

    semicolon  go to state 630
    c_or_s     go to state 865


State 637

  592 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 592 (variant_alias_type_list)


State 638

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 866


State 639

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  575 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 867


State 640

  672 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 868


State 641

  671 variable_name_with_pos_list: "name" .
  673                            | "name" . "aka" "name"

    "aka"  shift, and go to state 869

    $default  reduce using rule 671 (variable_name_with_pos_list)


State 642

  573 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 573 (function_argument_declaration_no_type)


State 643

  574 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 574 (function_argument_declaration_type)


State 644

  596 variable_declaration_no_type: variable_name_with_pos_list .
  597                             | variable_name_with_pos_list . '&'
  598                             | variable_name_with_pos_list . copy_or_move expr
  599 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  600                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 870
    ','   shift, and go to state 871
    '='   shift, and go to state 872
    ':'   shift, and go to state 873
    '&'   shift, and go to state 874

    $default  reduce using rule 596 (variable_declaration_no_type)

    copy_or_move  go to state 875


State 645

  578 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 578 (function_argument_list)


State 646

  580 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 580 (function_argument_list)


State 647

  579 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 579 (function_argument_list)


State 648

  860 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 858 ($@89)

    $@89  go to state 876


State 649

  863 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 861 ($@91)

    $@91  go to state 877


State 650

   88 expression_while_loop: "while" expr . expression_block
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 762
    "as"                   shift, and go to state 763
    "<<"                   shift, and go to state 772
    ">>"                   shift, and go to state 773
    "++"                   shift, and go to state 774
    "--"                   shift, and go to state 775
    "<="                   shift, and go to state 776
    ">="                   shift, and go to state 779
    "=="                   shift, and go to state 780
    "!="                   shift, and go to state 781
    "->"                   shift, and go to state 782
    "??"                   shift, and go to state 784
    "?."                   shift, and go to state 785
    "?["                   shift, and go to state 786
    "<|"                   shift, and go to state 787
    "|>"                   shift, and go to state 788
    "<<<"                  shift, and go to state 790
    ">>>"                  shift, and go to state 791
    "&&"                   shift, and go to state 794
    "||"                   shift, and go to state 795
    "^^"                   shift, and go to state 796
    ".."                   shift, and go to state 800
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 802
    '|'                    shift, and go to state 803
    '^'                    shift, and go to state 804
    '&'                    shift, and go to state 805
    '<'                    shift, and go to state 806
    '>'                    shift, and go to state 807
    '-'                    shift, and go to state 808
    '+'                    shift, and go to state 809
    '*'                    shift, and go to state 810
    '/'                    shift, and go to state 811
    '%'                    shift, and go to state 812
    '.'                    shift, and go to state 813
    '['                    shift, and go to state 814

    open_block        go to state 300
    expression_block  go to state 878


State 651

   86 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 879


State 652

  290 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 288 ($@12)

    $@12  go to state 880


State 653

  292 expr_new: "new" new_type_declaration .
  293         | "new" new_type_declaration . '(' use_initializer ')'
  294         | "new" new_type_declaration . '(' expr_list ')'
  295         | "new" new_type_declaration . '(' make_struct_single ')'
  296         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 881

    '('       [reduce using rule 292 (expr_new)]
    $default  reduce using rule 292 (expr_new)


State 654

  291 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 291 (new_type_declaration)


State 655

  297 expr_new: "new" make_decl .

    $default  reduce using rule 297 (expr_new)


State 656

  343 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  344               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  345               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 882


State 657

  346 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  347               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  348               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 883
    '('  shift, and go to state 884


State 658

  342 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 340 ($@20)

    $@20  go to state 885


State 659

  886 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 886


State 660

  889 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 887


State 661

  892 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 888


State 662

  896 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 894 ($@105)

    $@105  go to state 889


State 663

  893 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 890
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 664

  302 expression_return_no_pipe: "return" "<-" . expr_list
  305 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 891
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 892
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 668
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 665

  304 expression_return: "return" expr_pipe .

    $default  reduce using rule 304 (expression_return)


State 666

  301 expression_return_no_pipe: "return" expr_list .
  350 expr_list: expr_list . ',' expr

    ','  shift, and go to state 893

    $default  reduce using rule 301 (expression_return_no_pipe)


State 667

  278 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 760


State 668

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_list: expr .
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 762
    "as"    shift, and go to state 763
    "+="    shift, and go to state 894
    "-="    shift, and go to state 895
    "/="    shift, and go to state 896
    "*="    shift, and go to state 897
    "%="    shift, and go to state 898
    "&="    shift, and go to state 899
    "|="    shift, and go to state 900
    "^="    shift, and go to state 901
    "<<"    shift, and go to state 772
    ">>"    shift, and go to state 773
    "++"    shift, and go to state 774
    "--"    shift, and go to state 775
    "<="    shift, and go to state 776
    "<<="   shift, and go to state 902
    ">>="   shift, and go to state 903
    ">="    shift, and go to state 779
    "=="    shift, and go to state 780
    "!="    shift, and go to state 781
    "->"    shift, and go to state 782
    "<-"    shift, and go to state 904
    "??"    shift, and go to state 784
    "?."    shift, and go to state 785
    "?["    shift, and go to state 786
    "<|"    shift, and go to state 787
    "|>"    shift, and go to state 788
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 790
    ">>>"   shift, and go to state 791
    "<<<="  shift, and go to state 905
    ">>>="  shift, and go to state 906
    "&&"    shift, and go to state 794
    "||"    shift, and go to state 795
    "^^"    shift, and go to state 796
    "&&="   shift, and go to state 907
    "||="   shift, and go to state 908
    "^^="   shift, and go to state 909
    ".."    shift, and go to state 800
    '='     shift, and go to state 910
    '?'     shift, and go to state 802
    '|'     shift, and go to state 803
    '^'     shift, and go to state 804
    '&'     shift, and go to state 805
    '<'     shift, and go to state 806
    '>'     shift, and go to state 807
    '-'     shift, and go to state 808
    '+'     shift, and go to state 809
    '*'     shift, and go to state 810
    '/'     shift, and go to state 811
    '%'     shift, and go to state 812
    '.'     shift, and go to state 813
    '['     shift, and go to state 814
    '$'     shift, and go to state 520
    '@'     shift, and go to state 699

    " <|"     reduce using rule 379 (expr_assign)
    $default  reduce using rule 349 (expr_list)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 669

  311 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 911


State 670

  908 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  909                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 912


State 671

  907 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 522
    expr_reader                   go to state 523
    optional_expr_map_tuple_list  go to state 913
    expression_keyword            go to state 586
    name_in_namespace             go to state 541
    expr_new                      go to state 543
    expr_cast                     go to state 553
    expr_type_decl                go to state 554
    expr_type_info                go to state 555
    block_or_lambda               go to state 556
    expr_full_block               go to state 557
    expr_numeric_const            go to state 558
    expr_named_call               go to state 561
    expr_method_call              go to state 562
    func_addr_expr                go to state 563
    expr_field                    go to state 564
    expr_call                     go to state 565
    expr                          go to state 716
    expr_mtag                     go to state 567
    basic_type_declaration        go to state 568
    make_decl                     go to state 569
    make_struct_decl              go to state 570
    make_map_tuple                go to state 725
    make_tuple_call               go to state 571
    make_dim_decl                 go to state 572
    expr_map_tuple_list           go to state 726
    make_table_decl               go to state 573
    array_comprehension           go to state 574


State 672

  287 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 914
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 673

  286 expression_delete: "delete" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 286 (expression_delete)


State 674

  500 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 915
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 675

   89 expression_with: "with" expr . expression_block
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 762
    "as"                   shift, and go to state 763
    "<<"                   shift, and go to state 772
    ">>"                   shift, and go to state 773
    "++"                   shift, and go to state 774
    "--"                   shift, and go to state 775
    "<="                   shift, and go to state 776
    ">="                   shift, and go to state 779
    "=="                   shift, and go to state 780
    "!="                   shift, and go to state 781
    "->"                   shift, and go to state 782
    "??"                   shift, and go to state 784
    "?."                   shift, and go to state 785
    "?["                   shift, and go to state 786
    "<|"                   shift, and go to state 787
    "|>"                   shift, and go to state 788
    "<<<"                  shift, and go to state 790
    ">>>"                  shift, and go to state 791
    "&&"                   shift, and go to state 794
    "||"                   shift, and go to state 795
    "^^"                   shift, and go to state 796
    ".."                   shift, and go to state 800
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 802
    '|'                    shift, and go to state 803
    '^'                    shift, and go to state 804
    '&'                    shift, and go to state 805
    '<'                    shift, and go to state 806
    '>'                    shift, and go to state 807
    '-'                    shift, and go to state 808
    '+'                    shift, and go to state 809
    '*'                    shift, and go to state 810
    '/'                    shift, and go to state 811
    '%'                    shift, and go to state 812
    '.'                    shift, and go to state 813
    '['                    shift, and go to state 814

    open_block        go to state 300
    expression_block  go to state 916


State 676

   91 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 917


State 677

  333 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 331 ($@14)

    $@14  go to state 918


State 678

  336 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 334 ($@16)

    $@16  go to state 919


State 679

  501 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 920
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 680

  259 expression_any: "pass" semicolon .

    $default  reduce using rule 259 (expression_any)


State 681

  339 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 337 ($@18)

    $@18  go to state 921


State 682

   62 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 922


State 683

   63 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 923


State 684

   64 expression_goto: "goto" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 64 (expression_goto)


State 685

  532 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 924
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 686

   87 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 87 (expression_unsafe)


State 687

  900 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 898 ($@107)

    $@107  go to state 925


State 688

  897 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 926
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 689

  869 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 867 ($@95)

    $@95  go to state 927


State 690

  878 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 876 ($@97)

    $@97  go to state 928


State 691

  875 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 929
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 692

  866 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 864 ($@93)

    $@93  go to state 930


State 693

  238 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  502 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  503     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 931


State 694

  307 expression_yield_no_pipe: "yield" "<-" . expr
  310 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 932
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 933
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 695

  309 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 309 (expression_yield)


State 696

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  306 expression_yield_no_pipe: "yield" expr .
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 762
    "as"    shift, and go to state 763
    "+="    shift, and go to state 894
    "-="    shift, and go to state 895
    "/="    shift, and go to state 896
    "*="    shift, and go to state 897
    "%="    shift, and go to state 898
    "&="    shift, and go to state 899
    "|="    shift, and go to state 900
    "^="    shift, and go to state 901
    "<<"    shift, and go to state 772
    ">>"    shift, and go to state 773
    "++"    shift, and go to state 774
    "--"    shift, and go to state 775
    "<="    shift, and go to state 776
    "<<="   shift, and go to state 902
    ">>="   shift, and go to state 903
    ">="    shift, and go to state 779
    "=="    shift, and go to state 780
    "!="    shift, and go to state 781
    "->"    shift, and go to state 782
    "<-"    shift, and go to state 904
    "??"    shift, and go to state 784
    "?."    shift, and go to state 785
    "?["    shift, and go to state 786
    "<|"    shift, and go to state 787
    "|>"    shift, and go to state 788
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 790
    ">>>"   shift, and go to state 791
    "<<<="  shift, and go to state 905
    ">>>="  shift, and go to state 906
    "&&"    shift, and go to state 794
    "||"    shift, and go to state 795
    "^^"    shift, and go to state 796
    "&&="   shift, and go to state 907
    "||="   shift, and go to state 908
    "^^="   shift, and go to state 909
    ".."    shift, and go to state 800
    '='     shift, and go to state 910
    '?'     shift, and go to state 802
    '|'     shift, and go to state 803
    '^'     shift, and go to state 804
    '&'     shift, and go to state 805
    '<'     shift, and go to state 806
    '>'     shift, and go to state 807
    '-'     shift, and go to state 808
    '+'     shift, and go to state 809
    '*'     shift, and go to state 810
    '/'     shift, and go to state 811
    '%'     shift, and go to state 812
    '.'     shift, and go to state 813
    '['     shift, and go to state 814
    '$'     shift, and go to state 520
    '@'     shift, and go to state 699

    " <|"     reduce using rule 379 (expr_assign)
    $default  reduce using rule 306 (expression_yield_no_pipe)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 697

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  485     | "++" expr .
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 485 (expr)


State 698

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  486     | "--" expr .
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 486 (expr)


State 699

  355 block_or_lambda: '@' .
  356                | '@' . '@'

    '@'  shift, and go to state 934

    $default  reduce using rule 355 (block_or_lambda)


State 700

  367 expr_block: expression_block .

    $default  reduce using rule 367 (expr_block)


State 701

  368 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 935


State 702

  281 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 281 (expr_pipe)


State 703

  279 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 279 (expr_pipe)


State 704

  280 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 280 (expr_pipe)


State 705

  534 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 936
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 706

  535 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 937
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 707

  536 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 938
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 708

  537 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 939
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 709

  538 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 940
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 710

  540 expr_mtag: "$c" '(' . expr ')' '(' ')'
  541          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 941
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 711

  916 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 942


State 712

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  852 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  854                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  855                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  882 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "const"                           shift, and go to state 423
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "where"                           shift, and go to state 943
    "reinterpret"                     shift, and go to state 476
    "implicit"                        shift, and go to state 424
    "explicit"                        shift, and go to state 425
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "=="                              shift, and go to state 426
    "??"                              shift, and go to state 427
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '?'                               shift, and go to state 428
    '&'                               shift, and go to state 429
    '-'                               shift, and go to state 944
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 945
    '('                               shift, and go to state 946
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521
    '#'                               shift, and go to state 432

    $default  reduce using rule 836 (optional_block)

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 947
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    dim_list                go to state 433
    make_decl               go to state 569
    make_struct_fields      go to state 948
    make_struct_dim         go to state 949
    optional_block          go to state 950
    make_struct_decl        go to state 570
    make_tuple              go to state 951
    make_tuple_call         go to state 571
    make_dim                go to state 952
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 713

  917 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 953


State 714

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  856 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  857                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  883 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "const"                           shift, and go to state 423
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "implicit"                        shift, and go to state 424
    "explicit"                        shift, and go to state 425
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "=="                              shift, and go to state 426
    "??"                              shift, and go to state 427
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '?'                               shift, and go to state 428
    '&'                               shift, and go to state 429
    '-'                               shift, and go to state 944
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 945
    '('                               shift, and go to state 954
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521
    '#'                               shift, and go to state 432

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 947
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    dim_list                go to state 433
    make_decl               go to state 569
    make_struct_fields      go to state 948
    make_struct_dim         go to state 955
    make_struct_decl        go to state 570
    make_tuple              go to state 951
    make_tuple_call         go to state 571
    make_dim                go to state 956
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 715

  919 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 957


State 716

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  873 make_map_tuple: expr . "=>" expr
  874               | expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "=>"   shift, and go to state 958
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 874 (make_map_tuple)


State 717

  901 make_table: make_map_tuple .

    $default  reduce using rule 901 (make_table)


State 718

  902 make_table: make_table . "end of expression" make_map_tuple
  906 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 959
    "end of expression"  shift, and go to state 960
    ";}}"                shift, and go to state 961

    optional_trailing_semicolon_cur_cur  go to state 962


State 719

  274 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 272 ($@8)

    $@8  go to state 963


State 720

  263 expr_keyword: "keyword" expr . expression_block
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 762
    "as"                   shift, and go to state 763
    "<<"                   shift, and go to state 772
    ">>"                   shift, and go to state 773
    "++"                   shift, and go to state 774
    "--"                   shift, and go to state 775
    "<="                   shift, and go to state 776
    ">="                   shift, and go to state 779
    "=="                   shift, and go to state 780
    "!="                   shift, and go to state 781
    "->"                   shift, and go to state 782
    "??"                   shift, and go to state 784
    "?."                   shift, and go to state 785
    "?["                   shift, and go to state 786
    "<|"                   shift, and go to state 787
    "|>"                   shift, and go to state 788
    "<<<"                  shift, and go to state 790
    ">>>"                  shift, and go to state 791
    "&&"                   shift, and go to state 794
    "||"                   shift, and go to state 795
    "^^"                   shift, and go to state 796
    ".."                   shift, and go to state 800
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 802
    '|'                    shift, and go to state 803
    '^'                    shift, and go to state 804
    '&'                    shift, and go to state 805
    '<'                    shift, and go to state 806
    '>'                    shift, and go to state 807
    '-'                    shift, and go to state 808
    '+'                    shift, and go to state 809
    '*'                    shift, and go to state 810
    '/'                    shift, and go to state 811
    '%'                    shift, and go to state 812
    '.'                    shift, and go to state 813
    '['                    shift, and go to state 814

    open_block        go to state 300
    expression_block  go to state 964


State 721

  277 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 275 ($@10)

    $@10  go to state 965


State 722

   37 string_builder_body: string_builder_body . character_sequence
   38                    | string_builder_body . "{" expr optional_format_string "}"
   39 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 966
    "{"                   shift, and go to state 967

    character_sequence  go to state 968


State 723

  918 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 969


State 724

  905 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 970


State 725

  903 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 903 (expr_map_tuple_list)


State 726

  269 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  904 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 971

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 972


State 727

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  462 expr: '-' expr .
  463     | expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 462 (expr)


State 728

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  461 expr: '+' expr .
  463     | expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 461 (expr)


State 729

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  499     | '*' expr .
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 499 (expr)


State 730

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  460 expr: '~' expr .
  463     | expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 460 (expr)


State 731

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  459 expr: '!' expr .
  463     | expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 459 (expr)


State 732

  914 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 973


State 733

  915 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 974


State 734

  881 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 975


State 735

  265 optional_expr_list: expr_list . optional_comma
  350 expr_list: expr_list . ',' expr

    ','  shift, and go to state 976

    ','       [reduce using rule 912 (optional_comma)]
    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 977


State 736

  349 expr_list: expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 349 (expr_list)


State 737

  821 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  822                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 978


State 738

  283 name_in_namespace: "name" .
  284                  | "name" . "::" "name"
  817 make_struct_fields: "name" . copy_or_move expr
  818                   | "name" . ":=" expr

    "<-"  shift, and go to state 870
    ":="  shift, and go to state 979
    "::"  shift, and go to state 104
    '='   shift, and go to state 872

    $default  reduce using rule 283 (name_in_namespace)

    copy_or_move  go to state 980


State 739

  350 expr_list: expr_list . ',' expr
  489 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 976

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 981


State 740

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  827 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 982

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 983


State 741

  490 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 984


State 742

  356 block_or_lambda: '@' '@' .
  425 func_addr_expr: '@' '@' . func_addr_name
  428               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  431               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  549 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 985
    "$c"    shift, and go to state 986
    "name"  shift, and go to state 63
    '<'     shift, and go to state 987

    $default  reduce using rule 356 (block_or_lambda)

    name_in_namespace  go to state 988
    func_addr_name     go to state 989


State 743

  257 expression_any: expression_label semicolon .

    $default  reduce using rule 257 (expression_any)


State 744

  258 expression_any: expression_goto semicolon .

    $default  reduce using rule 258 (expression_any)


State 745

   82 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 762
    "as"                   shift, and go to state 763
    "<<"                   shift, and go to state 772
    ">>"                   shift, and go to state 773
    "++"                   shift, and go to state 774
    "--"                   shift, and go to state 775
    "<="                   shift, and go to state 776
    ">="                   shift, and go to state 779
    "=="                   shift, and go to state 780
    "!="                   shift, and go to state 781
    "->"                   shift, and go to state 782
    "??"                   shift, and go to state 784
    "?."                   shift, and go to state 785
    "?["                   shift, and go to state 786
    "<|"                   shift, and go to state 787
    "|>"                   shift, and go to state 788
    "<<<"                  shift, and go to state 790
    ">>>"                  shift, and go to state 791
    "&&"                   shift, and go to state 794
    "||"                   shift, and go to state 795
    "^^"                   shift, and go to state 796
    ".."                   shift, and go to state 800
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 802
    '|'                    shift, and go to state 803
    '^'                    shift, and go to state 804
    '&'                    shift, and go to state 805
    '<'                    shift, and go to state 806
    '>'                    shift, and go to state 807
    '-'                    shift, and go to state 808
    '+'                    shift, and go to state 809
    '*'                    shift, and go to state 810
    '/'                    shift, and go to state 811
    '%'                    shift, and go to state 812
    '.'                    shift, and go to state 813
    '['                    shift, and go to state 814

    open_block        go to state 300
    expression_block  go to state 990


State 746

   84 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 83 ($@4)

    $@4  go to state 991


State 747

  235 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 992


State 748

  371 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 370 ($@22)

    $@22  go to state 993


State 749

  237 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 237 (expr_call_pipe)


State 750

  531 expr: name_in_namespace "name" .

    $default  reduce using rule 531 (expr)


State 751

  419 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  420                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  442 expr_call: name_in_namespace '(' . ')'
  443          | name_in_namespace '(' . "uninitialized" ')'
  444          | name_in_namespace '(' . make_struct_single ')'
  445          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  446          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "uninitialized"                   shift, and go to state 994
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 995
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 996
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 997
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 740
    make_struct_single      go to state 998
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 752

  244 expression_any: expression_delete semicolon .

    $default  reduce using rule 244 (expression_any)


State 753

  251 expression_any: expression_break semicolon .

    $default  reduce using rule 251 (expression_any)


State 754

  252 expression_any: expression_continue semicolon .

    $default  reduce using rule 252 (expression_any)


State 755

  303 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 303 (expression_return)


State 756

  308 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 308 (expression_yield)


State 757

  317 optional_in_scope: "inscope" .

    $default  reduce using rule 317 (optional_in_scope)


State 758

  329 expression_let: kwd_let optional_in_scope . let_variable_declaration
  330               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 321
    "[["    shift, and go to state 999
    "name"  shift, and go to state 322
    '('     shift, and go to state 1000

    tuple_expansion_variable_declaration  go to state 1001
    let_variable_name_with_pos_list       go to state 323
    let_variable_declaration              go to state 1002


State 759

  369 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1003
    "[["       shift, and go to state 1004

    $default  reduce using rule 364 (optional_capture_list)

    optional_capture_list  go to state 1005


State 760

  278 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 1006


State 761

  243 expression_any: expr_assign semicolon .

    $default  reduce using rule 243 (expression_any)


State 762

  508 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr "is" . basic_type_declaration
  510     | expr "is" . "name"
  548 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1007
    "bool"      shift, and go to state 332
    "void"      shift, and go to state 333
    "string"    shift, and go to state 334
    "int"       shift, and go to state 336
    "int2"      shift, and go to state 337
    "int3"      shift, and go to state 338
    "int4"      shift, and go to state 339
    "uint"      shift, and go to state 340
    "bitfield"  shift, and go to state 482
    "uint2"     shift, and go to state 342
    "uint3"     shift, and go to state 343
    "uint4"     shift, and go to state 344
    "float"     shift, and go to state 345
    "float2"    shift, and go to state 346
    "float3"    shift, and go to state 347
    "float4"    shift, and go to state 348
    "range"     shift, and go to state 349
    "urange"    shift, and go to state 350
    "range64"   shift, and go to state 351
    "urange64"  shift, and go to state 352
    "int64"     shift, and go to state 354
    "uint64"    shift, and go to state 355
    "double"    shift, and go to state 356
    "int8"      shift, and go to state 359
    "uint8"     shift, and go to state 360
    "int16"     shift, and go to state 361
    "uint16"    shift, and go to state 362
    "$f"        shift, and go to state 1008
    "name"      shift, and go to state 1009

    basic_type_declaration  go to state 1010


State 763

  511 expr: expr "as" . "name"
  514     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  515     | expr "as" . basic_type_declaration
  546 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1011
    "bool"      shift, and go to state 332
    "void"      shift, and go to state 333
    "string"    shift, and go to state 334
    "int"       shift, and go to state 336
    "int2"      shift, and go to state 337
    "int3"      shift, and go to state 338
    "int4"      shift, and go to state 339
    "uint"      shift, and go to state 340
    "bitfield"  shift, and go to state 482
    "uint2"     shift, and go to state 342
    "uint3"     shift, and go to state 343
    "uint4"     shift, and go to state 344
    "float"     shift, and go to state 345
    "float2"    shift, and go to state 346
    "float3"    shift, and go to state 347
    "float4"    shift, and go to state 348
    "range"     shift, and go to state 349
    "urange"    shift, and go to state 350
    "range64"   shift, and go to state 351
    "urange64"  shift, and go to state 352
    "int64"     shift, and go to state 354
    "uint64"    shift, and go to state 355
    "double"    shift, and go to state 356
    "int8"      shift, and go to state 359
    "uint8"     shift, and go to state 360
    "int16"     shift, and go to state 361
    "uint16"    shift, and go to state 362
    "$f"        shift, and go to state 1012
    "name"      shift, and go to state 1013

    basic_type_declaration  go to state 1014


State 764

  389 expr_assign: expr "+=" . expr
  410 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1020
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 765

  390 expr_assign: expr "-=" . expr
  411 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1022
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 766

  392 expr_assign: expr "/=" . expr
  413 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1023
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1024
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 767

  391 expr_assign: expr "*=" . expr
  412 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1025
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1026
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 768

  393 expr_assign: expr "%=" . expr
  414 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1027
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1028
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 769

  383 expr_assign: expr "&=" . expr
  404 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1030
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 770

  384 expr_assign: expr "|=" . expr
  405 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1031
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1032
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 771

  385 expr_assign: expr "^=" . expr
  406 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1034
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 772

  463 expr: expr "<<" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1035
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 773

  464 expr: expr ">>" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1036
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 774

  487 expr: expr "++" .

    $default  reduce using rule 487 (expr)


State 775

  488 expr: expr "--" .

    $default  reduce using rule 488 (expr)


State 776

  476 expr: expr "<=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1037
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 777

  394 expr_assign: expr "<<=" . expr
  415 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1038
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1039
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 778

  395 expr_assign: expr ">>=" . expr
  416 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1040
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1041
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 779

  477 expr: expr ">=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1042
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 780

  474 expr: expr "==" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1043
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 781

  475 expr: expr "!=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1044
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 782

  421 expr_method_call: expr "->" . "name" '(' ')'
  422                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1045


State 783

  381 expr_assign: expr "<-" . expr
  403 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1046
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1047
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 784

  504 expr: expr "??" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1048
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 785

  495 expr: expr "?." . "name"
  543 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1049
    "name"  shift, and go to state 1050


State 786

  493 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1051
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 787

  528 expr: expr "<|" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1052
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 788

  529 expr: expr "|>" . expr
  530     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1053
    expr_mtag               go to state 567
    basic_type_declaration  go to state 1054
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 789

  382 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1055
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 790

  465 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1056
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 791

  466 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1057
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 792

  396 expr_assign: expr "<<<=" . expr
  417 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1058
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1059
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 793

  397 expr_assign: expr ">>>=" . expr
  418 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1060
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1061
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 794

  481 expr: expr "&&" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1062
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 795

  482 expr: expr "||" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1063
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 796

  483 expr: expr "^^" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1064
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 797

  386 expr_assign: expr "&&=" . expr
  407 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1065
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1066
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 798

  387 expr_assign: expr "||=" . expr
  408 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1067
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1068
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 799

  388 expr_assign: expr "^^=" . expr
  409 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1069
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1070
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 800

  484 expr: expr ".." . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1071
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 801

  380 expr_assign: expr '=' . expr
  402 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 1015
    "@ <|"                            shift, and go to state 1016
    "@@ <|"                           shift, and go to state 1017
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 1018
    expression_keyword      go to state 539
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign_pipe_right  go to state 1072
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1073
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 802

  505 expr: expr '?' . expr ':' expr
  516     | expr '?' . "as" "name"
  519     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr '?' . "as" basic_type_declaration
  547 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "as"                              shift, and go to state 1074
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1075
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 803

  479 expr: expr '|' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1076
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 804

  480 expr: expr '^' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1077
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 805

  478 expr: expr '&' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1078
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 806

  472 expr: expr '<' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1079
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 807

  473 expr: expr '>' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1080
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 808

  468 expr: expr '-' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1081
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 809

  467 expr: expr '+' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1082
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 810

  469 expr: expr '*' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1083
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 811

  470 expr: expr '/' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1084
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 812

  471 expr: expr '%' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1085
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 813

  432 expr_field: expr '.' . "name"
  433           | expr '.' . '.' "name"
  434           | expr '.' . "name" '(' ')'
  435           | expr '.' . "name" '(' expr_list ')'
  436           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  437           | expr '.' . basic_type_declaration '(' ')'
  438           | expr '.' . basic_type_declaration '(' expr_list ')'
  441           | expr '.' . $@27 error $@28
  492 expr: expr '.' . '[' expr ']'
  494     | expr '.' . "?[" expr ']'
  496     | expr '.' . "?." "name"
  542 expr_mtag: expr '.' . "$f" '(' expr ')'
  544          | expr '.' . '.' "$f" '(' expr ')'
  545          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 332
    "void"      shift, and go to state 333
    "string"    shift, and go to state 334
    "int"       shift, and go to state 336
    "int2"      shift, and go to state 337
    "int3"      shift, and go to state 338
    "int4"      shift, and go to state 339
    "uint"      shift, and go to state 340
    "bitfield"  shift, and go to state 482
    "uint2"     shift, and go to state 342
    "uint3"     shift, and go to state 343
    "uint4"     shift, and go to state 344
    "float"     shift, and go to state 345
    "float2"    shift, and go to state 346
    "float3"    shift, and go to state 347
    "float4"    shift, and go to state 348
    "range"     shift, and go to state 349
    "urange"    shift, and go to state 350
    "range64"   shift, and go to state 351
    "urange64"  shift, and go to state 352
    "int64"     shift, and go to state 354
    "uint64"    shift, and go to state 355
    "double"    shift, and go to state 356
    "int8"      shift, and go to state 359
    "uint8"     shift, and go to state 360
    "int16"     shift, and go to state 361
    "uint16"    shift, and go to state 362
    "?."        shift, and go to state 1086
    "?["        shift, and go to state 1087
    "$f"        shift, and go to state 1088
    "name"      shift, and go to state 1089
    '.'         shift, and go to state 1090
    '['         shift, and go to state 1091

    $default  reduce using rule 439 ($@27)

    $@27                    go to state 1092
    basic_type_declaration  go to state 1093


State 814

  491 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1094
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 815

  236 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 236 (expr_call_pipe)


State 816

  447 expr_call: basic_type_declaration '(' . ')'
  448          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1095
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1096
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 817

  631 enum_list: enum_list . semicolon
  632          | enum_list . "name" semicolon
  633          | enum_list . "name" '=' expr semicolon
  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 576
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 652 ($@45)

    semicolon  go to state 577
    $@45       go to state 1097


State 818

  633 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1098
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 819

  632 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 632 (enum_list)


State 820

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 650 (enum_declaration)


State 821

  132 optional_annotation_list: '[' . annotation_list ']'
  572 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1099
    name_in_namespace             go to state 75


State 822

  565 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 565 (struct_variable_declaration_list)


State 823

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  571                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1100


State 824

  667 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 667 (optional_struct_variable_declaration_list)


State 825

  567 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 550 (optional_field_annotation)

    metadata_argument_list          go to state 233
    optional_field_annotation       go to state 1101
    structure_variable_declaration  go to state 1102


State 826

  502 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  503     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1103


State 827

  609 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 609 (let_variable_name_with_pos_list)


State 828

  612 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1104


State 829

  613 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 613 (let_variable_declaration)


State 830

  614 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  615                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 1105
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1106
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 831

  617 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 617 (let_variable_declaration)


State 832

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  616 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1107
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 833

  737 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1108


State 834

  760 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1109


State 835

  763 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1110


State 836

  725 table_type_pair: type_declaration .
  726                | type_declaration . c_or_s type_declaration
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '|'                  shift, and go to state 434

    $default  reduce using rule 725 (table_type_pair)

    semicolon  go to state 630
    c_or_s     go to state 1111


State 837

  738 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 738 (type_declaration_no_options)


State 838

  766 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1112


State 839

  756 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1113


State 840

  713 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 713 (auto_type_declaration)


State 841

  715 bitfield_bits: "name" .

    $default  reduce using rule 715 (bitfield_bits)


State 842

  716 bitfield_bits: bitfield_bits . semicolon "name"
  722 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1114

    semicolon  go to state 1115


State 843

  770 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1116


State 844

  773 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1117


State 845

  777 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1118


State 846

  780 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1119


State 847

  784 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1120


State 848

  787 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1121


State 849

  583 tuple_type_list: tuple_type .

    $default  reduce using rule 583 (tuple_type_list)


State 850

  584 tuple_type_list: tuple_type_list . c_or_s tuple_type
  790 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1122

    semicolon  go to state 630
    c_or_s     go to state 1123


State 851

  589 variant_type_list: variant_type .

    $default  reduce using rule 589 (variant_type_list)


State 852

  590 variant_type_list: variant_type_list . c_or_s variant_type
  793 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1124

    semicolon  go to state 630
    c_or_s     go to state 1125


State 853

  714 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 714 (auto_type_declaration)


State 854

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    type_declaration_no_options_list  go to state 1126
    name_in_namespace                 go to state 367
    basic_type_declaration            go to state 368
    structure_type_declaration        go to state 369
    auto_type_declaration             go to state 370
    bitfield_type_declaration         go to state 371
    type_declaration_no_options       go to state 372
    type_declaration                  go to state 1127


State 855

  739 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1128


State 856

  742 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 742 (type_declaration_no_options)


State 857

  727 dim_list: '[' expr ']' .

    $default  reduce using rule 727 (dim_list)


State 858

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  728 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 1129


State 859

  719 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 719 (bitfield_alias_bits)


State 860

  811 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 811 (bitfield_alias_declaration)


State 861

  582 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1130


State 862

  587 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 587 (tuple_alias_type_list)


State 863

  801 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 801 (tuple_alias_declaration)


State 864

  588 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1131


State 865

  593 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 593 (variant_alias_type_list)


State 866

  806 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 806 (variant_alias_declaration)


State 867

  575 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 575 (function_argument_declaration_type)


State 868

  672 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1132
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 869

  673 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1133


State 870

  595 copy_or_move: "<-" .

    $default  reduce using rule 595 (copy_or_move)


State 871

  674 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  675                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1134


State 872

  594 copy_or_move: '=' .

    $default  reduce using rule 594 (copy_or_move)


State 873

  599 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  600                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1135


State 874

  597 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 597 (variable_declaration_no_type)


State 875

  598 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1136
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 876

  860 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1137


State 877

  863 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1138


State 878

   88 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 879

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1139
    ','   shift, and go to state 871


State 880

  290 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1140


State 881

  293 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  294         | "new" new_type_declaration '(' . expr_list ')'
  295         | "new" new_type_declaration '(' . make_struct_single ')'
  296         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "uninitialized"                   shift, and go to state 1141
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 850 (use_initializer)

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1142
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 740
    make_struct_single      go to state 1143
    use_initializer         go to state 1144
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 882

  343 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  344               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  345               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '<'                               shift, and go to state 1145
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1146
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 883

  347 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  348               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1147


State 884

  346 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1148
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 885

  342 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1149


State 886

  886 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 884 ($@99)

    $@99  go to state 1150


State 887

  889 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 887 ($@101)

    $@101  go to state 1151


State 888

  892 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 890 ($@103)

    $@103  go to state 1152


State 889

  896 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1153


State 890

  350 expr_list: expr_list . ',' expr
  893 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 976

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1154


State 891

  305 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 305 (expression_return)


State 892

  302 expression_return_no_pipe: "return" "<-" expr_list .
  350 expr_list: expr_list . ',' expr

    ','  shift, and go to state 893

    $default  reduce using rule 302 (expression_return_no_pipe)


State 893

  350 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1155
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 894

  389 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1156
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 895

  390 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1157
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 896

  392 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1158
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 897

  391 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1159
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 898

  393 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1160
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 899

  383 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1161
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 900

  384 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1162
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 901

  385 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1163
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 902

  394 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1164
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 903

  395 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1165
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 904

  381 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1166
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 905

  396 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1167
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 906

  397 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1168
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 907

  386 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1169
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 908

  387 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1170
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 909

  388 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1171
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 910

  380 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1172
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 911

  311 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 1173


State 912

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  908 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  909                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 423
    "implicit"           shift, and go to state 424
    "explicit"           shift, and go to state 425
    "=="                 shift, and go to state 426
    "??"                 shift, and go to state 427
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '?'                  shift, and go to state 428
    '&'                  shift, and go to state 429
    '>'                  shift, and go to state 1174
    '-'                  shift, and go to state 430
    '['                  shift, and go to state 431
    '#'                  shift, and go to state 432

    semicolon  go to state 630
    c_or_s     go to state 1175
    dim_list   go to state 433


State 913

  907 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1176


State 914

  287 expression_delete: "delete" "explicit" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 287 (expression_delete)


State 915

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  500     | "deref" '(' expr . ')'
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1177


State 916

   89 expression_with: "with" expr expression_block .

    $default  reduce using rule 89 (expression_with)


State 917

   91 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 90 ($@6)

    $@6  go to state 1178


State 918

  333 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1179


State 919

  336 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1180


State 920

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  501     | "addr" '(' expr . ')'
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1181


State 921

  339 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1182


State 922

   62 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 62 (expression_label)


State 923

   63 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 63 (expression_goto)


State 924

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  532     | "unsafe" '(' expr . ')'
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1183


State 925

  900 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1184


State 926

  350 expr_list: expr_list . ',' expr
  897 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 976

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1185


State 927

  869 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1186


State 928

  878 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 628
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    tuple_type                   go to state 849
    tuple_type_list              go to state 1187
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 633


State 929

  350 expr_list: expr_list . ',' expr
  875 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 976

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1188


State 930

  866 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 635

    variant_type       go to state 851
    variant_type_list  go to state 1189


State 931

  238 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  502 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  503     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1190
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 932

  310 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 310 (expression_yield)


State 933

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  307 expression_yield_no_pipe: "yield" "<-" expr .
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 762
    "as"    shift, and go to state 763
    "+="    shift, and go to state 894
    "-="    shift, and go to state 895
    "/="    shift, and go to state 896
    "*="    shift, and go to state 897
    "%="    shift, and go to state 898
    "&="    shift, and go to state 899
    "|="    shift, and go to state 900
    "^="    shift, and go to state 901
    "<<"    shift, and go to state 772
    ">>"    shift, and go to state 773
    "++"    shift, and go to state 774
    "--"    shift, and go to state 775
    "<="    shift, and go to state 776
    "<<="   shift, and go to state 902
    ">>="   shift, and go to state 903
    ">="    shift, and go to state 779
    "=="    shift, and go to state 780
    "!="    shift, and go to state 781
    "->"    shift, and go to state 782
    "<-"    shift, and go to state 904
    "??"    shift, and go to state 784
    "?."    shift, and go to state 785
    "?["    shift, and go to state 786
    "<|"    shift, and go to state 787
    "|>"    shift, and go to state 788
    ":="    shift, and go to state 789
    "<<<"   shift, and go to state 790
    ">>>"   shift, and go to state 791
    "<<<="  shift, and go to state 905
    ">>>="  shift, and go to state 906
    "&&"    shift, and go to state 794
    "||"    shift, and go to state 795
    "^^"    shift, and go to state 796
    "&&="   shift, and go to state 907
    "||="   shift, and go to state 908
    "^^="   shift, and go to state 909
    ".."    shift, and go to state 800
    '='     shift, and go to state 910
    '?'     shift, and go to state 802
    '|'     shift, and go to state 803
    '^'     shift, and go to state 804
    '&'     shift, and go to state 805
    '<'     shift, and go to state 806
    '>'     shift, and go to state 807
    '-'     shift, and go to state 808
    '+'     shift, and go to state 809
    '*'     shift, and go to state 810
    '/'     shift, and go to state 811
    '%'     shift, and go to state 812
    '.'     shift, and go to state 813
    '['     shift, and go to state 814
    '$'     shift, and go to state 520
    '@'     shift, and go to state 699

    " <|"     reduce using rule 379 (expr_assign)
    $default  reduce using rule 307 (expression_yield_no_pipe)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 934

  356 block_or_lambda: '@' '@' .

    $default  reduce using rule 356 (block_or_lambda)


State 935

  368 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1003
    "[["       shift, and go to state 1004

    $default  reduce using rule 364 (optional_capture_list)

    optional_capture_list  go to state 1191


State 936

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  534 expr_mtag: "$$" '(' expr . ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1192


State 937

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  535 expr_mtag: "$i" '(' expr . ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1193


State 938

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  536 expr_mtag: "$v" '(' expr . ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1194


State 939

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  537 expr_mtag: "$b" '(' expr . ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1195


State 940

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  538 expr_mtag: "$a" '(' expr . ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1196


State 941

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  540 expr_mtag: "$c" '(' expr . ')' '(' ')'
  541          | "$c" '(' expr . ')' '(' expr_list ')'
  542          | expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1197


State 942

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  916 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1198
    ','   shift, and go to state 871


State 943

  837 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 1199


State 944

  462 expr: '-' . expr
  742 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  745                            | type_declaration_no_options '-' . "const"
  747                            | type_declaration_no_options '-' . '&'
  750                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "const"                           shift, and go to state 616
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '&'                               shift, and go to state 617
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 1200
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521
    '#'                               shift, and go to state 619

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 727
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 945

  727 dim_list: '[' . expr ']'
  734 type_declaration_no_options: type_declaration_no_options '[' . ']'
  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    ']'                               shift, and go to state 620
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    ']'  [reduce using rule 264 (optional_expr_list)]

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1201
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 946

  489 expr: '(' . expr_list optional_comma ')'
  490     | '(' . make_struct_single ')'
  854 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  855                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1202
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 739
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 740
    make_struct_single      go to state 741
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 947

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  870 make_tuple: expr .
  871           | expr . "=>" expr

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "=>"   shift, and go to state 1203
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 870 (make_tuple)


State 948

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  828 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1204

    $default  reduce using rule 828 (make_struct_dim)


State 949

  829 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  852 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 943
    "end of expression"  shift, and go to state 1205

    $default  reduce using rule 836 (optional_block)

    optional_block  go to state 1206


State 950

  853 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1207
    ",]]"  shift, and go to state 1208
    ']'    shift, and go to state 1209

    optional_trailing_delim_sqr_sqr  go to state 1210


State 951

  872 make_tuple: make_tuple . ',' expr
  879 make_dim: make_tuple .

    ','  shift, and go to state 1211

    $default  reduce using rule 879 (make_dim)


State 952

  880 make_dim: make_dim . "end of expression" make_tuple
  882 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1212
    ";]]"                shift, and go to state 1213
    ']'                  shift, and go to state 1214

    optional_trailing_semicolon_sqr_sqr  go to state 1215


State 953

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  917 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1216
    ','   shift, and go to state 871


State 954

  489 expr: '(' . expr_list optional_comma ')'
  490     | '(' . make_struct_single ')'
  857 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1217
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 739
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 740
    make_struct_single      go to state 741
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 955

  829 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  856 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 943
    "end of expression"  shift, and go to state 1205

    $default  reduce using rule 836 (optional_block)

    optional_block  go to state 1218


State 956

  880 make_dim: make_dim . "end of expression" make_tuple
  883 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1219
    "end of expression"  shift, and go to state 1212
    ";}]"                shift, and go to state 1220

    optional_trailing_semicolon_cur_sqr  go to state 1221


State 957

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  919 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1222
    ','   shift, and go to state 871


State 958

  873 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1223
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 959

  838 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1224


State 960

  902 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 716
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_map_tuple          go to state 1225
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 961

  839 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 839 (optional_trailing_semicolon_cur_cur)


State 962

  906 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 906 (make_table_decl)


State 963

  274 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    type_declaration_no_options_list  go to state 1226
    name_in_namespace                 go to state 367
    basic_type_declaration            go to state 368
    structure_type_declaration        go to state 369
    auto_type_declaration             go to state 370
    bitfield_type_declaration         go to state 371
    type_declaration_no_options       go to state 372
    type_declaration                  go to state 1127


State 964

  263 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 263 (expr_keyword)


State 965

  277 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    type_declaration_no_options_list  go to state 1227
    name_in_namespace                 go to state 367
    basic_type_declaration            go to state 368
    structure_type_declaration        go to state 369
    auto_type_declaration             go to state 370
    bitfield_type_declaration         go to state 371
    type_declaration_no_options       go to state 372
    type_declaration                  go to state 1127


State 966

   39 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 39 (string_builder)


State 967

   38 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1228
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 968

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   37 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236

    $default  reduce using rule 37 (string_builder_body)


State 969

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1229
    ','   shift, and go to state 871


State 970

  905 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 905 (make_table_decl)


State 971

  904 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  913 optional_comma: ',' .

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 913 (optional_comma)

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 716
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_map_tuple          go to state 1230
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 972

  269 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 269 (optional_expr_map_tuple_list)


State 973

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  914 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1231
    ','   shift, and go to state 871


State 974

  915 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_name_with_pos_list  go to state 1232


State 975

  881 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 881 (make_dim_decl)


State 976

  350 expr_list: expr_list ',' . expr
  913 optional_comma: ',' .

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 913 (optional_comma)

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1155
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 977

  265 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 265 (optional_expr_list)


State 978

  821 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  822                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1233
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 979

  818 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1234
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 980

  817 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1235
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 981

  489 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1236


State 982

  819 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  820                   | make_struct_fields ',' . "name" ":=" expr
  823                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  913 optional_comma: ',' .

    "$f"    shift, and go to state 1237
    "name"  shift, and go to state 1238

    $default  reduce using rule 913 (optional_comma)


State 983

  827 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 827 (make_struct_single)


State 984

  490 expr: '(' make_struct_single ')' .

    $default  reduce using rule 490 (expr)


State 985

  424 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1239


State 986

  549 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1240


State 987

  428 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  431               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 429 ($@25)
    '>'       reduce using rule 429 ($@25)
    '('       reduce using rule 429 ($@25)
    $default  reduce using rule 426 ($@23)

    $@23  go to state 1241
    $@25  go to state 1242


State 988

  423 func_addr_name: name_in_namespace .

    $default  reduce using rule 423 (func_addr_name)


State 989

  425 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 425 (func_addr_expr)


State 990

   82 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1243
    "elif"         shift, and go to state 1244
    "static_elif"  shift, and go to state 1245

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1246
    expression_else      go to state 1247


State 991

   84 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1248
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 992

  235 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 260 (expressions)

    expressions  go to state 1249


State 993

  371 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 131 (optional_annotation_list)

    optional_annotation_list  go to state 1250


State 994

  443 expr_call: name_in_namespace '(' "uninitialized" . ')'
  445          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    ')'     shift, and go to state 1252

    make_struct_fields  go to state 740
    make_struct_single  go to state 1253


State 995

  419 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 1254
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 996

  442 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 442 (expr_call)


State 997

  350 expr_list: expr_list . ',' expr
  420 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  446 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1255
    ')'  shift, and go to state 1256


State 998

  444 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1257


State 999

  321 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1258

    tuple_expansion  go to state 1259


State 1000

  323 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  324                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  327                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  328                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1258

    tuple_expansion  go to state 1260


State 1001

  330 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 330 (expression_let)


State 1002

  329 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 329 (expression_let)


State 1003

  366 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1261


State 1004

  365 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1262
    ":="    shift, and go to state 1263
    "name"  shift, and go to state 1264
    '='     shift, and go to state 1265
    '&'     shift, and go to state 1266

    capture_entry  go to state 1267
    capture_list   go to state 1268


State 1005

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1269


State 1006

  278 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 278 (expr_pipe)


State 1007

  508 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1270


State 1008

  548 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1271


State 1009

  510 expr: expr "is" "name" .

    $default  reduce using rule 510 (expr)


State 1010

  509 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 509 (expr)


State 1011

  514 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1272


State 1012

  546 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1273


State 1013

  511 expr: expr "as" "name" .

    $default  reduce using rule 511 (expr)


State 1014

  515 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 515 (expr)


State 1015

  400 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 1274


State 1016

  398 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 1275


State 1017

  399 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 520
    '@'                    shift, and go to state 699

    open_block        go to state 300
    expression_block  go to state 700
    block_or_lambda   go to state 701
    expr_block        go to state 1276


State 1018

  401 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 401 (expr_assign_pipe_right)


State 1019

  410 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 410 (expr_assign_pipe)


State 1020

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  389 expr_assign: expr "+=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 389 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1021

  411 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 411 (expr_assign_pipe)


State 1022

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr "-=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 390 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1023

  413 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 413 (expr_assign_pipe)


State 1024

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr "/=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1025

  412 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 412 (expr_assign_pipe)


State 1026

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr "*=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 391 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1027

  414 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1028

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr "%=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1029

  404 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1030

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "&=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1031

  405 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1032

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr "|=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1033

  406 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 406 (expr_assign_pipe)


State 1034

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  385 expr_assign: expr "^=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 385 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1035

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  463     | expr "<<" expr .
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '-'   shift, and go to state 808
    '+'   shift, and go to state 809
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 463 (expr)


State 1036

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  464     | expr ">>" expr .
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '-'   shift, and go to state 808
    '+'   shift, and go to state 809
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 464 (expr)


State 1037

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  476     | expr "<=" expr .
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 476 (expr)


State 1038

  415 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1039

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr "<<=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1040

  416 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1041

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr ">>=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1042

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  477     | expr ">=" expr .
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 477 (expr)


State 1043

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  474     | expr "==" expr .
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 474 (expr)


State 1044

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  475     | expr "!=" expr .
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 475 (expr)


State 1045

  421 expr_method_call: expr "->" "name" . '(' ')'
  422                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1277


State 1046

  403 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1047

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  381 expr_assign: expr "<-" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 381 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1048

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  504     | expr "??" expr .
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 504 (expr)


State 1049

  543 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1278


State 1050

  495 expr: expr "?." "name" .

    $default  reduce using rule 495 (expr)


State 1051

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  493     | expr "?[" expr . ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 1279


State 1052

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  528     | expr "<|" expr .
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 528 (expr)


State 1053

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  529     | expr "|>" expr .
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 782
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 529 (expr)


State 1054

  447 expr_call: basic_type_declaration . '(' ')'
  448          | basic_type_declaration . '(' expr_list ')'
  530 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 816

    $default  reduce using rule 530 (expr)


State 1055

  382 expr_assign: expr ":=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 382 (expr_assign)


State 1056

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  465     | expr "<<<" expr .
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '-'   shift, and go to state 808
    '+'   shift, and go to state 809
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 465 (expr)


State 1057

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  466     | expr ">>>" expr .
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '-'   shift, and go to state 808
    '+'   shift, and go to state 809
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 466 (expr)


State 1058

  417 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1059

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr "<<<=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1060

  418 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 418 (expr_assign_pipe)


State 1061

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  397 expr_assign: expr ">>>=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 397 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1062

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  481     | expr "&&" expr .
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 481 (expr)


State 1063

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  482     | expr "||" expr .
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "^^"   shift, and go to state 796
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 482 (expr)


State 1064

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  483     | expr "^^" expr .
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 483 (expr)


State 1065

  407 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 407 (expr_assign_pipe)


State 1066

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  386 expr_assign: expr "&&=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 386 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1067

  408 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 408 (expr_assign_pipe)


State 1068

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  387 expr_assign: expr "||=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 387 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1069

  409 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 409 (expr_assign_pipe)


State 1070

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr "^^=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 388 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1071

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  484     | expr ".." expr .
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    ".."  error (nonassociative)

    $default  reduce using rule 484 (expr)


State 1072

  402 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1073

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  380 expr_assign: expr '=' expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    '$'    shift, and go to state 520
    '@'    shift, and go to state 699

    $default  reduce using rule 380 (expr_assign)

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1074

  516 expr: expr '?' "as" . "name"
  519     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  520     | expr '?' "as" . basic_type_declaration
  547 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1280
    "bool"      shift, and go to state 332
    "void"      shift, and go to state 333
    "string"    shift, and go to state 334
    "int"       shift, and go to state 336
    "int2"      shift, and go to state 337
    "int3"      shift, and go to state 338
    "int4"      shift, and go to state 339
    "uint"      shift, and go to state 340
    "bitfield"  shift, and go to state 482
    "uint2"     shift, and go to state 342
    "uint3"     shift, and go to state 343
    "uint4"     shift, and go to state 344
    "float"     shift, and go to state 345
    "float2"    shift, and go to state 346
    "float3"    shift, and go to state 347
    "float4"    shift, and go to state 348
    "range"     shift, and go to state 349
    "urange"    shift, and go to state 350
    "range64"   shift, and go to state 351
    "urange64"  shift, and go to state 352
    "int64"     shift, and go to state 354
    "uint64"    shift, and go to state 355
    "double"    shift, and go to state 356
    "int8"      shift, and go to state 359
    "uint8"     shift, and go to state 360
    "int16"     shift, and go to state 361
    "uint16"    shift, and go to state 362
    "$f"        shift, and go to state 1281
    "name"      shift, and go to state 1282

    basic_type_declaration  go to state 1283


State 1075

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  505     | expr '?' expr . ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    ':'    shift, and go to state 1284
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814


State 1076

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  479     | expr '|' expr .
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 479 (expr)


State 1077

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  480     | expr '^' expr .
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 480 (expr)


State 1078

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  478     | expr '&' expr .
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 478 (expr)


State 1079

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  472     | expr '<' expr .
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 472 (expr)


State 1080

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  473     | expr '>' expr .
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 473 (expr)


State 1081

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  468     | expr '-' expr .
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 468 (expr)


State 1082

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  467     | expr '+' expr .
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '*'   shift, and go to state 810
    '/'   shift, and go to state 811
    '%'   shift, and go to state 812
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 467 (expr)


State 1083

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  469     | expr '*' expr .
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 469 (expr)


State 1084

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  470     | expr '/' expr .
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 470 (expr)


State 1085

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  471     | expr '%' expr .
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 762
    "as"  shift, and go to state 763
    "++"  shift, and go to state 774
    "--"  shift, and go to state 775
    "->"  shift, and go to state 782
    "??"  shift, and go to state 784
    "?."  shift, and go to state 785
    "?["  shift, and go to state 786
    "<|"  shift, and go to state 787
    "|>"  shift, and go to state 788
    '.'   shift, and go to state 813
    '['   shift, and go to state 814

    $default  reduce using rule 471 (expr)


State 1086

  496 expr: expr '.' "?." . "name"
  545 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1285
    "name"  shift, and go to state 1286


State 1087

  494 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1287
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1088

  542 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1288


State 1089

  432 expr_field: expr '.' "name" .
  434           | expr '.' "name" . '(' ')'
  435           | expr '.' "name" . '(' expr_list ')'
  436           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1289

    '('       [reduce using rule 432 (expr_field)]
    $default  reduce using rule 432 (expr_field)


State 1090

  433 expr_field: expr '.' '.' . "name"
  544 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1290
    "name"  shift, and go to state 1291


State 1091

  492 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1292
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1092

  441 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1293


State 1093

  437 expr_field: expr '.' basic_type_declaration . '(' ')'
  438           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1294


State 1094

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  491     | expr '[' expr . ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 1295


State 1095

  447 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 447 (expr_call)


State 1096

  350 expr_list: expr_list . ',' expr
  448 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 893
    ')'  shift, and go to state 1296


State 1097

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1297


State 1098

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  633 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814

    semicolon  go to state 1298


State 1099

  130 annotation_list: annotation_list . ',' annotation_declaration
  132 optional_annotation_list: '[' annotation_list . ']'
  572 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1299


State 1100

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  571                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1300
    "private"  shift, and go to state 1301

    $default  reduce using rule 558 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1302


State 1101

  563 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1303

    $default  reduce using rule 561 (optional_static_member_variable)

    optional_static_member_variable  go to state 1304


State 1102

  567 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1305


State 1103

  502 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  503     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1306
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1104

  612 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 612 (let_variable_name_with_pos_list)


State 1105

  615 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 615 (let_variable_declaration)


State 1106

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  614 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1307
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1107

  616 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 616 (let_variable_declaration)


State 1108

  737 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 736 ($@51)

    $@51  go to state 1308


State 1109

  760 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 759 ($@56)

    $@56  go to state 1309


State 1110

  763 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 762 ($@58)

    $@58  go to state 1310


State 1111

  726 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1311


State 1112

  766 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 765 ($@60)

    $@60  go to state 1312


State 1113

  756 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 755 ($@54)

    $@54  go to state 1313


State 1114

  722 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 721 ($@49)

    $@49  go to state 1314


State 1115

  716 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1315


State 1116

  770 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 769 ($@62)

    $@62  go to state 1316


State 1117

  773 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1317


State 1118

  777 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 776 ($@66)

    $@66  go to state 1318


State 1119

  780 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1319


State 1120

  784 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 783 ($@70)

    $@70  go to state 1320


State 1121

  787 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1321


State 1122

  790 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 789 ($@74)

    $@74  go to state 1322


State 1123

  584 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 628
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    tuple_type                   go to state 1323
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 633


State 1124

  793 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 792 ($@76)

    $@76  go to state 1324


State 1125

  590 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 635

    variant_type  go to state 1325


State 1126

  271 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1326

    semicolon  go to state 630
    c_or_s     go to state 1327


State 1127

  270 type_declaration_no_options_list: type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 270 (type_declaration_no_options_list)


State 1128

  739 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 739 (type_declaration_no_options)


State 1129

  728 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 728 (dim_list)


State 1130

  582 tuple_type: "name" ':' type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 582 (tuple_type)


State 1131

  588 variant_type: "name" ':' type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 588 (variant_type)


State 1132

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  672 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1328


State 1133

  673 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 673 (variable_name_with_pos_list)


State 1134

  674 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  675                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1329

    $default  reduce using rule 674 (variable_name_with_pos_list)


State 1135

  599 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  600                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 870
    '='   shift, and go to state 872
    '|'   shift, and go to state 434

    $default  reduce using rule 599 (variable_declaration_type)

    copy_or_move  go to state 1330


State 1136

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  598 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 598 (variable_declaration_no_type)


State 1137

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1138

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1332
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1139

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1333
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1140

  290 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1334


State 1141

  296 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  851 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    $default  reduce using rule 851 (use_initializer)

    make_struct_fields  go to state 740
    make_struct_single  go to state 1335


State 1142

  294 expr_new: "new" new_type_declaration '(' expr_list . ')'
  350 expr_list: expr_list . ',' expr

    ','  shift, and go to state 893
    ')'  shift, and go to state 1336


State 1143

  295 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1337


State 1144

  293 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1338


State 1145

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  345               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1339


State 1146

  343 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1340


State 1147

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  348               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1341
    '>'                  shift, and go to state 1342


State 1148

  346 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1343


State 1149

  342 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1344


State 1150

  886 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1345


State 1151

  889 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 628
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    tuple_type                   go to state 849
    tuple_type_list              go to state 1346
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 633


State 1152

  892 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 635

    variant_type       go to state 851
    variant_type_list  go to state 1347


State 1153

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1348
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1154

  893 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1349


State 1155

  350 expr_list: expr_list ',' expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 350 (expr_list)


State 1156

  389 expr_assign: expr "+=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 389 (expr_assign)


State 1157

  390 expr_assign: expr "-=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 390 (expr_assign)


State 1158

  392 expr_assign: expr "/=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 392 (expr_assign)


State 1159

  391 expr_assign: expr "*=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 391 (expr_assign)


State 1160

  393 expr_assign: expr "%=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 393 (expr_assign)


State 1161

  383 expr_assign: expr "&=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 383 (expr_assign)


State 1162

  384 expr_assign: expr "|=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 384 (expr_assign)


State 1163

  385 expr_assign: expr "^=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 385 (expr_assign)


State 1164

  394 expr_assign: expr "<<=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 394 (expr_assign)


State 1165

  395 expr_assign: expr ">>=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 395 (expr_assign)


State 1166

  381 expr_assign: expr "<-" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 381 (expr_assign)


State 1167

  396 expr_assign: expr "<<<=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 396 (expr_assign)


State 1168

  397 expr_assign: expr ">>>=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 397 (expr_assign)


State 1169

  386 expr_assign: expr "&&=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 386 (expr_assign)


State 1170

  387 expr_assign: expr "||=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 387 (expr_assign)


State 1171

  388 expr_assign: expr "^^=" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 388 (expr_assign)


State 1172

  380 expr_assign: expr '=' expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 380 (expr_assign)


State 1173

  311 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 311 (expression_try_catch)


State 1174

  908 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1350


State 1175

  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1351


State 1176

  907 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 907 (make_table_decl)


State 1177

  500 expr: "deref" '(' expr ')' .

    $default  reduce using rule 500 (expr)


State 1178

   91 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1352
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1179

  333 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1353
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1180

  336 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1354
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1181

  501 expr: "addr" '(' expr ')' .

    $default  reduce using rule 501 (expr)


State 1182

  339 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1355
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1183

  532 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 532 (expr)


State 1184

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1356
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1185

  897 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1357


State 1186

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  869 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1358
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1187

  584 tuple_type_list: tuple_type_list . c_or_s tuple_type
  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1359

    semicolon  go to state 630
    c_or_s     go to state 1123


State 1188

  875 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1360


State 1189

  590 variant_type_list: variant_type_list . c_or_s variant_type
  866 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1361

    semicolon  go to state 630
    c_or_s     go to state 1125


State 1190

  238 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  502 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  503     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1003
    "[["       shift, and go to state 1004

    $default  reduce using rule 364 (optional_capture_list)

    optional_capture_list  go to state 1362


State 1191

  368 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1363


State 1192

  534 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1193

  535 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1194

  536 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 536 (expr_mtag)


State 1195

  537 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 537 (expr_mtag)


State 1196

  538 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 538 (expr_mtag)


State 1197

  540 expr_mtag: "$c" '(' expr ')' . '(' ')'
  541          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1364


State 1198

  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1365
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1199

  837 optional_block: "where" expr_block .

    $default  reduce using rule 837 (optional_block)


State 1200

  742 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    ']'                               shift, and go to state 856
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    ']'  [reduce using rule 264 (optional_expr_list)]

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1201

  349 expr_list: expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  727 dim_list: '[' expr . ']'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 857

    ']'       [reduce using rule 349 (expr_list)]
    $default  reduce using rule 349 (expr_list)


State 1202

  854 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  855                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 943
    "$f"     shift, and go to state 737
    "name"   shift, and go to state 1251

    $default  reduce using rule 836 (optional_block)

    make_struct_fields  go to state 948
    make_struct_dim     go to state 1366
    optional_block      go to state 1367


State 1203

  871 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1368
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1204

  819 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  820                   | make_struct_fields ',' . "name" ":=" expr
  823                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1237
    "name"  shift, and go to state 1238


State 1205

  829 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    make_struct_fields  go to state 1369


State 1206

  852 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1207
    ",]]"  shift, and go to state 1208
    ']'    shift, and go to state 1209

    optional_trailing_delim_sqr_sqr  go to state 1370


State 1207

  845 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 845 (optional_trailing_delim_sqr_sqr)


State 1208

  846 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 846 (optional_trailing_delim_sqr_sqr)


State 1209

  844 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1371


State 1210

  853 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 853 (make_struct_decl)


State 1211

  872 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1372
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1212

  880 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 947
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple              go to state 1373
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1213

  843 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 843 (optional_trailing_semicolon_sqr_sqr)


State 1214

  842 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1374


State 1215

  882 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 882 (make_dim_decl)


State 1216

  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1375
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1217

  857 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    make_struct_fields  go to state 948
    make_struct_dim     go to state 1376


State 1218

  856 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1377
    ";}]"                shift, and go to state 1378
    ",}]"                shift, and go to state 1379

    optional_trailing_delim_cur_sqr  go to state 1380


State 1219

  840 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1381


State 1220

  841 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 841 (optional_trailing_semicolon_cur_sqr)


State 1221

  883 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 883 (make_dim_decl)


State 1222

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1382
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1223

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  873 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 873 (make_map_tuple)


State 1224

  838 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 838 (optional_trailing_semicolon_cur_cur)


State 1225

  902 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 902 (make_table)


State 1226

  271 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  274 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1383

    semicolon  go to state 630
    c_or_s     go to state 1327


State 1227

  271 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  277 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1384

    semicolon  go to state 630
    c_or_s     go to state 1327


State 1228

   38 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    ':'    shift, and go to state 1385
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 33 (optional_format_string)

    optional_format_string  go to state 1386


State 1229

  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1387
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1230

  904 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 904 (expr_map_tuple_list)


State 1231

  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1388
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1232

  674 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  675                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1389
    ','   shift, and go to state 871


State 1233

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  821 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  822                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1390


State 1234

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  818 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 818 (make_struct_fields)


State 1235

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  817 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 817 (make_struct_fields)


State 1236

  489 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 489 (expr)


State 1237

  823 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  824                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1391


State 1238

  819 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  820                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 870
    ":="  shift, and go to state 1392
    '='   shift, and go to state 872

    copy_or_move  go to state 1393


State 1239

  424 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1394
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1240

  549 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1395
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1241

  428 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1396


State 1242

  431 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1397


State 1243

   68 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 1398


State 1244

   65 elif_or_static_elif: "elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1245

   66 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1246

   69 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1399
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1247

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1248

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1400
    "is"    shift, and go to state 762
    "as"    shift, and go to state 763
    "<<"    shift, and go to state 772
    ">>"    shift, and go to state 773
    "++"    shift, and go to state 774
    "--"    shift, and go to state 775
    "<="    shift, and go to state 776
    ">="    shift, and go to state 779
    "=="    shift, and go to state 780
    "!="    shift, and go to state 781
    "->"    shift, and go to state 782
    "??"    shift, and go to state 784
    "?."    shift, and go to state 785
    "?["    shift, and go to state 786
    "<|"    shift, and go to state 787
    "|>"    shift, and go to state 788
    "<<<"   shift, and go to state 790
    ">>>"   shift, and go to state 791
    "&&"    shift, and go to state 794
    "||"    shift, and go to state 795
    "^^"    shift, and go to state 796
    ".."    shift, and go to state 800
    '?'     shift, and go to state 802
    '|'     shift, and go to state 803
    '^'     shift, and go to state 804
    '&'     shift, and go to state 805
    '<'     shift, and go to state 806
    '>'     shift, and go to state 807
    '-'     shift, and go to state 808
    '+'     shift, and go to state 809
    '*'     shift, and go to state 810
    '/'     shift, and go to state 811
    '%'     shift, and go to state 812
    '.'     shift, and go to state 813
    '['     shift, and go to state 814

    $default  reduce using rule 74 (expression_else_one_liner)

    expression_else_one_liner  go to state 1401


State 1249

  235 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  261 expressions: expressions . expression_any
  262            | expressions . error

    error                             shift, and go to state 449
    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 452
    "if"                              shift, and go to state 453
    "static_if"                       shift, and go to state 454
    "for"                             shift, and go to state 455
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "return"                          shift, and go to state 462
    "null"                            shift, and go to state 463
    "break"                           shift, and go to state 464
    "try"                             shift, and go to state 465
    "table"                           shift, and go to state 466
    "delete"                          shift, and go to state 467
    "deref"                           shift, and go to state 468
    "with"                            shift, and go to state 469
    "assume"                          shift, and go to state 470
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 473
    "continue"                        shift, and go to state 474
    "pass"                            shift, and go to state 475
    "reinterpret"                     shift, and go to state 476
    "label"                           shift, and go to state 477
    "goto"                            shift, and go to state 478
    "unsafe"                          shift, and go to state 479
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "yield"                           shift, and go to state 486
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 509
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder             go to state 522
    expr_reader                go to state 523
    expression_label           go to state 524
    expression_goto            go to state 525
    semicolon                  go to state 526
    if_or_static_if            go to state 527
    expression_if_one_liner    go to state 528
    expression_if_then_else    go to state 529
    expression_for_loop        go to state 530
    expression_unsafe          go to state 531
    expression_while_loop      go to state 532
    expression_with            go to state 533
    expression_with_alias      go to state 534
    close_block                go to state 1402
    expr_call_pipe             go to state 536
    expression_any             go to state 537
    expr_keyword               go to state 538
    expression_keyword         go to state 539
    expr_pipe                  go to state 540
    name_in_namespace          go to state 541
    expression_delete          go to state 542
    expr_new                   go to state 543
    expression_break           go to state 544
    expression_continue        go to state 545
    expression_return_no_pipe  go to state 546
    expression_return          go to state 547
    expression_yield_no_pipe   go to state 548
    expression_yield           go to state 549
    expression_try_catch       go to state 550
    kwd_let                    go to state 551
    expression_let             go to state 552
    expr_cast                  go to state 553
    expr_type_decl             go to state 554
    expr_type_info             go to state 555
    block_or_lambda            go to state 556
    expr_full_block            go to state 557
    expr_numeric_const         go to state 558
    expr_assign                go to state 559
    expr_assign_pipe           go to state 560
    expr_named_call            go to state 561
    expr_method_call           go to state 562
    func_addr_expr             go to state 563
    expr_field                 go to state 564
    expr_call                  go to state 565
    expr                       go to state 566
    expr_mtag                  go to state 567
    basic_type_declaration     go to state 568
    make_decl                  go to state 569
    make_struct_decl           go to state 570
    make_tuple_call            go to state 571
    make_dim_decl              go to state 572
    make_table_decl            go to state 573
    array_comprehension        go to state 574


State 1250

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 1003
    "[["       shift, and go to state 1004

    $default  reduce using rule 364 (optional_capture_list)

    optional_capture_list  go to state 1403


State 1251

  817 make_struct_fields: "name" . copy_or_move expr
  818                   | "name" . ":=" expr

    "<-"  shift, and go to state 870
    ":="  shift, and go to state 979
    '='   shift, and go to state 872

    copy_or_move  go to state 980


State 1252

  443 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 443 (expr_call)


State 1253

  445 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1404


State 1254

  419 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1204
    ']'  shift, and go to state 1405


State 1255

  350 expr_list: expr_list ',' . expr
  420 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 1406
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1155
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1256

  446 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 446 (expr_call)


State 1257

  444 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 444 (expr_call)


State 1258

  319 tuple_expansion: "name" .

    $default  reduce using rule 319 (tuple_expansion)


State 1259

  320 tuple_expansion: tuple_expansion . ',' "name"
  321 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1407
    ']'  shift, and go to state 1408


State 1260

  320 tuple_expansion: tuple_expansion . ',' "name"
  323 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  324                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  327                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  328                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1407
    ')'  shift, and go to state 1409


State 1261

  366 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1262
    ":="    shift, and go to state 1263
    "name"  shift, and go to state 1264
    '='     shift, and go to state 1265
    '&'     shift, and go to state 1266

    capture_entry  go to state 1267
    capture_list   go to state 1410


State 1262

  359 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1411


State 1263

  360 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1412


State 1264

  361 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1413


State 1265

  358 capture_entry: '=' . "name"

    "name"  shift, and go to state 1414


State 1266

  357 capture_entry: '&' . "name"

    "name"  shift, and go to state 1415


State 1267

  362 capture_list: capture_entry .

    $default  reduce using rule 362 (capture_list)


State 1268

  363 capture_list: capture_list . ',' capture_entry
  365 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1416
    ']'  shift, and go to state 1417


State 1269

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1418


State 1270

  508 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 506 ($@29)

    $@29  go to state 1419


State 1271

  548 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1420
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1272

  514 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 512 ($@31)

    $@31  go to state 1421


State 1273

  546 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1422
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1274

  400 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 400 (expr_assign_pipe_right)


State 1275

  398 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 398 (expr_assign_pipe_right)


State 1276

  399 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 399 (expr_assign_pipe_right)


State 1277

  421 expr_method_call: expr "->" "name" '(' . ')'
  422                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1423
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1424
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1278

  543 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1425
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1279

  493 expr: expr "?[" expr ']' .

    $default  reduce using rule 493 (expr)


State 1280

  519 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1426


State 1281

  547 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1427


State 1282

  516 expr: expr '?' "as" "name" .

    $default  reduce using rule 516 (expr)


State 1283

  520 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 520 (expr)


State 1284

  505 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1428
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1285

  545 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1429


State 1286

  496 expr: expr '.' "?." "name" .

    $default  reduce using rule 496 (expr)


State 1287

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  494     | expr '.' "?[" expr . ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 1430


State 1288

  542 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1431
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1289

  434 expr_field: expr '.' "name" '(' . ')'
  435           | expr '.' "name" '(' . expr_list ')'
  436           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 1432
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1433
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1434
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1290

  544 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1435


State 1291

  433 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 433 (expr_field)


State 1292

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  492     | expr '.' '[' expr . ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ']'    shift, and go to state 1436


State 1293

  441 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 440 ($@28)

    $@28  go to state 1437


State 1294

  437 expr_field: expr '.' basic_type_declaration '(' . ')'
  438           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1438
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1439
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1295

  491 expr: expr '[' expr ']' .

    $default  reduce using rule 491 (expr)


State 1296

  448 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 448 (expr_call)


State 1297

  653 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 653 (enum_declaration)


State 1298

  633 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 633 (enum_list)


State 1299

  132 optional_annotation_list: '[' annotation_list ']' .
  572 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 132 (optional_annotation_list)

    semicolon  go to state 1440


State 1300

  559 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 559 (optional_public_or_private_member_variable)


State 1301

  560 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 560 (optional_public_or_private_member_variable)


State 1302

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  571                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1441
    "static"    shift, and go to state 1303

    $default  reduce using rule 561 (optional_static_member_variable)

    optional_static_member_variable  go to state 1442


State 1303

  562 optional_static_member_variable: "static" .

    $default  reduce using rule 562 (optional_static_member_variable)


State 1304

  563 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1443
    "sealed"    shift, and go to state 1444

    $default  reduce using rule 553 (optional_override)

    optional_override  go to state 1445


State 1305

  567 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 567 (struct_variable_declaration_list)


State 1306

  502 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  503     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1003
    "[["       shift, and go to state 1004

    $default  reduce using rule 364 (optional_capture_list)

    optional_capture_list  go to state 1446


State 1307

  614 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 614 (let_variable_declaration)


State 1308

  737 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 737 (type_declaration_no_options)


State 1309

  760 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 760 (type_declaration_no_options)


State 1310

  763 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 763 (type_declaration_no_options)


State 1311

  726 table_type_pair: type_declaration c_or_s type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 726 (table_type_pair)


State 1312

  766 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 766 (type_declaration_no_options)


State 1313

  756 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1314

  722 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 722 (bitfield_type_declaration)


State 1315

  716 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 716 (bitfield_bits)


State 1316

  770 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 770 (type_declaration_no_options)


State 1317

  773 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 772 ($@64)

    $@64  go to state 1447


State 1318

  777 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 777 (type_declaration_no_options)


State 1319

  780 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 779 ($@68)

    $@68  go to state 1448


State 1320

  784 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 784 (type_declaration_no_options)


State 1321

  787 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 786 ($@72)

    $@72  go to state 1449


State 1322

  790 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 790 (type_declaration_no_options)


State 1323

  584 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 584 (tuple_type_list)


State 1324

  793 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 793 (type_declaration_no_options)


State 1325

  590 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 590 (variant_type_list)


State 1326

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1450


State 1327

  271 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1451


State 1328

  672 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 672 (variable_name_with_pos_list)


State 1329

  675 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1452


State 1330

  600 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1453
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1331

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 859 ($@90)

    $@90  go to state 1454


State 1332

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 862 ($@92)

    $@92  go to state 1455


State 1333

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  350 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 893

    open_block        go to state 300
    expression_block  go to state 1456


State 1334

  290 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 289 ($@13)

    $@13  go to state 1457


State 1335

  296 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1458


State 1336

  294 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 294 (expr_new)


State 1337

  295 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 295 (expr_new)


State 1338

  293 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 293 (expr_new)


State 1339

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  345               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1459

    semicolon  go to state 630
    c_or_s     go to state 1460


State 1340

  343 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 343 (expr_type_info)


State 1341

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1461


State 1342

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1462


State 1343

  346 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 346 (expr_type_info)


State 1344

  342 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 341 ($@21)

    $@21  go to state 1463


State 1345

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1464
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1346

  584 tuple_type_list: tuple_type_list . c_or_s tuple_type
  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1465

    semicolon  go to state 630
    c_or_s     go to state 1123


State 1347

  590 variant_type_list: variant_type_list . c_or_s variant_type
  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 629
    '>'                  shift, and go to state 1466

    semicolon  go to state 630
    c_or_s     go to state 1125


State 1348

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 895 ($@106)

    $@106  go to state 1467


State 1349

  893 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 893 (make_dim_decl)


State 1350

  908 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 522
    expr_reader                   go to state 523
    optional_expr_map_tuple_list  go to state 1468
    expression_keyword            go to state 586
    name_in_namespace             go to state 541
    expr_new                      go to state 543
    expr_cast                     go to state 553
    expr_type_decl                go to state 554
    expr_type_info                go to state 555
    block_or_lambda               go to state 556
    expr_full_block               go to state 557
    expr_numeric_const            go to state 558
    expr_named_call               go to state 561
    expr_method_call              go to state 562
    func_addr_expr                go to state 563
    expr_field                    go to state 564
    expr_call                     go to state 565
    expr                          go to state 716
    expr_mtag                     go to state 567
    basic_type_declaration        go to state 568
    make_decl                     go to state 569
    make_struct_decl              go to state 570
    make_map_tuple                go to state 725
    make_tuple_call               go to state 571
    make_dim_decl                 go to state 572
    expr_map_tuple_list           go to state 726
    make_table_decl               go to state 573
    array_comprehension           go to state 574


State 1351

  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"
  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1469
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1352

   91 expression_with_alias: "assume" "name" '=' $@6 expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 91 (expression_with_alias)


State 1353

  333 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 332 ($@15)

    $@15  go to state 1470


State 1354

  336 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 335 ($@17)

    $@17  go to state 1471


State 1355

  339 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 338 ($@19)

    $@19  go to state 1472


State 1356

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 899 ($@108)

    $@108  go to state 1473


State 1357

  897 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 897 (make_dim_decl)


State 1358

  869 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 868 ($@96)

    $@96  go to state 1474


State 1359

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 877 ($@98)

    $@98  go to state 1475


State 1360

  875 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 875 (make_tuple_call)


State 1361

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 865 ($@94)

    $@94  go to state 1476


State 1362

  238 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  502 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  503     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1477
    '$'  shift, and go to state 520
    '@'  shift, and go to state 699

    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 1478


State 1363

  368 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1479


State 1364

  540 expr_mtag: "$c" '(' expr ')' '(' . ')'
  541          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1480
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1481
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1365

  350 expr_list: expr_list . ',' expr
  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1482
    ','                  shift, and go to state 893


State 1366

  829 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  855 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 943
    "end of expression"  shift, and go to state 1205

    $default  reduce using rule 836 (optional_block)

    optional_block  go to state 1483


State 1367

  854 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1207
    ",]]"  shift, and go to state 1208
    ']'    shift, and go to state 1209

    optional_trailing_delim_sqr_sqr  go to state 1484


State 1368

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  871 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 871 (make_tuple)


State 1369

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  829 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1204

    $default  reduce using rule 829 (make_struct_dim)


State 1370

  852 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 852 (make_struct_decl)


State 1371

  844 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 844 (optional_trailing_delim_sqr_sqr)


State 1372

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  872 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 872 (make_tuple)


State 1373

  872 make_tuple: make_tuple . ',' expr
  880 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1211

    $default  reduce using rule 880 (make_dim)


State 1374

  842 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 842 (optional_trailing_semicolon_sqr_sqr)


State 1375

  350 expr_list: expr_list . ',' expr
  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1485
    ','                  shift, and go to state 893


State 1376

  829 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  857 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 943
    "end of expression"  shift, and go to state 1205

    $default  reduce using rule 836 (optional_block)

    optional_block  go to state 1486


State 1377

  847 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1487


State 1378

  848 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 848 (optional_trailing_delim_cur_sqr)


State 1379

  849 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 849 (optional_trailing_delim_cur_sqr)


State 1380

  856 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 856 (make_struct_decl)


State 1381

  840 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 840 (optional_trailing_semicolon_cur_sqr)


State 1382

  350 expr_list: expr_list . ',' expr
  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1488
    ','                  shift, and go to state 893


State 1383

  274 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 273 ($@9)

    $@9  go to state 1489


State 1384

  277 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 276 ($@11)

    $@11  go to state 1490


State 1385

   35 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 34 ($@1)

    $@1  go to state 1491


State 1386

   38 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1492


State 1387

  350 expr_list: expr_list . ',' expr
  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1493
    ','                  shift, and go to state 893


State 1388

  350 expr_list: expr_list . ',' expr
  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1494
    ','                  shift, and go to state 893


State 1389

  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1495
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1390

  821 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  822                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 870
    ":="  shift, and go to state 1496
    '='   shift, and go to state 872

    copy_or_move  go to state 1497


State 1391

  823 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  824                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1498
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1392

  820 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1499
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1393

  819 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1500
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1394

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  424 func_addr_name: "$i" '(' expr . ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1501


State 1395

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  549          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1502


State 1396

  428 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1503
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1397

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1504


State 1398

   68 expression_else: "else" expression_block .

    $default  reduce using rule 68 (expression_else)


State 1399

   69 expression_else: elif_or_static_elif expr . expression_block expression_else
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 762
    "as"                   shift, and go to state 763
    "<<"                   shift, and go to state 772
    ">>"                   shift, and go to state 773
    "++"                   shift, and go to state 774
    "--"                   shift, and go to state 775
    "<="                   shift, and go to state 776
    ">="                   shift, and go to state 779
    "=="                   shift, and go to state 780
    "!="                   shift, and go to state 781
    "->"                   shift, and go to state 782
    "??"                   shift, and go to state 784
    "?."                   shift, and go to state 785
    "?["                   shift, and go to state 786
    "<|"                   shift, and go to state 787
    "|>"                   shift, and go to state 788
    "<<<"                  shift, and go to state 790
    ">>>"                  shift, and go to state 791
    "&&"                   shift, and go to state 794
    "||"                   shift, and go to state 795
    "^^"                   shift, and go to state 796
    ".."                   shift, and go to state 800
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 802
    '|'                    shift, and go to state 803
    '^'                    shift, and go to state 804
    '&'                    shift, and go to state 805
    '<'                    shift, and go to state 806
    '>'                    shift, and go to state 807
    '-'                    shift, and go to state 808
    '+'                    shift, and go to state 809
    '*'                    shift, and go to state 810
    '/'                    shift, and go to state 811
    '%'                    shift, and go to state 812
    '.'                    shift, and go to state 813
    '['                    shift, and go to state 814

    open_block        go to state 300
    expression_block  go to state 1505


State 1400

   76 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 75 ($@3)

    $@3  go to state 1506


State 1401

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1507


State 1402

  235 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 235 (expression_block)


State 1403

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 298

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1508


State 1404

  445 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 445 (expr_call)


State 1405

  419 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1509


State 1406

  420 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 1510
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1407

  320 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1511


State 1408

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1512


State 1409

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  324                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  327                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  328                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1513
    '&'  shift, and go to state 406

    $default  reduce using rule 606 (optional_ref)

    optional_ref  go to state 1514


State 1410

  363 capture_list: capture_list . ',' capture_entry
  366 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1416
    ')'  shift, and go to state 1515


State 1411

  359 capture_entry: "<-" "name" .

    $default  reduce using rule 359 (capture_entry)


State 1412

  360 capture_entry: ":=" "name" .

    $default  reduce using rule 360 (capture_entry)


State 1413

  361 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1516


State 1414

  358 capture_entry: '=' "name" .

    $default  reduce using rule 358 (capture_entry)


State 1415

  357 capture_entry: '&' "name" .

    $default  reduce using rule 357 (capture_entry)


State 1416

  363 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1262
    ":="    shift, and go to state 1263
    "name"  shift, and go to state 1264
    '='     shift, and go to state 1265
    '&'     shift, and go to state 1266

    capture_entry  go to state 1517


State 1417

  365 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1518


State 1418

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1519
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 300
    expression_block       go to state 1520
    block_or_simple_block  go to state 1521


State 1419

  508 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1522


State 1420

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  548          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1523


State 1421

  514 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1524


State 1422

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  546          | expr "as" "$f" '(' expr . ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1525


State 1423

  421 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 421 (expr_method_call)


State 1424

  350 expr_list: expr_list . ',' expr
  422 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 893
    ')'  shift, and go to state 1526


State 1425

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  543          | expr "?." "$f" '(' expr . ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1527


State 1426

  519 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 517 ($@33)

    $@33  go to state 1528


State 1427

  547 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1529
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1428

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  505     | expr '?' expr ':' expr .
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 505 (expr)


State 1429

  545 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1530
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1430

  494 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 494 (expr)


State 1431

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr '.' "$f" '(' expr . ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1531


State 1432

  436 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  881 make_dim_decl: '[' . optional_expr_list ']'
  914 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  915                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "for"                             shift, and go to state 732
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "iterator"                        shift, and go to state 733
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "$f"                              shift, and go to state 737
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 738
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 734
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_fields      go to state 1532
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1433

  434 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 434 (expr_field)


State 1434

  350 expr_list: expr_list . ',' expr
  435 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 893
    ')'  shift, and go to state 1533


State 1435

  544 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1534
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1436

  492 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 492 (expr)


State 1437

  441 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 441 (expr_field)


State 1438

  437 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 437 (expr_field)


State 1439

  350 expr_list: expr_list . ',' expr
  438 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 893
    ')'  shift, and go to state 1535


State 1440

  572 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 572 (struct_variable_declaration_list)


State 1441

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1536

    $default  reduce using rule 556 (optional_constant)

    optional_constant  go to state 1537


State 1442

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1443
    "sealed"    shift, and go to state 1444

    $default  reduce using rule 553 (optional_override)

    optional_override  go to state 1538


State 1443

  554 optional_override: "override" .

    $default  reduce using rule 554 (optional_override)


State 1444

  555 optional_override: "sealed" .

    $default  reduce using rule 555 (optional_override)


State 1445

  563 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1300
    "private"  shift, and go to state 1301

    $default  reduce using rule 558 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1539


State 1446

  502 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  503     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1477


State 1447

  773 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 773 (type_declaration_no_options)


State 1448

  780 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 780 (type_declaration_no_options)


State 1449

  787 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 787 (type_declaration_no_options)


State 1450

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 1540
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1451

  271 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434

    $default  reduce using rule 271 (type_declaration_no_options_list)


State 1452

  675 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 675 (variable_name_with_pos_list)


State 1453

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  600 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 600 (variable_declaration_type)


State 1454

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1541


State 1455

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1542


State 1456

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 86 (expression_for_loop)


State 1457

  290 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 290 (new_type_declaration)


State 1458

  296 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 296 (expr_new)


State 1459

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1543
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1460

  345 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1544


State 1461

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1545


State 1462

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1546
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1463

  342 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 342 (expr_type_decl)


State 1464

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 885 ($@100)

    $@100  go to state 1547


State 1465

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 888 ($@102)

    $@102  go to state 1548


State 1466

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 891 ($@104)

    $@104  go to state 1549


State 1467

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1550


State 1468

  908 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1551


State 1469

  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1552


State 1470

  333 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1553
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1471

  336 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1554
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1472

  339 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1555
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1473

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1556


State 1474

  869 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1558


State 1475

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1559


State 1476

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1560


State 1477

  502 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  503     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    ')'                               shift, and go to state 1561
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1562
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1478

  238 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 238 (expr_call_pipe)


State 1479

  368 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1519
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 300
    expression_block       go to state 1520
    block_or_simple_block  go to state 1563


State 1480

  540 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 540 (expr_mtag)


State 1481

  350 expr_list: expr_list . ',' expr
  541 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 893
    ')'  shift, and go to state 1564


State 1482

  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1565
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1483

  855 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1207
    ",]]"  shift, and go to state 1208
    ']'    shift, and go to state 1209

    optional_trailing_delim_sqr_sqr  go to state 1566


State 1484

  854 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 854 (make_struct_decl)


State 1485

  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1567
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1486

  857 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1377
    ";}]"                shift, and go to state 1378
    ",}]"                shift, and go to state 1379

    optional_trailing_delim_cur_sqr  go to state 1568


State 1487

  847 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 847 (optional_trailing_delim_cur_sqr)


State 1488

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 716
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_map_tuple          go to state 1569
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1489

  274 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1570
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1490

  277 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1571

    '('       [reduce using rule 266 (optional_expr_list_in_braces)]
    $default  reduce using rule 266 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1572


State 1491

   35 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 31 (format_string)

    format_string  go to state 1573


State 1492

   38 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 38 (string_builder_body)


State 1493

  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 716
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_map_tuple          go to state 1574
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1494

  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1575
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1495

  350 expr_list: expr_list . ',' expr
  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1576
    ','                  shift, and go to state 893


State 1496

  822 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1577
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1497

  821 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1578
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1498

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  823 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  824                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1579


State 1499

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 820 (make_struct_fields)


State 1500

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 819 (make_struct_fields)


State 1501

  424 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 424 (func_addr_name)


State 1502

  549 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 549 (expr_mtag)


State 1503

  428 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 427 ($@24)

    $@24  go to state 1580


State 1504

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1581


State 1505

   69 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1243
    "elif"         shift, and go to state 1244
    "static_elif"  shift, and go to state 1245

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1246
    expression_else      go to state 1582


State 1506

   76 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "return"                          shift, and go to state 1583
    "null"                            shift, and go to state 463
    "break"                           shift, and go to state 464
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "continue"                        shift, and go to state 474
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "yield"                           shift, and go to state 1584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder             go to state 522
    expr_reader                go to state 523
    expression_if_one_liner    go to state 1585
    expression_keyword         go to state 586
    name_in_namespace          go to state 541
    expr_new                   go to state 543
    expression_break           go to state 1586
    expression_continue        go to state 1587
    expression_return_no_pipe  go to state 1588
    expression_yield_no_pipe   go to state 1589
    expr_cast                  go to state 553
    expr_type_decl             go to state 554
    expr_type_info             go to state 555
    block_or_lambda            go to state 556
    expr_full_block            go to state 557
    expr_numeric_const         go to state 558
    expr_named_call            go to state 561
    expr_method_call           go to state 562
    func_addr_expr             go to state 563
    expr_field                 go to state 564
    expr_call                  go to state 565
    expr                       go to state 1590
    expr_mtag                  go to state 567
    basic_type_declaration     go to state 568
    make_decl                  go to state 569
    make_struct_decl           go to state 570
    make_tuple_call            go to state 571
    make_dim_decl              go to state 572
    make_table_decl            go to state 573
    array_comprehension        go to state 574


State 1507

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 84 (expression_if_then_else)


State 1508

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 390

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1591


State 1509

  419 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 419 (expr_named_call)


State 1510

  420 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1204
    ']'  shift, and go to state 1592


State 1511

  320 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 320 (tuple_expansion)


State 1512

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  326                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1593
    '&'  shift, and go to state 406

    $default  reduce using rule 606 (optional_ref)

    optional_ref  go to state 1594


State 1513

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  324                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1595


State 1514

  327 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  328                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 591
    ":="  shift, and go to state 592
    '='   shift, and go to state 593

    copy_or_move_or_clone  go to state 1596


State 1515

  366 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 366 (optional_capture_list)


State 1516

  361 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1597


State 1517

  363 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 363 (capture_list)


State 1518

  365 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 365 (optional_capture_list)


State 1519

  352 block_or_simple_block: "=>" . expr
  353                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "<-"                              shift, and go to state 1598
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1599
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1520

  351 block_or_simple_block: expression_block .

    $default  reduce using rule 351 (block_or_simple_block)


State 1521

  369 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 369 (expr_full_block)


State 1522

  508 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "??"        shift, and go to state 427
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '>'         shift, and go to state 1600
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    dim_list  go to state 433


State 1523

  548 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 548 (expr_mtag)


State 1524

  514 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1601


State 1525

  546 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1526

  422 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 422 (expr_method_call)


State 1527

  543 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 543 (expr_mtag)


State 1528

  519 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 372
    type_declaration             go to state 1602


State 1529

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr '?' "as" "$f" '(' expr . ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1603


State 1530

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr '.' "?." "$f" '(' expr . ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1604


State 1531

  542 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 542 (expr_mtag)


State 1532

  436 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1204
    ']'  shift, and go to state 1605


State 1533

  435 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 435 (expr_field)


State 1534

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr '.' '.' "$f" '(' expr . ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1606


State 1535

  438 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 438 (expr_field)


State 1536

  557 optional_constant: "const" .

    $default  reduce using rule 557 (optional_constant)


State 1537

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 568 ($@36)

    $@36  go to state 1607


State 1538

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1536

    $default  reduce using rule 556 (optional_constant)

    optional_constant  go to state 1608


State 1539

  563 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 640
    "name"  shift, and go to state 641

    variable_declaration_no_type  go to state 1609
    variable_declaration_type     go to state 1610
    variable_declaration          go to state 1611
    variable_name_with_pos_list   go to state 644


State 1540

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1612


State 1541

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1613


State 1542

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1614


State 1543

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1615


State 1544

  345 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1616


State 1545

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1617


State 1546

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1618


State 1547

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1619


State 1548

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1620


State 1549

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1621


State 1550

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 1622
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1551

  908 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 908 (make_table_decl)


State 1552

  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 268 (optional_expr_map_tuple_list)

    string_builder                go to state 522
    expr_reader                   go to state 523
    optional_expr_map_tuple_list  go to state 1623
    expression_keyword            go to state 586
    name_in_namespace             go to state 541
    expr_new                      go to state 543
    expr_cast                     go to state 553
    expr_type_decl                go to state 554
    expr_type_info                go to state 555
    block_or_lambda               go to state 556
    expr_full_block               go to state 557
    expr_numeric_const            go to state 558
    expr_named_call               go to state 561
    expr_method_call              go to state 562
    func_addr_expr                go to state 563
    expr_field                    go to state 564
    expr_call                     go to state 565
    expr                          go to state 716
    expr_mtag                     go to state 567
    basic_type_declaration        go to state 568
    make_decl                     go to state 569
    make_struct_decl              go to state 570
    make_map_tuple                go to state 725
    make_tuple_call               go to state 571
    make_dim_decl                 go to state 572
    expr_map_tuple_list           go to state 726
    make_table_decl               go to state 573
    array_comprehension           go to state 574


State 1553

  333 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 333 (expr_cast)


State 1554

  336 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 336 (expr_cast)


State 1555

  339 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 339 (expr_cast)


State 1556

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 1624
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1557

  851 use_initializer: "uninitialized" .

    $default  reduce using rule 851 (use_initializer)


State 1558

  869 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 869 (make_struct_decl)


State 1559

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1625


State 1560

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1626


State 1561

  502 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 502 (expr)


State 1562

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  503     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1627


State 1563

  368 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 368 (expr_block)


State 1564

  541 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 541 (expr_mtag)


State 1565

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    ".."                 shift, and go to state 800
    "end of expression"  shift, and go to state 1628
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1629


State 1566

  855 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 855 (make_struct_decl)


State 1567

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    ".."                 shift, and go to state 800
    "end of expression"  shift, and go to state 1628
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1630


State 1568

  857 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 857 (make_struct_decl)


State 1569

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1628

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1631


State 1570

  274 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 274 (expression_keyword)


State 1571

  267 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 264 (optional_expr_list)

    string_builder          go to state 522
    expr_reader             go to state 523
    optional_expr_list      go to state 1632
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 735
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1572

  277 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 277 (expression_keyword)


State 1573

   32 format_string: format_string . STRING_CHARACTER
   35 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1633

    $default  reduce using rule 35 (optional_format_string)


State 1574

  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1628

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1634


State 1575

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    ".."                 shift, and go to state 800
    "end of expression"  shift, and go to state 1628
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1635


State 1576

  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1636
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1577

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  822 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 822 (make_struct_fields)


State 1578

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  821 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 821 (make_struct_fields)


State 1579

  823 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  824                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 870
    ":="  shift, and go to state 1637
    '='   shift, and go to state 872

    copy_or_move  go to state 1638


State 1580

  428 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 985
    "name"  shift, and go to state 63

    name_in_namespace  go to state 988
    func_addr_name     go to state 1639


State 1581

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 430 ($@26)

    $@26  go to state 1640


State 1582

   69 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 69 (expression_else)


State 1583

  300 expression_return_no_pipe: "return" .
  301                          | "return" . expr_list
  302                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "<-"                              shift, and go to state 1641
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    $default  reduce using rule 300 (expression_return_no_pipe)

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 666
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1584

  306 expression_yield_no_pipe: "yield" . expr
  307                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "<-"                              shift, and go to state 1642
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1643
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1585

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1586

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1587

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1588

   78 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1589

   79 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1590

   77 expression_if_one_liner: expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 77 (expression_if_one_liner)


State 1591

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 1644


State 1592

  420 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1645


State 1593

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 326
    "array"      shift, and go to state 327
    "table"      shift, and go to state 328
    "typedecl"   shift, and go to state 329
    "iterator"   shift, and go to state 330
    "smart_ptr"  shift, and go to state 331
    "bool"       shift, and go to state 332
    "void"       shift, and go to state 333
    "string"     shift, and go to state 334
    "auto"       shift, and go to state 335
    "int"        shift, and go to state 336
    "int2"       shift, and go to state 337
    "int3"       shift, and go to state 338
    "int4"       shift, and go to state 339
    "uint"       shift, and go to state 340
    "bitfield"   shift, and go to state 341
    "uint2"      shift, and go to state 342
    "uint3"      shift, and go to state 343
    "uint4"      shift, and go to state 344
    "float"      shift, and go to state 345
    "float2"     shift, and go to state 346
    "float3"     shift, and go to state 347
    "float4"     shift, and go to state 348
    "range"      shift, and go to state 349
    "urange"     shift, and go to state 350
    "range64"    shift, and go to state 351
    "urange64"   shift, and go to state 352
    "block"      shift, and go to state 353
    "int64"      shift, and go to state 354
    "uint64"     shift, and go to state 355
    "double"     shift, and go to state 356
    "function"   shift, and go to state 357
    "lambda"     shift, and go to state 358
    "int8"       shift, and go to state 359
    "uint8"      shift, and go to state 360
    "int16"      shift, and go to state 361
    "uint16"     shift, and go to state 362
    "tuple"      shift, and go to state 363
    "variant"    shift, and go to state 364
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 365
    "name"       shift, and go to state 63
    '$'          shift, and go to state 366

    name_in_namespace            go to state 367
    basic_type_declaration       go to state 368
    structure_type_declaration   go to state 369
    auto_type_declaration        go to state 370
    bitfield_type_declaration    go to state 371
    type_declaration_no_options  go to state 1646


State 1594

  325 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  326                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 591
    ":="  shift, and go to state 592
    '='   shift, and go to state 593

    copy_or_move_or_clone  go to state 1647


State 1595

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  324                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "<-"        shift, and go to state 591
    "??"        shift, and go to state 427
    ":="        shift, and go to state 592
    '='         shift, and go to state 593
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    copy_or_move_or_clone  go to state 1648
    dim_list               go to state 433


State 1596

  327 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  328                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 1649
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1650
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1597

  361 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 361 (capture_entry)


State 1598

  353 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1651
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1599

  352 block_or_simple_block: "=>" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    ".."  error (nonassociative)

    $default  reduce using rule 352 (block_or_simple_block)


State 1600

  508 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 507 ($@30)

    $@30  go to state 1652


State 1601

  514 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 513 ($@32)

    $@32  go to state 1653


State 1602

  519 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  795 type_declaration: type_declaration . '|' type_declaration_no_options
  796                 | type_declaration . '|' '#'

    '|'  shift, and go to state 434
    '>'  shift, and go to state 1654


State 1603

  547 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1604

  545 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 545 (expr_mtag)


State 1605

  436 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1655


State 1606

  544 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 544 (expr_mtag)


State 1607

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1656


State 1608

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 570 ($@37)

    $@37  go to state 1657


State 1609

  602 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 602 (variable_declaration)


State 1610

  601 variable_declaration: variable_declaration_type .

    $default  reduce using rule 601 (variable_declaration)


State 1611

  563 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 563 (structure_variable_declaration)


State 1612

  741 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1613

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    '('     shift, and go to state 1658

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1659
    make_struct_dim_list           go to state 1660
    make_struct_dim_decl           go to state 1661
    optional_make_struct_dim_decl  go to state 1662


State 1614

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    '('     shift, and go to state 1658

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1659
    make_struct_dim_list           go to state 1660
    make_struct_dim_decl           go to state 1661
    optional_make_struct_dim_decl  go to state 1663


State 1615

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 344 (expr_type_info)


State 1616

  345 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1664
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1617

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1665
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1618

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 347 (expr_type_info)


State 1619

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1666


State 1620

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1557

    $default  reduce using rule 850 (use_initializer)

    use_initializer  go to state 1667


State 1621

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    $default  reduce using rule 825 (make_variant_dim)

    make_struct_fields  go to state 1668
    make_variant_dim    go to state 1669


State 1622

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1670


State 1623

  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1671


State 1624

  350 expr_list: expr_list . ',' expr
  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 976

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1672


State 1625

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    '('     shift, and go to state 1658

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1659
    make_struct_dim_list           go to state 1660
    make_struct_dim_decl           go to state 1661
    optional_make_struct_dim_decl  go to state 1673


State 1626

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    $default  reduce using rule 825 (make_variant_dim)

    make_struct_fields  go to state 1668
    make_variant_dim    go to state 1674


State 1627

  503 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 503 (expr)


State 1628

  911 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1675


State 1629

  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1676


State 1630

  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1677


State 1631

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1678


State 1632

  267 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1679

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1680


State 1633

   32 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 32 (format_string)


State 1634

  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1681


State 1635

  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1682


State 1636

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    ".."                 shift, and go to state 800
    "end of expression"  shift, and go to state 1628
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814

    $default  reduce using rule 910 (array_comprehension_where)

    array_comprehension_where  go to state 1683


State 1637

  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1684
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1638

  823 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1685
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1639

  428 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 428 (func_addr_expr)


State 1640

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 985
    "name"  shift, and go to state 63

    name_in_namespace  go to state 988
    func_addr_name     go to state 1686


State 1641

  302 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    expr_list               go to state 892
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 736
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1642

  307 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1687
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1643

  306 expression_yield_no_pipe: "yield" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 306 (expression_yield_no_pipe)


State 1644

  371 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 371 (expr_full_block_assumed_piped)


State 1645

  420 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 420 (expr_named_call)


State 1646

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  322                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  733 type_declaration_no_options: type_declaration_no_options . dim_list
  734                            | type_declaration_no_options . '[' ']'
  742                            | type_declaration_no_options . '-' '[' ']'
  743                            | type_declaration_no_options . "explicit"
  744                            | type_declaration_no_options . "const"
  745                            | type_declaration_no_options . '-' "const"
  746                            | type_declaration_no_options . '&'
  747                            | type_declaration_no_options . '-' '&'
  748                            | type_declaration_no_options . '#'
  749                            | type_declaration_no_options . "implicit"
  750                            | type_declaration_no_options . '-' '#'
  751                            | type_declaration_no_options . "==" "const"
  752                            | type_declaration_no_options . "==" '&'
  753                            | type_declaration_no_options . '?'
  757                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 423
    "implicit"  shift, and go to state 424
    "explicit"  shift, and go to state 425
    "=="        shift, and go to state 426
    "<-"        shift, and go to state 591
    "??"        shift, and go to state 427
    ":="        shift, and go to state 592
    '='         shift, and go to state 593
    '?'         shift, and go to state 428
    '&'         shift, and go to state 429
    '-'         shift, and go to state 430
    '['         shift, and go to state 431
    '#'         shift, and go to state 432

    copy_or_move_or_clone  go to state 1688
    dim_list               go to state 433


State 1647

  325 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  326                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 1689
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1690
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1648

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  324                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 1691
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1692
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1649

  328 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 328 (tuple_expansion_variable_declaration)


State 1650

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  327 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1693
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1651

  353 block_or_simple_block: "=>" "<-" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 353 (block_or_simple_block)


State 1652

  508 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 508 (expr)


State 1653

  514 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 514 (expr)


State 1654

  519 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 518 ($@34)

    $@34  go to state 1694


State 1655

  436 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 436 (expr_field)


State 1656

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1695


State 1657

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1696


State 1658

  830 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    make_struct_fields  go to state 1697


State 1659

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  832 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1204

    $default  reduce using rule 832 (make_struct_dim_decl)


State 1660

  831 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  833 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1698

    $default  reduce using rule 912 (optional_comma)

    optional_comma  go to state 1699


State 1661

  834 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 834 (optional_make_struct_dim_decl)


State 1662

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1700


State 1663

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1701


State 1664

  345 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1702


State 1665

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814
    ')'    shift, and go to state 1703


State 1666

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    '('     shift, and go to state 1658

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1659
    make_struct_dim_list           go to state 1660
    make_struct_dim_decl           go to state 1661
    optional_make_struct_dim_decl  go to state 1704


State 1667

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251
    '('     shift, and go to state 1658

    $default  reduce using rule 835 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1659
    make_struct_dim_list           go to state 1660
    make_struct_dim_decl           go to state 1661
    optional_make_struct_dim_decl  go to state 1705


State 1668

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  826 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1204

    $default  reduce using rule 826 (make_variant_dim)


State 1669

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1706


State 1670

  896 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 896 (make_dim_decl)


State 1671

  909 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 909 (make_table_decl)


State 1672

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1707


State 1673

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1708


State 1674

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1709


State 1675

  911 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 584
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expression_keyword      go to state 586
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1710
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1676

  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1711


State 1677

  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1712


State 1678

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1713


State 1679

  913 optional_comma: ',' .

    $default  reduce using rule 913 (optional_comma)


State 1680

  267 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1714


State 1681

  918 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 918 (array_comprehension)


State 1682

  914 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 914 (array_comprehension)


State 1683

  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1715


State 1684

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 824 (make_struct_fields)


State 1685

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  823 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 823 (make_struct_fields)


State 1686

  431 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 431 (func_addr_expr)


State 1687

  307 expression_yield_no_pipe: "yield" "<-" expr .
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 307 (expression_yield_no_pipe)


State 1688

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  322                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 450
    "class"                           shift, and go to state 451
    "true"                            shift, and go to state 456
    "false"                           shift, and go to state 457
    "new"                             shift, and go to state 458
    "typeinfo"                        shift, and go to state 459
    "type"                            shift, and go to state 460
    "array"                           shift, and go to state 461
    "null"                            shift, and go to state 463
    "table"                           shift, and go to state 466
    "deref"                           shift, and go to state 468
    "cast"                            shift, and go to state 471
    "upcast"                          shift, and go to state 472
    "addr"                            shift, and go to state 473
    "reinterpret"                     shift, and go to state 476
    "unsafe"                          shift, and go to state 583
    "fixed_array"                     shift, and go to state 480
    "default"                         shift, and go to state 481
    "bool"                            shift, and go to state 332
    "void"                            shift, and go to state 333
    "string"                          shift, and go to state 334
    "int"                             shift, and go to state 336
    "int2"                            shift, and go to state 337
    "int3"                            shift, and go to state 338
    "int4"                            shift, and go to state 339
    "uint"                            shift, and go to state 340
    "bitfield"                        shift, and go to state 482
    "uint2"                           shift, and go to state 342
    "uint3"                           shift, and go to state 343
    "uint4"                           shift, and go to state 344
    "float"                           shift, and go to state 345
    "float2"                          shift, and go to state 346
    "float3"                          shift, and go to state 347
    "float4"                          shift, and go to state 348
    "range"                           shift, and go to state 349
    "urange"                          shift, and go to state 350
    "range64"                         shift, and go to state 351
    "urange64"                        shift, and go to state 352
    "int64"                           shift, and go to state 354
    "uint64"                          shift, and go to state 355
    "double"                          shift, and go to state 356
    "int8"                            shift, and go to state 359
    "uint8"                           shift, and go to state 360
    "int16"                           shift, and go to state 361
    "uint16"                          shift, and go to state 362
    "tuple"                           shift, and go to state 483
    "variant"                         shift, and go to state 484
    "generator"                       shift, and go to state 485
    "++"                              shift, and go to state 487
    "--"                              shift, and go to state 488
    "$ <|"                            shift, and go to state 489
    "@ <|"                            shift, and go to state 490
    "@@ <|"                           shift, and go to state 491
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 492
    "$i"                              shift, and go to state 493
    "$v"                              shift, and go to state 494
    "$b"                              shift, and go to state 495
    "$a"                              shift, and go to state 496
    "$c"                              shift, and go to state 497
    "..."                             shift, and go to state 498
    "[["                              shift, and go to state 499
    "[{"                              shift, and go to state 500
    "{{"                              shift, and go to state 501
    "integer constant"                shift, and go to state 502
    "long integer constant"           shift, and go to state 503
    "unsigned integer constant"       shift, and go to state 504
    "unsigned long integer constant"  shift, and go to state 505
    "unsigned int8 constant"          shift, and go to state 506
    "floating point constant"         shift, and go to state 507
    "double constant"                 shift, and go to state 508
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 585
    "type function"                   shift, and go to state 510
    "start of the string"             shift, and go to state 511
    "begin of code block"             shift, and go to state 512
    '-'                               shift, and go to state 513
    '+'                               shift, and go to state 514
    '*'                               shift, and go to state 515
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 516
    '!'                               shift, and go to state 517
    '['                               shift, and go to state 518
    '('                               shift, and go to state 519
    '$'                               shift, and go to state 520
    '@'                               shift, and go to state 521

    string_builder          go to state 522
    expr_reader             go to state 523
    expr_call_pipe          go to state 536
    expression_keyword      go to state 539
    expr_pipe               go to state 1716
    name_in_namespace       go to state 541
    expr_new                go to state 543
    expr_cast               go to state 553
    expr_type_decl          go to state 554
    expr_type_info          go to state 555
    block_or_lambda         go to state 556
    expr_full_block         go to state 557
    expr_numeric_const      go to state 558
    expr_assign             go to state 667
    expr_named_call         go to state 561
    expr_method_call        go to state 562
    func_addr_expr          go to state 563
    expr_field              go to state 564
    expr_call               go to state 565
    expr                    go to state 1717
    expr_mtag               go to state 567
    basic_type_declaration  go to state 568
    make_decl               go to state 569
    make_struct_decl        go to state 570
    make_tuple_call         go to state 571
    make_dim_decl           go to state 572
    make_table_decl         go to state 573
    array_comprehension     go to state 574


State 1689

  326 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 326 (tuple_expansion_variable_declaration)


State 1690

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  325 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1718
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1691

  324 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 324 (tuple_expansion_variable_declaration)


State 1692

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1719
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1693

  327 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 327 (tuple_expansion_variable_declaration)


State 1694

  519 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 519 (expr)


State 1695

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 569 (struct_variable_declaration_list)


State 1696

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 300
    expression_block  go to state 1720


State 1697

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  830 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1204
    ')'  shift, and go to state 1721


State 1698

  831 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  913 optional_comma: ',' .

    '('  shift, and go to state 1722

    $default  reduce using rule 913 (optional_comma)


State 1699

  833 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 833 (make_struct_dim_decl)


State 1700

  860 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 860 (make_struct_decl)


State 1701

  863 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 863 (make_struct_decl)


State 1702

  345 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 345 (expr_type_info)


State 1703

  348 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 348 (expr_type_info)


State 1704

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1723


State 1705

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1724


State 1706

  892 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 892 (make_dim_decl)


State 1707

  900 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 900 (make_dim_decl)


State 1708

  878 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 878 (make_tuple_call)


State 1709

  866 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 866 (make_struct_decl)


State 1710

  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'
  911 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 762
    "as"   shift, and go to state 763
    "<<"   shift, and go to state 772
    ">>"   shift, and go to state 773
    "++"   shift, and go to state 774
    "--"   shift, and go to state 775
    "<="   shift, and go to state 776
    ">="   shift, and go to state 779
    "=="   shift, and go to state 780
    "!="   shift, and go to state 781
    "->"   shift, and go to state 782
    "??"   shift, and go to state 784
    "?."   shift, and go to state 785
    "?["   shift, and go to state 786
    "<|"   shift, and go to state 787
    "|>"   shift, and go to state 788
    "<<<"  shift, and go to state 790
    ">>>"  shift, and go to state 791
    "&&"   shift, and go to state 794
    "||"   shift, and go to state 795
    "^^"   shift, and go to state 796
    ".."   shift, and go to state 800
    '?'    shift, and go to state 802
    '|'    shift, and go to state 803
    '^'    shift, and go to state 804
    '&'    shift, and go to state 805
    '<'    shift, and go to state 806
    '>'    shift, and go to state 807
    '-'    shift, and go to state 808
    '+'    shift, and go to state 809
    '*'    shift, and go to state 810
    '/'    shift, and go to state 811
    '%'    shift, and go to state 812
    '.'    shift, and go to state 813
    '['    shift, and go to state 814

    $default  reduce using rule 911 (array_comprehension_where)


State 1711

  916 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 916 (array_comprehension)


State 1712

  917 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 917 (array_comprehension)


State 1713

  919 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 919 (array_comprehension)


State 1714

  267 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 267 (optional_expr_list_in_braces)


State 1715

  915 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 915 (array_comprehension)


State 1716

  322 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 322 (tuple_expansion_variable_declaration)


State 1717

  236 expr_call_pipe: expr . expr_full_block_assumed_piped
  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  379 expr_assign: expr .
  380            | expr . '=' expr
  381            | expr . "<-" expr
  382            | expr . ":=" expr
  383            | expr . "&=" expr
  384            | expr . "|=" expr
  385            | expr . "^=" expr
  386            | expr . "&&=" expr
  387            | expr . "||=" expr
  388            | expr . "^^=" expr
  389            | expr . "+=" expr
  390            | expr . "-=" expr
  391            | expr . "*=" expr
  392            | expr . "/=" expr
  393            | expr . "%=" expr
  394            | expr . "<<=" expr
  395            | expr . ">>=" expr
  396            | expr . "<<<=" expr
  397            | expr . ">>>=" expr
  421 expr_method_call: expr . "->" "name" '(' ')'
  422                 | expr . "->" "name" '(' expr_list ')'
  432 expr_field: expr . '.' "name"
  433           | expr . '.' '.' "name"
  434           | expr . '.' "name" '(' ')'
  435           | expr . '.' "name" '(' expr_list ')'
  436           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  437           | expr . '.' basic_type_declaration '(' ')'
  438           | expr . '.' basic_type_declaration '(' expr_list ')'
  441           | expr . '.' $@27 error $@28
  463 expr: expr . "<<" expr
  464     | expr . ">>" expr
  465     | expr . "<<<" expr
  466     | expr . ">>>" expr
  467     | expr . '+' expr
  468     | expr . '-' expr
  469     | expr . '*' expr
  470     | expr . '/' expr
  471     | expr . '%' expr
  472     | expr . '<' expr
  473     | expr . '>' expr
  474     | expr . "==" expr
  475     | expr . "!=" expr
  476     | expr . "<=" expr
  477     | expr . ">=" expr
  478     | expr . '&' expr
  479     | expr . '|' expr
  480     | expr . '^' expr
  481     | expr . "&&" expr
  482     | expr . "||" expr
  483     | expr . "^^" expr
  484     | expr . ".." expr
  487     | expr . "++"
  488     | expr . "--"
  491     | expr . '[' expr ']'
  492     | expr . '.' '[' expr ']'
  493     | expr . "?[" expr ']'
  494     | expr . '.' "?[" expr ']'
  495     | expr . "?." "name"
  496     | expr . '.' "?." "name"
  504     | expr . "??" expr
  505     | expr . '?' expr ':' expr
  508     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  509     | expr . "is" basic_type_declaration
  510     | expr . "is" "name"
  511     | expr . "as" "name"
  514     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  515     | expr . "as" basic_type_declaration
  516     | expr . '?' "as" "name"
  519     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  520     | expr . '?' "as" basic_type_declaration
  528     | expr . "<|" expr
  529     | expr . "|>" expr
  530     | expr . "|>" basic_type_declaration
  542 expr_mtag: expr . '.' "$f" '(' expr ')'
  543          | expr . "?." "$f" '(' expr ')'
  544          | expr . '.' '.' "$f" '(' expr ')'
  545          | expr . '.' "?." "$f" '(' expr ')'
  546          | expr . "as" "$f" '(' expr ')'
  547          | expr . '?' "as" "$f" '(' expr ')'
  548          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 762
    "as"                 shift, and go to state 763
    "+="                 shift, and go to state 894
    "-="                 shift, and go to state 895
    "/="                 shift, and go to state 896
    "*="                 shift, and go to state 897
    "%="                 shift, and go to state 898
    "&="                 shift, and go to state 899
    "|="                 shift, and go to state 900
    "^="                 shift, and go to state 901
    "<<"                 shift, and go to state 772
    ">>"                 shift, and go to state 773
    "++"                 shift, and go to state 774
    "--"                 shift, and go to state 775
    "<="                 shift, and go to state 776
    "<<="                shift, and go to state 902
    ">>="                shift, and go to state 903
    ">="                 shift, and go to state 779
    "=="                 shift, and go to state 780
    "!="                 shift, and go to state 781
    "->"                 shift, and go to state 782
    "<-"                 shift, and go to state 904
    "??"                 shift, and go to state 784
    "?."                 shift, and go to state 785
    "?["                 shift, and go to state 786
    "<|"                 shift, and go to state 787
    "|>"                 shift, and go to state 788
    ":="                 shift, and go to state 789
    "<<<"                shift, and go to state 790
    ">>>"                shift, and go to state 791
    "<<<="               shift, and go to state 905
    ">>>="               shift, and go to state 906
    "&&"                 shift, and go to state 794
    "||"                 shift, and go to state 795
    "^^"                 shift, and go to state 796
    "&&="                shift, and go to state 907
    "||="                shift, and go to state 908
    "^^="                shift, and go to state 909
    ".."                 shift, and go to state 800
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 910
    '?'                  shift, and go to state 802
    '|'                  shift, and go to state 803
    '^'                  shift, and go to state 804
    '&'                  shift, and go to state 805
    '<'                  shift, and go to state 806
    '>'                  shift, and go to state 807
    '-'                  shift, and go to state 808
    '+'                  shift, and go to state 809
    '*'                  shift, and go to state 810
    '/'                  shift, and go to state 811
    '%'                  shift, and go to state 812
    '.'                  shift, and go to state 813
    '['                  shift, and go to state 814
    '$'                  shift, and go to state 520
    '@'                  shift, and go to state 699

    $default  reduce using rule 379 (expr_assign)

    semicolon                      go to state 1725
    block_or_lambda                go to state 748
    expr_full_block_assumed_piped  go to state 815


State 1718

  325 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 325 (tuple_expansion_variable_declaration)


State 1719

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 323 (tuple_expansion_variable_declaration)


State 1720

  571 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 571 (struct_variable_declaration_list)


State 1721

  830 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 830 (make_struct_dim_list)


State 1722

  831 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 737
    "name"  shift, and go to state 1251

    make_struct_fields  go to state 1726


State 1723

  886 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 886 (make_dim_decl)


State 1724

  889 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 889 (make_dim_decl)


State 1725

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 321 (tuple_expansion_variable_declaration)


State 1726

  819 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  820                   | make_struct_fields . ',' "name" ":=" expr
  823                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  831 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1204
    ')'  shift, and go to state 1727


State 1727

  831 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 831 (make_struct_dim_list)
