Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 331 conflicts: 1 shift/reduce
State 428 conflicts: 1 shift/reduce
State 533 conflicts: 2 shift/reduce
State 535 conflicts: 2 shift/reduce
State 646 conflicts: 1 shift/reduce
State 728 conflicts: 1 shift/reduce
State 939 conflicts: 1 shift/reduce
State 1082 conflicts: 1 shift/reduce
State 1194 conflicts: 1 shift/reduce
State 1195 conflicts: 1 shift/reduce
State 1482 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 format_string: %empty
   30              | format_string STRING_CHARACTER

   31 optional_format_string: %empty

   32 $@1: %empty

   33 optional_format_string: ':' $@1 format_string

   34 string_builder_body: %empty
   35                    | string_builder_body character_sequence
   36                    | string_builder_body "{" expr optional_format_string "}"

   37 string_builder: "start of the string" string_builder_body "end of the string"

   38 reader_character_sequence: STRING_CHARACTER
   39                          | reader_character_sequence STRING_CHARACTER

   40 $@2: %empty

   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   42 options_declaration: "options" annotation_argument_list

   43 require_declaration: "require" require_module

   44 keyword_or_name: "name"
   45                | "keyword"
   46                | "type function"

   47 require_module_name: keyword_or_name
   48                    | '%' require_module_name
   49                    | require_module_name '.' keyword_or_name
   50                    | require_module_name '/' keyword_or_name

   51 require_module: require_module_name is_public_module
   52               | require_module_name "as" "name" is_public_module

   53 is_public_module: %empty
   54                 | "public"

   55 expect_declaration: "expect" expect_list

   56 expect_list: expect_error
   57            | expect_list ',' expect_error

   58 expect_error: "integer constant"
   59             | "integer constant" ':' "integer constant"

   60 expression_label: "label" "integer constant" ':'

   61 expression_goto: "goto" "label" "integer constant"
   62                | "goto" expr

   63 elif_or_static_elif: "elif"
   64                    | "static_elif"

   65 expression_else: %empty
   66                | "else" expression_block
   67                | elif_or_static_elif expr expression_block expression_else

   68 semicolon: "end of line"
   69          | "end of expression"

   70 if_or_static_if: "if"
   71                | "static_if"

   72 expression_else_one_liner: %empty

   73 $@3: %empty

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner

   75 expression_if_one_liner: expr
   76                        | expression_return_no_pipe
   77                        | expression_yield_no_pipe
   78                        | expression_break
   79                        | expression_continue

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else

   81 $@4: %empty

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   83 $@5: %empty

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   85 expression_unsafe: "unsafe" expression_block

   86 expression_while_loop: "while" expr expression_block

   87 expression_with: "with" expr expression_block

   88 $@6: %empty

   89 expression_with_alias: "assume" "name" '=' $@6 expr

   90 annotation_argument_value: string_constant
   91                          | "name"
   92                          | "integer constant"
   93                          | "floating point constant"
   94                          | "true"
   95                          | "false"

   96 annotation_argument_value_list: annotation_argument_value
   97                               | annotation_argument_value_list ',' annotation_argument_value

   98 annotation_argument_name: "name"
   99                         | "type"
  100                         | "in"

  101 annotation_argument: annotation_argument_name '=' string_constant
  102                    | annotation_argument_name '=' "name"
  103                    | annotation_argument_name '=' "integer constant"
  104                    | annotation_argument_name '=' "floating point constant"
  105                    | annotation_argument_name '=' "true"
  106                    | annotation_argument_name '=' "false"
  107                    | annotation_argument_name
  108                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  109 annotation_argument_list: annotation_argument
  110                         | annotation_argument_list ',' annotation_argument

  111 metadata_argument_list: '@' annotation_argument
  112                       | metadata_argument_list '@' annotation_argument
  113                       | metadata_argument_list semicolon

  114 annotation_declaration_name: name_in_namespace
  115                            | "require"
  116                            | "private"
  117                            | "template"

  118 annotation_declaration_basic: annotation_declaration_name
  119                             | annotation_declaration_name '(' annotation_argument_list ')'

  120 annotation_declaration: annotation_declaration_basic
  121                       | '!' annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration
  125                       | '(' annotation_declaration ')'
  126                       | "|>" annotation_declaration

  127 annotation_list: annotation_declaration
  128                | annotation_list ',' annotation_declaration

  129 optional_annotation_list: %empty
  130                         | '[' annotation_list ']'

  131 optional_function_argument_list: %empty
  132                                | '(' ')'
  133                                | '(' function_argument_list ')'

  134 optional_function_type: %empty
  135                       | ':' type_declaration
  136                       | ':' '(' tuple_type_list ')'

  137 function_name: "name"
  138              | "operator" '!'
  139              | "operator" '~'
  140              | "operator" "+="
  141              | "operator" "-="
  142              | "operator" "*="
  143              | "operator" "/="
  144              | "operator" "%="
  145              | "operator" "&="
  146              | "operator" "|="
  147              | "operator" "^="
  148              | "operator" "&&="
  149              | "operator" "||="
  150              | "operator" "^^="
  151              | "operator" "&&"
  152              | "operator" "||"
  153              | "operator" "^^"
  154              | "operator" '+'
  155              | "operator" '-'
  156              | "operator" '*'
  157              | "operator" '/'
  158              | "operator" '%'
  159              | "operator" '<'
  160              | "operator" '>'
  161              | "operator" ".."
  162              | "operator" "=="
  163              | "operator" "!="
  164              | "operator" "<="
  165              | "operator" ">="
  166              | "operator" '&'
  167              | "operator" '|'
  168              | "operator" '^'
  169              | "++" "operator"
  170              | "--" "operator"
  171              | "operator" "++"
  172              | "operator" "--"
  173              | "operator" "<<"
  174              | "operator" ">>"
  175              | "operator" "<<="
  176              | "operator" ">>="
  177              | "operator" "<<<"
  178              | "operator" ">>>"
  179              | "operator" "<<<="
  180              | "operator" ">>>="
  181              | "operator" '[' ']'
  182              | "operator" "?[" ']'
  183              | "operator" '.'
  184              | "operator" "?."
  185              | "operator" '.' "name"
  186              | "operator" '.' "name" ":="
  187              | "operator" "?." "name"
  188              | "operator" ":="
  189              | "operator" "delete"
  190              | "operator" "??"
  191              | "operator" "is"
  192              | "operator" "as"
  193              | "operator" "is" "name"
  194              | "operator" "as" "name"
  195              | "operator" '?' "as"
  196              | "operator" '?' "as" "name"
  197              | "bool"
  198              | "string"
  199              | "int"
  200              | "int2"
  201              | "int3"
  202              | "int4"
  203              | "uint"
  204              | "uint2"
  205              | "uint3"
  206              | "uint4"
  207              | "float"
  208              | "float2"
  209              | "float3"
  210              | "float4"
  211              | "range"
  212              | "urange"
  213              | "range64"
  214              | "urange64"
  215              | "int64"
  216              | "uint64"
  217              | "double"
  218              | "int8"
  219              | "uint8"
  220              | "int16"
  221              | "uint16"

  222 global_function_declaration: optional_annotation_list "def" function_declaration

  223 optional_public_or_private_function: %empty
  224                                    | "private"
  225                                    | "public"

  226 function_declaration_header: function_name optional_function_argument_list optional_function_type

  227 $@7: %empty

  228 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  229 open_block: "begin of code block"
  230           | "new scope"

  231 close_block: "end of code block"
  232            | "close scope"

  233 expression_block: open_block expressions close_block
  234                 | open_block expressions close_block "finally" open_block expressions close_block

  235 expr_call_pipe: expr expr_full_block_assumed_piped
  236               | expression_keyword expr_full_block_assumed_piped
  237               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  238 expression_any: semicolon
  239               | expr_pipe
  240               | expr_keyword
  241               | expr_assign_pipe
  242               | expr_assign semicolon
  243               | expression_delete semicolon
  244               | expression_let
  245               | expression_while_loop
  246               | expression_unsafe
  247               | expression_with
  248               | expression_with_alias
  249               | expression_for_loop
  250               | expression_break semicolon
  251               | expression_continue semicolon
  252               | expression_return
  253               | expression_yield
  254               | expression_if_then_else
  255               | expression_try_catch
  256               | expression_label semicolon
  257               | expression_goto semicolon
  258               | "pass" semicolon

  259 expressions: %empty
  260            | expressions expression_any
  261            | expressions error

  262 expr_keyword: "keyword" expr expression_block

  263 optional_expr_list: %empty
  264                   | expr_list optional_comma

  265 optional_expr_list_in_braces: %empty
  266                             | '(' optional_expr_list optional_comma ')'

  267 optional_expr_map_tuple_list: %empty
  268                             | expr_map_tuple_list optional_comma

  269 type_declaration_no_options_list: type_declaration
  270                                 | type_declaration_no_options_list c_or_s type_declaration

  271 $@8: %empty

  272 $@9: %empty

  273 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  274 $@10: %empty

  275 $@11: %empty

  276 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  277 expr_pipe: expr_assign " <|" expr_block
  278          | "@ <|" expr_block
  279          | "@@ <|" expr_block
  280          | "$ <|" expr_block
  281          | expr_call_pipe

  282 name_in_namespace: "name"
  283                  | "name" "::" "name"
  284                  | "::" "name"

  285 expression_delete: "delete" expr
  286                  | "delete" "explicit" expr

  287 $@12: %empty

  288 $@13: %empty

  289 new_type_declaration: '<' $@12 type_declaration '>' $@13
  290                     | structure_type_declaration

  291 expr_new: "new" new_type_declaration
  292         | "new" new_type_declaration '(' use_initializer ')'
  293         | "new" new_type_declaration '(' expr_list ')'
  294         | "new" new_type_declaration '(' make_struct_single ')'
  295         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  296         | "new" make_decl

  297 expression_break: "break"

  298 expression_continue: "continue"

  299 expression_return_no_pipe: "return"
  300                          | "return" expr_list
  301                          | "return" "<-" expr_list

  302 expression_return: expression_return_no_pipe semicolon
  303                  | "return" expr_pipe
  304                  | "return" "<-" expr_pipe

  305 expression_yield_no_pipe: "yield" expr
  306                         | "yield" "<-" expr

  307 expression_yield: expression_yield_no_pipe semicolon
  308                 | "yield" expr_pipe
  309                 | "yield" "<-" expr_pipe

  310 expression_try_catch: "try" expression_block "recover" expression_block

  311 kwd_let_var_or_nothing: "let"
  312                       | "var"
  313                       | %empty

  314 kwd_let: "let"
  315        | "var"

  316 optional_in_scope: "inscope"
  317                  | %empty

  318 tuple_expansion: "name"
  319                | tuple_expansion ',' "name"

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  322                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  323                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  324                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  325                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  326                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  327                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  328 expression_let: kwd_let optional_in_scope let_variable_declaration
  329               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  330 $@14: %empty

  331 $@15: %empty

  332 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  333 $@16: %empty

  334 $@17: %empty

  335 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  336 $@18: %empty

  337 $@19: %empty

  338 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  339 $@20: %empty

  340 $@21: %empty

  341 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  342 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  343               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  344               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  345               | "typeinfo" name_in_namespace '(' expr ')'
  346               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  347               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  348 expr_list: expr
  349          | expr_list ',' expr

  350 block_or_simple_block: expression_block
  351                      | "=>" expr
  352                      | "=>" "<-" expr

  353 block_or_lambda: '$'
  354                | '@'
  355                | '@' '@'

  356 capture_entry: '&' "name"
  357              | '=' "name"
  358              | "<-" "name"
  359              | ":=" "name"
  360              | "name" '(' "name" ')'

  361 capture_list: capture_entry
  362             | capture_list ',' capture_entry

  363 optional_capture_list: %empty
  364                      | "[[" capture_list ']' ']'
  365                      | "capture" '(' capture_list ')'

  366 expr_block: expression_block
  367           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  368 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  369 $@22: %empty

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  371 expr_numeric_const: "integer constant"
  372                   | "unsigned integer constant"
  373                   | "long integer constant"
  374                   | "unsigned long integer constant"
  375                   | "unsigned int8 constant"
  376                   | "floating point constant"
  377                   | "double constant"

  378 expr_assign: expr
  379            | expr '=' expr
  380            | expr "<-" expr
  381            | expr ":=" expr
  382            | expr "&=" expr
  383            | expr "|=" expr
  384            | expr "^=" expr
  385            | expr "&&=" expr
  386            | expr "||=" expr
  387            | expr "^^=" expr
  388            | expr "+=" expr
  389            | expr "-=" expr
  390            | expr "*=" expr
  391            | expr "/=" expr
  392            | expr "%=" expr
  393            | expr "<<=" expr
  394            | expr ">>=" expr
  395            | expr "<<<=" expr
  396            | expr ">>>=" expr

  397 expr_assign_pipe_right: "@ <|" expr_block
  398                       | "@@ <|" expr_block
  399                       | "$ <|" expr_block
  400                       | expr_call_pipe

  401 expr_assign_pipe: expr '=' expr_assign_pipe_right
  402                 | expr "<-" expr_assign_pipe_right
  403                 | expr "&=" expr_assign_pipe_right
  404                 | expr "|=" expr_assign_pipe_right
  405                 | expr "^=" expr_assign_pipe_right
  406                 | expr "&&=" expr_assign_pipe_right
  407                 | expr "||=" expr_assign_pipe_right
  408                 | expr "^^=" expr_assign_pipe_right
  409                 | expr "+=" expr_assign_pipe_right
  410                 | expr "-=" expr_assign_pipe_right
  411                 | expr "*=" expr_assign_pipe_right
  412                 | expr "/=" expr_assign_pipe_right
  413                 | expr "%=" expr_assign_pipe_right
  414                 | expr "<<=" expr_assign_pipe_right
  415                 | expr ">>=" expr_assign_pipe_right
  416                 | expr "<<<=" expr_assign_pipe_right
  417                 | expr ">>>=" expr_assign_pipe_right

  418 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  419                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  420 expr_method_call: expr "->" "name" '(' ')'
  421                 | expr "->" "name" '(' expr_list ')'

  422 func_addr_name: name_in_namespace
  423               | "$i" '(' expr ')'

  424 func_addr_expr: '@' '@' func_addr_name

  425 $@23: %empty

  426 $@24: %empty

  427 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  428 $@25: %empty

  429 $@26: %empty

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  431 expr_field: expr '.' "name"
  432           | expr '.' '.' "name"
  433           | expr '.' "name" '(' ')'
  434           | expr '.' "name" '(' expr_list ')'
  435           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr '.' basic_type_declaration '(' ')'
  437           | expr '.' basic_type_declaration '(' expr_list ')'

  438 $@27: %empty

  439 $@28: %empty

  440 expr_field: expr '.' $@27 error $@28

  441 expr_call: name_in_namespace '(' ')'
  442          | name_in_namespace '(' "uninitialized" ')'
  443          | name_in_namespace '(' make_struct_single ')'
  444          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  445          | name_in_namespace '(' expr_list ')'
  446          | basic_type_declaration '(' ')'
  447          | basic_type_declaration '(' expr_list ')'

  448 expr: "null"
  449     | name_in_namespace
  450     | expr_numeric_const
  451     | expr_reader
  452     | string_builder
  453     | make_decl
  454     | "true"
  455     | "false"
  456     | expr_field
  457     | expr_mtag
  458     | '!' expr
  459     | '~' expr
  460     | '+' expr
  461     | '-' expr
  462     | expr "<<" expr
  463     | expr ">>" expr
  464     | expr "<<<" expr
  465     | expr ">>>" expr
  466     | expr '+' expr
  467     | expr '-' expr
  468     | expr '*' expr
  469     | expr '/' expr
  470     | expr '%' expr
  471     | expr '<' expr
  472     | expr '>' expr
  473     | expr "==" expr
  474     | expr "!=" expr
  475     | expr "<=" expr
  476     | expr ">=" expr
  477     | expr '&' expr
  478     | expr '|' expr
  479     | expr '^' expr
  480     | expr "&&" expr
  481     | expr "||" expr
  482     | expr "^^" expr
  483     | expr ".." expr
  484     | "++" expr
  485     | "--" expr
  486     | expr "++"
  487     | expr "--"
  488     | '(' expr_list optional_comma ')'
  489     | '(' make_struct_single ')'
  490     | expr '[' expr ']'
  491     | expr '.' '[' expr ']'
  492     | expr "?[" expr ']'
  493     | expr '.' "?[" expr ']'
  494     | expr "?." "name"
  495     | expr '.' "?." "name"
  496     | func_addr_expr
  497     | expr_call
  498     | '*' expr
  499     | "deref" '(' expr ')'
  500     | "addr" '(' expr ')'
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  503     | expr "??" expr
  504     | expr '?' expr ':' expr

  505 $@29: %empty

  506 $@30: %empty

  507 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr "is" basic_type_declaration
  509     | expr "is" "name"
  510     | expr "as" "name"

  511 $@31: %empty

  512 $@32: %empty

  513 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr "as" basic_type_declaration
  515     | expr '?' "as" "name"

  516 $@33: %empty

  517 $@34: %empty

  518 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr '?' "as" basic_type_declaration
  520     | expr_type_info
  521     | expr_type_decl
  522     | expr_cast
  523     | expr_new
  524     | expr_method_call
  525     | expr_named_call
  526     | expr_full_block
  527     | expr "<|" expr
  528     | expr "|>" expr
  529     | expr "|>" basic_type_declaration
  530     | name_in_namespace "name"
  531     | "unsafe" '(' expr ')'
  532     | expression_keyword

  533 expr_mtag: "$$" '(' expr ')'
  534          | "$i" '(' expr ')'
  535          | "$v" '(' expr ')'
  536          | "$b" '(' expr ')'
  537          | "$a" '(' expr ')'
  538          | "..."
  539          | "$c" '(' expr ')' '(' ')'
  540          | "$c" '(' expr ')' '(' expr_list ')'
  541          | expr '.' "$f" '(' expr ')'
  542          | expr "?." "$f" '(' expr ')'
  543          | expr '.' '.' "$f" '(' expr ')'
  544          | expr '.' "?." "$f" '(' expr ')'
  545          | expr "as" "$f" '(' expr ')'
  546          | expr '?' "as" "$f" '(' expr ')'
  547          | expr "is" "$f" '(' expr ')'
  548          | '@' '@' "$c" '(' expr ')'

  549 optional_field_annotation: %empty
  550                          | "[[" annotation_argument_list ']' ']'
  551                          | metadata_argument_list

  552 optional_override: %empty
  553                  | "override"
  554                  | "sealed"

  555 optional_constant: %empty
  556                  | "const"

  557 optional_public_or_private_member_variable: %empty
  558                                           | "public"
  559                                           | "private"

  560 optional_static_member_variable: %empty
  561                                | "static"

  562 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  563 struct_variable_declaration_list: %empty
  564                                 | struct_variable_declaration_list semicolon

  565 $@35: %empty

  566 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  567 $@36: %empty

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  569 $@37: %empty

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  571                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  572 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  573                              | "$a" '(' expr ')'

  574 function_argument_list: function_argument_declaration
  575                       | function_argument_list semicolon function_argument_declaration

  576 tuple_type: type_declaration
  577           | "name" ':' type_declaration

  578 tuple_type_list: tuple_type
  579                | tuple_type_list c_or_s tuple_type

  580 tuple_alias_type_list: %empty
  581                      | tuple_alias_type_list c_or_s
  582                      | tuple_alias_type_list tuple_type c_or_s

  583 variant_type: "name" ':' type_declaration

  584 variant_type_list: variant_type
  585                  | variant_type_list c_or_s variant_type

  586 variant_alias_type_list: %empty
  587                        | variant_alias_type_list c_or_s
  588                        | variant_alias_type_list variant_type c_or_s

  589 copy_or_move: '='
  590             | "<-"

  591 variable_declaration: variable_name_with_pos_list
  592                     | variable_name_with_pos_list '&'
  593                     | variable_name_with_pos_list ':' type_declaration
  594                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  595                     | variable_name_with_pos_list copy_or_move expr
  596                     | variable_name_with_pos_list copy_or_move expr_pipe

  597 copy_or_move_or_clone: '='
  598                      | "<-"
  599                      | ":="

  600 optional_ref: %empty
  601             | '&'

  602 let_variable_name_with_pos_list: "name"
  603                                | "$i" '(' expr ')'
  604                                | "name" "aka" "name"
  605                                | let_variable_name_with_pos_list ',' "name"
  606                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  607 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  608                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  609                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  610                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  611                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  612 global_variable_declaration_list: %empty

  613 $@38: %empty

  614 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  615 optional_shared: %empty
  616                | "shared"

  617 optional_public_or_private_variable: %empty
  618                                    | "private"
  619                                    | "public"

  620 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  621 $@39: %empty

  622 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  623 enum_list: %empty
  624          | enum_list semicolon
  625          | enum_list "name" semicolon
  626          | enum_list "name" '=' expr semicolon

  627 optional_public_or_private_alias: %empty
  628                                 | "private"
  629                                 | "public"

  630 $@40: %empty

  631 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  632 alias_list: single_alias semicolon
  633           | alias_list single_alias semicolon

  634 alias_declaration: "typedef" open_block alias_list close_block

  635 $@41: %empty

  636 alias_declaration: "typedef" $@41 single_alias semicolon

  637 optional_public_or_private_enum: %empty
  638                                | "private"
  639                                | "public"

  640 enum_name: "name"

  641 $@42: %empty

  642 $@43: %empty

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  644 $@44: %empty

  645 $@45: %empty

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  647 optional_structure_parent: %empty
  648                          | ':' name_in_namespace

  649 optional_sealed: %empty
  650                | "sealed"

  651 structure_name: optional_sealed "name" optional_structure_parent

  652 class_or_struct: "class"
  653                | "struct"
  654                | "template" "class"
  655                | "template" "struct"

  656 optional_public_or_private_structure: %empty
  657                                     | "private"
  658                                     | "public"

  659 optional_struct_variable_declaration_list: %empty
  660                                          | open_block struct_variable_declaration_list close_block

  661 $@46: %empty

  662 $@47: %empty

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  664 variable_name_with_pos_list: "name"
  665                            | "$i" '(' expr ')'
  666                            | "name" "aka" "name"
  667                            | variable_name_with_pos_list ',' "name"
  668                            | variable_name_with_pos_list ',' "name" "aka" "name"

  669 basic_type_declaration: "bool"
  670                       | "string"
  671                       | "int"
  672                       | "int8"
  673                       | "int16"
  674                       | "int64"
  675                       | "int2"
  676                       | "int3"
  677                       | "int4"
  678                       | "uint"
  679                       | "uint8"
  680                       | "uint16"
  681                       | "uint64"
  682                       | "uint2"
  683                       | "uint3"
  684                       | "uint4"
  685                       | "float"
  686                       | "float2"
  687                       | "float3"
  688                       | "float4"
  689                       | "void"
  690                       | "range"
  691                       | "urange"
  692                       | "range64"
  693                       | "urange64"
  694                       | "double"
  695                       | "bitfield"

  696 enum_basic_type_declaration: "int"
  697                            | "int8"
  698                            | "int16"
  699                            | "uint"
  700                            | "uint8"
  701                            | "uint16"
  702                            | "int64"
  703                            | "uint64"

  704 structure_type_declaration: name_in_namespace

  705 auto_type_declaration: "auto"
  706                      | "auto" '(' "name" ')'
  707                      | "$t" '(' expr ')'

  708 bitfield_bits: "name"
  709              | bitfield_bits semicolon "name"

  710 bitfield_alias_bits: %empty
  711                    | bitfield_alias_bits semicolon
  712                    | bitfield_alias_bits "name" semicolon

  713 $@48: %empty

  714 $@49: %empty

  715 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  716 c_or_s: ','
  717       | semicolon

  718 table_type_pair: type_declaration
  719                | type_declaration c_or_s type_declaration

  720 dim_list: '[' expr ']'
  721         | dim_list '[' expr ']'

  722 type_declaration_no_options: basic_type_declaration
  723                            | auto_type_declaration
  724                            | bitfield_type_declaration
  725                            | structure_type_declaration
  726                            | type_declaration_no_options dim_list
  727                            | type_declaration_no_options '[' ']'

  728 $@50: %empty

  729 $@51: %empty

  730 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  731                            | "typedecl" '(' expr ')'
  732                            | '$' name_in_namespace '(' optional_expr_list ')'

  733 $@52: %empty

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  735                            | type_declaration_no_options '-' '[' ']'
  736                            | type_declaration_no_options "explicit"
  737                            | type_declaration_no_options "const"
  738                            | type_declaration_no_options '-' "const"
  739                            | type_declaration_no_options '&'
  740                            | type_declaration_no_options '-' '&'
  741                            | type_declaration_no_options '#'
  742                            | type_declaration_no_options "implicit"
  743                            | type_declaration_no_options '-' '#'
  744                            | type_declaration_no_options "==" "const"
  745                            | type_declaration_no_options "==" '&'
  746                            | type_declaration_no_options '?'

  747 $@53: %empty

  748 $@54: %empty

  749 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  750                            | type_declaration_no_options "??"

  751 $@55: %empty

  752 $@56: %empty

  753 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  754 $@57: %empty

  755 $@58: %empty

  756 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  757 $@59: %empty

  758 $@60: %empty

  759 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  760                            | "block"

  761 $@61: %empty

  762 $@62: %empty

  763 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  764 $@63: %empty

  765 $@64: %empty

  766 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  767                            | "function"

  768 $@65: %empty

  769 $@66: %empty

  770 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  771 $@67: %empty

  772 $@68: %empty

  773 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  774                            | "lambda"

  775 $@69: %empty

  776 $@70: %empty

  777 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  778 $@71: %empty

  779 $@72: %empty

  780 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  781 $@73: %empty

  782 $@74: %empty

  783 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  784 $@75: %empty

  785 $@76: %empty

  786 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  787 type_declaration: type_declaration_no_options
  788                 | type_declaration '|' type_declaration_no_options
  789                 | type_declaration '|' '#'

  790 $@77: %empty

  791 $@78: %empty

  792 $@79: %empty

  793 $@80: %empty

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  795 $@81: %empty

  796 $@82: %empty

  797 $@83: %empty

  798 $@84: %empty

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  800 $@85: %empty

  801 $@86: %empty

  802 $@87: %empty

  803 $@88: %empty

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

  805 make_decl: make_struct_decl
  806          | make_dim_decl
  807          | make_table_decl
  808          | array_comprehension
  809          | make_tuple_call

  810 make_struct_fields: "name" copy_or_move expr
  811                   | "name" ":=" expr
  812                   | make_struct_fields ',' "name" copy_or_move expr
  813                   | make_struct_fields ',' "name" ":=" expr
  814                   | "$f" '(' expr ')' copy_or_move expr
  815                   | "$f" '(' expr ')' ":=" expr
  816                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  818 make_variant_dim: %empty
  819                 | make_struct_fields

  820 make_struct_single: make_struct_fields

  821 make_struct_dim: make_struct_fields
  822                | make_struct_dim "end of expression" make_struct_fields

  823 make_struct_dim_list: '(' make_struct_fields ')'
  824                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  825 make_struct_dim_decl: make_struct_fields
  826                     | make_struct_dim_list optional_comma

  827 optional_make_struct_dim_decl: make_struct_dim_decl
  828                              | %empty

  829 optional_block: %empty
  830               | "where" expr_block

  831 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  832                                    | ";}}"

  833 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  834                                    | ";}]"

  835 optional_trailing_semicolon_sqr_sqr: ']' ']'
  836                                    | ";]]"

  837 optional_trailing_delim_sqr_sqr: ']' ']'
  838                                | ";]]"
  839                                | ",]]"

  840 optional_trailing_delim_cur_sqr: "end of code block" ']'
  841                                | ";}]"
  842                                | ",}]"

  843 use_initializer: %empty
  844                | "uninitialized"

  845 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  846                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  847                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  848                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  849                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  850                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  851 $@89: %empty

  852 $@90: %empty

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  854 $@91: %empty

  855 $@92: %empty

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  857 $@93: %empty

  858 $@94: %empty

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  860 $@95: %empty

  861 $@96: %empty

  862 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  863 make_tuple: expr
  864           | expr "=>" expr
  865           | make_tuple ',' expr

  866 make_map_tuple: expr "=>" expr
  867               | expr

  868 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  869 $@97: %empty

  870 $@98: %empty

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  872 make_dim: make_tuple
  873         | make_dim "end of expression" make_tuple

  874 make_dim_decl: '[' optional_expr_list ']'
  875              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  876              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  877 $@99: %empty

  878 $@100: %empty

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  880 $@101: %empty

  881 $@102: %empty

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  883 $@103: %empty

  884 $@104: %empty

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  886              | "array" '(' expr_list optional_comma ')'

  887 $@105: %empty

  888 $@106: %empty

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  890              | "fixed_array" '(' expr_list optional_comma ')'

  891 $@107: %empty

  892 $@108: %empty

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  894 make_table: make_map_tuple
  895           | make_table "end of expression" make_map_tuple

  896 expr_map_tuple_list: make_map_tuple
  897                    | expr_map_tuple_list ',' make_map_tuple

  898 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  899                | "{{" make_table optional_trailing_semicolon_cur_cur
  900                | "table" '(' optional_expr_map_tuple_list ')'
  901                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  902                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  903 array_comprehension_where: %empty
  904                          | "end of expression" "where" expr

  905 optional_comma: %empty
  906               | ','

  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  909                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  910                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  911                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  912                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 121 138 458
    '#' (35) 741 743 789
    '$' (36) 20 353 732 734
    '%' (37) 41 48 158 470
    '&' (38) 166 356 477 592 601 739 740 745
    '(' (40) 108 119 125 132 133 136 266 292 293 294 295 322 323 326 327 342 343 344 345 346 347 360 365 418 419 420 421 423 433 434 435 436 437 441 442 443 444 445 446 447 488 489 499 500 501 502 531 533 534 535 536 537 539 540 541 542 543 544 545 546 547 548 573 603 665 706 707 731 732 734 814 815 816 817 823 824 847 848 850 853 856 859 868 871 879 882 885 886 889 890 893 900 901 902
    ')' (41) 108 119 125 132 133 136 266 292 293 294 295 322 323 326 327 342 343 344 345 346 347 360 365 418 419 420 421 423 433 434 435 436 437 441 442 443 444 445 446 447 488 489 499 500 501 502 531 533 534 535 536 537 539 540 541 542 543 544 545 546 547 548 573 603 665 706 707 731 732 734 814 815 816 817 823 824 847 848 850 853 856 859 868 871 879 882 885 886 889 890 893 900 901 902
    '*' (42) 156 468 498
    '+' (43) 154 460 466
    ',' (44) 57 97 110 128 319 349 362 419 605 606 667 668 716 812 813 816 817 824 865 897 906
    '-' (45) 155 461 467 735 738 740 743
    '.' (46) 49 183 185 186 431 432 433 434 435 436 437 440 491 493 495 541 543 544
    '/' (47) 50 157 469
    ':' (58) 33 59 60 135 136 320 321 322 323 504 577 583 593 594 607 608 609 646 648
    "end of expression" (59) 69 347 822 873 895 904 907 908 909 910 911 912
    '<' (60) 159 237 273 276 289 332 335 338 341 343 344 346 347 427 430 471 501 502 507 513 518 715 730 734 749 753 756 759 763 766 770 773 777 780 783 786 853 856 859 862 871 879 882 885 889 893 901 902
    '=' (61) 89 101 102 103 104 105 106 108 357 379 401 589 597 626 631
    '>' (62) 160 237 273 276 289 332 335 338 341 343 344 346 347 427 430 472 501 502 507 513 518 715 730 734 749 753 756 759 763 766 770 773 777 780 783 786 853 856 859 862 871 879 882 885 889 893 901 902
    '?' (63) 195 196 504 515 518 519 546 746
    '@' (64) 111 112 354 355 424 427 430 548
    '[' (91) 130 181 418 419 435 490 491 571 720 721 727 735 874 907 908
    ']' (93) 130 181 182 320 321 324 325 364 418 419 435 490 491 492 493 550 571 720 721 727 735 833 835 837 840 874 907 908 909 910
    '^' (94) 168 479
    "begin of code block" (123) 229 898 911
    '|' (124) 167 478 788 789
    "end of code block" (125) 231 831 833 840 898 910 911 912
    '~' (126) 139 459
    error (256) 261 440
    "lexer error" (258)
    "capture" (259) 365
    "struct" (260) 653 655 853 879
    "class" (261) 652 654 856
    "let" (262) 311 314
    "def" (263) 222 568 570
    "while" (264) 86
    "if" (265) 70 82
    "static_if" (266) 71
    "else" (267) 66 74
    "for" (268) 84 907 908 909 910 911 912
    "recover" (269) 310
    "true" (270) 94 105 454
    "false" (271) 95 106 455
    "new" (272) 291 292 293 294 295 296
    "typeinfo" (273) 342 343 344 345 346 347
    "type" (274) 99 341 507 513 518 730
    "in" (275) 84 100 907 908 909 910 911 912
    "is" (276) 191 193 507 508 509 547
    "as" (277) 52 192 194 195 196 510 513 514 515 518 519 545 546
    "elif" (278) 63
    "static_elif" (279) 64
    "array" (280) 753 879 882 885 886 889
    "return" (281) 299 300 301 303 304
    "null" (282) 448
    "break" (283) 297
    "try" (284) 310
    "options" (285) 42
    "table" (286) 756 900 901 902
    "expect" (287) 55
    "const" (288) 556 737 738 744
    "require" (289) 43 115
    "operator" (290) 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196
    "enum" (291) 643 646
    "finally" (292) 234
    "delete" (293) 189 285 286
    "deref" (294) 499
    "typedef" (295) 634 636
    "typedecl" (296) 731
    "with" (297) 87
    "aka" (298) 604 606 666 668
    "assume" (299) 89
    "cast" (300) 332
    "override" (301) 553
    "abstract" (302) 568
    "upcast" (303) 335
    "iterator" (304) 759 908
    "var" (305) 312 315
    "addr" (306) 500
    "continue" (307) 298
    "where" (308) 830 904
    "pass" (309) 258
    "reinterpret" (310) 338
    "module" (311) 22
    "public" (312) 18 54 225 558 619 629 639 658
    "label" (313) 60 61
    "goto" (314) 61 62
    "implicit" (315) 742
    "explicit" (316) 286 736
    "shared" (317) 616
    "private" (318) 19 116 224 559 618 628 638 657
    "smart_ptr" (319) 749
    "unsafe" (320) 85 531
    "inscope" (321) 316
    "static" (322) 561
    "fixed_array" (323) 890 893
    "default" (324) 862
    "uninitialized" (325) 295 442 444 844
    "bool" (326) 197 669
    "void" (327) 689
    "string" (328) 198 670
    "auto" (329) 705 706
    "int" (330) 199 671 696
    "int2" (331) 200 675
    "int3" (332) 201 676
    "int4" (333) 202 677
    "uint" (334) 203 678 699
    "bitfield" (335) 695 715 804
    "uint2" (336) 204 682
    "uint3" (337) 205 683
    "uint4" (338) 206 684
    "float" (339) 207 685
    "float2" (340) 208 686
    "float3" (341) 209 687
    "float4" (342) 210 688
    "range" (343) 211 690
    "urange" (344) 212 691
    "range64" (345) 213 692
    "urange64" (346) 214 693
    "block" (347) 760 763 766
    "int64" (348) 215 674 702
    "uint64" (349) 216 681 703
    "double" (350) 217 694
    "function" (351) 767 770 773
    "lambda" (352) 774 777 780
    "int8" (353) 218 672 697
    "uint8" (354) 219 679 700
    "int16" (355) 220 673 698
    "uint16" (356) 221 680 701
    "tuple" (357) 783 794 868 871 882
    "variant" (358) 786 799 859 885
    "generator" (359) 237 501 502
    "yield" (360) 305 306 308 309
    "sealed" (361) 554 650
    "template" (362) 117 654 655
    "+=" (363) 140 388 409
    "-=" (364) 141 389 410
    "/=" (365) 143 391 412
    "*=" (366) 142 390 411
    "%=" (367) 144 392 413
    "&=" (368) 145 382 403
    "|=" (369) 146 383 404
    "^=" (370) 147 384 405
    "<<" (371) 173 462
    ">>" (372) 174 463
    "++" (373) 169 171 484 486
    "--" (374) 170 172 485 487
    "<=" (375) 164 475
    "<<=" (376) 175 393 414
    ">>=" (377) 176 394 415
    ">=" (378) 165 476
    "==" (379) 162 473 744 745
    "!=" (380) 163 474
    "->" (381) 420 421
    "<-" (382) 301 304 306 309 352 358 380 402 590 598
    "??" (383) 190 503 750
    "?." (384) 184 187 494 495 542 544
    "?[" (385) 182 492 493
    "<|" (386) 527
    " <|" (387) 277
    "$ <|" (388) 280 399
    "@ <|" (389) 278 397
    "@@ <|" (390) 279 398
    "|>" (391) 126 528 529
    ":=" (392) 186 188 359 381 599 811 813 815 817
    "<<<" (393) 177 464
    ">>>" (394) 178 465
    "<<<=" (395) 179 395 416
    ">>>=" (396) 180 396 417
    "=>" (397) 351 352 864 866
    "::" (398) 283 284
    "&&" (399) 122 151 480
    "||" (400) 123 152 481
    "^^" (401) 124 153 482
    "&&=" (402) 148 385 406
    "||=" (403) 149 386 407
    "^^=" (404) 150 387 408
    ".." (405) 161 483
    "$$" (406) 533
    "$i" (407) 423 534 603 665
    "$v" (408) 535
    "$b" (409) 536
    "$a" (410) 537 573
    "$t" (411) 707
    "$c" (412) 539 540 548
    "$f" (413) 541 542 543 544 545 546 547 814 815 816 817
    "..." (414) 538
    "[[" (415) 320 321 324 325 364 550 845 846 847 848 875 909
    "[{" (416) 849 850 876 910
    "{{" (417) 899 912
    "new scope" <i> (418) 230
    "close scope" <i> (419) 232
    "end of line" (420) 68
    "integer constant" <i> (421) 58 59 60 61 92 103 371
    "long integer constant" <i64> (422) 373
    "unsigned integer constant" <ui> (423) 372
    "unsigned long integer constant" <ui64> (424) 374
    "unsigned int8 constant" <ui> (425) 375
    "floating point constant" <fd> (426) 93 104 376
    "double constant" <d> (427) 377
    "name" <s> (428) 21 44 52 89 91 98 102 137 185 186 187 193 194 196 282 283 284 318 319 343 344 346 347 356 357 358 359 360 420 421 431 432 433 434 435 494 495 509 510 515 530 577 583 602 604 605 606 625 626 631 640 651 664 666 667 668 706 708 709 712 794 799 804 810 811 812 813
    "keyword" <s> (429) 45 262 273
    "type function" <s> (430) 46 276
    "start of the string" (431) 27 28 37
    STRING_CHARACTER <ch> (432) 23 25 30 38 39
    STRING_CHARACTER_ESC (433) 24 26
    "end of the string" (434) 27 28 37
    "{" (435) 36
    "}" (436) 36
    "end of failed eader macro" (437)
    ";}}" (438) 832
    ";}]" (439) 834 841
    ";]]" (440) 836 838
    ",]]" (441) 839
    ",}]" (442) 842
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 22
    module_name <s> (226)
        on left: 20 21
        on right: 22
    module_declaration (227)
        on left: 22
        on right: 2
    character_sequence <s> (228)
        on left: 23 24 25 26
        on right: 25 26 27 35
    string_constant <s> (229)
        on left: 27 28
        on right: 90 101
    format_string <s> (230)
        on left: 29 30
        on right: 30 33
    optional_format_string <s> (231)
        on left: 31 33
        on right: 36
    $@1 (232)
        on left: 32
        on right: 33
    string_builder_body <pExpression> (233)
        on left: 34 35 36
        on right: 35 36 37
    string_builder <pExpression> (234)
        on left: 37
        on right: 452
    reader_character_sequence (235)
        on left: 38 39
        on right: 39 41
    expr_reader <pExpression> (236)
        on left: 41
        on right: 16 451
    $@2 (237)
        on left: 40
        on right: 41
    options_declaration (238)
        on left: 42
        on right: 9
    require_declaration (239)
        on left: 43
        on right: 8
    keyword_or_name <s> (240)
        on left: 44 45 46
        on right: 47 49 50
    require_module_name <s> (241)
        on left: 47 48 49 50
        on right: 48 49 50 51 52
    require_module (242)
        on left: 51 52
        on right: 43
    is_public_module <b> (243)
        on left: 53 54
        on right: 51 52
    expect_declaration (244)
        on left: 55
        on right: 7
    expect_list (245)
        on left: 56 57
        on right: 55 57
    expect_error (246)
        on left: 58 59
        on right: 56 57
    expression_label <pExpression> (247)
        on left: 60
        on right: 256
    expression_goto <pExpression> (248)
        on left: 61 62
        on right: 257
    elif_or_static_elif <b> (249)
        on left: 63 64
        on right: 67
    expression_else <pExpression> (250)
        on left: 65 66 67
        on right: 67 80
    semicolon (251)
        on left: 68 69
        on right: 15 16 82 113 238 242 243 250 251 256 257 258 302 307 320 322 324 326 564 566 568 571 575 607 608 610 624 625 626 632 633 636 709 711 712 717
    if_or_static_if <b> (252)
        on left: 70 71
        on right: 80
    expression_else_one_liner <pExpression> (253)
        on left: 72 74
        on right: 82
    $@3 (254)
        on left: 73
        on right: 74
    expression_if_one_liner <pExpression> (255)
        on left: 75 76 77 78 79
        on right: 74 82
    expression_if_then_else <pExpression> (256)
        on left: 80 82
        on right: 254
    $@4 (257)
        on left: 81
        on right: 82
    expression_for_loop <pExpression> (258)
        on left: 84
        on right: 249
    $@5 (259)
        on left: 83
        on right: 84
    expression_unsafe <pExpression> (260)
        on left: 85
        on right: 246
    expression_while_loop <pExpression> (261)
        on left: 86
        on right: 245
    expression_with <pExpression> (262)
        on left: 87
        on right: 247
    expression_with_alias <pExpression> (263)
        on left: 89
        on right: 248
    $@6 (264)
        on left: 88
        on right: 89
    annotation_argument_value <aa> (265)
        on left: 90 91 92 93 94 95
        on right: 96 97
    annotation_argument_value_list <aaList> (266)
        on left: 96 97
        on right: 97 108
    annotation_argument_name <s> (267)
        on left: 98 99 100
        on right: 101 102 103 104 105 106 107 108
    annotation_argument <aa> (268)
        on left: 101 102 103 104 105 106 107 108
        on right: 109 110 111 112
    annotation_argument_list <aaList> (269)
        on left: 109 110
        on right: 42 110 119 550
    metadata_argument_list <aaList> (270)
        on left: 111 112 113
        on right: 112 113 551
    annotation_declaration_name <s> (271)
        on left: 114 115 116 117
        on right: 118 119
    annotation_declaration_basic <fa> (272)
        on left: 118 119
        on right: 120
    annotation_declaration <fa> (273)
        on left: 120 121 122 123 124 125 126
        on right: 121 122 123 124 125 126 127 128
    annotation_list <faList> (274)
        on left: 127 128
        on right: 128 130 571
    optional_annotation_list <faList> (275)
        on left: 129 130
        on right: 222 367 368 370 568 570 643 646 663
    optional_function_argument_list <pVarDeclList> (276)
        on left: 131 132 133
        on right: 226 367 368 370 430 766 773 780
    optional_function_type <pTypeDecl> (277)
        on left: 134 135 136
        on right: 226 367 368 370 430 766 773 780
    function_name <s> (278)
        on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221
        on right: 226
    global_function_declaration (279)
        on left: 222
        on right: 6
    optional_public_or_private_function <b> (280)
        on left: 223 224 225
        on right: 228
    function_declaration_header <pFuncDecl> (281)
        on left: 226
        on right: 228 568 570
    function_declaration <pFuncDecl> (282)
        on left: 228
        on right: 222
    $@7 (283)
        on left: 227
        on right: 228
    open_block (284)
        on left: 229 230
        on right: 233 234 620 634 643 646 660 794 799 804
    close_block (285)
        on left: 231 232
        on right: 233 234 620 634 643 646 660 794 799 804
    expression_block <pExpression> (286)
        on left: 233 234
        on right: 66 67 80 84 85 86 87 228 262 310 350 366 370 570
    expr_call_pipe <pExpression> (287)
        on left: 235 236 237
        on right: 281 400
    expression_any <pExpression> (288)
        on left: 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258
        on right: 260
    expressions <pExpression> (289)
        on left: 259 260 261
        on right: 233 234 260 261
    expr_keyword <pExpression> (290)
        on left: 262
        on right: 240
    optional_expr_list <pExpression> (291)
        on left: 263 264
        on right: 266 732 734 874 889
    optional_expr_list_in_braces <pExpression> (292)
        on left: 265 266
        on right: 276
    optional_expr_map_tuple_list <pExpression> (293)
        on left: 267 268
        on right: 898 900 901 902
    type_declaration_no_options_list <pTypeDeclList> (294)
        on left: 269 270
        on right: 270 273 276 734
    expression_keyword <pExpression> (295)
        on left: 273 276
        on right: 236 532
    $@8 (296)
        on left: 271
        on right: 273
    $@9 (297)
        on left: 272
        on right: 273
    $@10 (298)
        on left: 274
        on right: 276
    $@11 (299)
        on left: 275
        on right: 276
    expr_pipe <pExpression> (300)
        on left: 277 278 279 280 281
        on right: 239 303 304 308 309 321 323 325 327 596 609 611
    name_in_namespace <s> (301)
        on left: 282 283 284
        on right: 41 114 342 343 344 345 346 347 418 419 422 441 442 443 444 445 449 530 648 704 732 734
    expression_delete <pExpression> (302)
        on left: 285 286
        on right: 243
    new_type_declaration <pTypeDecl> (303)
        on left: 289 290
        on right: 291 292 293 294 295
    $@12 (304)
        on left: 287
        on right: 289
    $@13 (305)
        on left: 288
        on right: 289
    expr_new <pExpression> (306)
        on left: 291 292 293 294 295 296
        on right: 523
    expression_break <pExpression> (307)
        on left: 297
        on right: 78 250
    expression_continue <pExpression> (308)
        on left: 298
        on right: 79 251
    expression_return_no_pipe <pExpression> (309)
        on left: 299 300 301
        on right: 76 302
    expression_return <pExpression> (310)
        on left: 302 303 304
        on right: 252
    expression_yield_no_pipe <pExpression> (311)
        on left: 305 306
        on right: 77 307
    expression_yield <pExpression> (312)
        on left: 307 308 309
        on right: 253
    expression_try_catch <pExpression> (313)
        on left: 310
        on right: 255
    kwd_let_var_or_nothing <b> (314)
        on left: 311 312 313
        on right: 572
    kwd_let <b> (315)
        on left: 314 315
        on right: 328 329 620 622
    optional_in_scope <b> (316)
        on left: 316 317
        on right: 328 329
    tuple_expansion <pNameList> (317)
        on left: 318 319
        on right: 319 320 321 322 323 324 325 326 327
    tuple_expansion_variable_declaration <pVarDecl> (318)
        on left: 320 321 322 323 324 325 326 327
        on right: 329
    expression_let <pExpression> (319)
        on left: 328 329
        on right: 244
    expr_cast <pExpression> (320)
        on left: 332 335 338
        on right: 522
    $@14 (321)
        on left: 330
        on right: 332
    $@15 (322)
        on left: 331
        on right: 332
    $@16 (323)
        on left: 333
        on right: 335
    $@17 (324)
        on left: 334
        on right: 335
    $@18 (325)
        on left: 336
        on right: 338
    $@19 (326)
        on left: 337
        on right: 338
    expr_type_decl <pExpression> (327)
        on left: 341
        on right: 521
    $@20 (328)
        on left: 339
        on right: 341
    $@21 (329)
        on left: 340
        on right: 341
    expr_type_info <pExpression> (330)
        on left: 342 343 344 345 346 347
        on right: 520
    expr_list <pExpression> (331)
        on left: 348 349
        on right: 84 264 293 300 301 349 419 421 434 437 445 447 488 540 868 886 890 893 907 908 909 910 911 912
    block_or_simple_block <pExpression> (332)
        on left: 350 351 352
        on right: 367 368
    block_or_lambda <i> (333)
        on left: 353 354 355
        on right: 367 368 370
    capture_entry <pCapt> (334)
        on left: 356 357 358 359 360
        on right: 361 362
    capture_list <pCaptList> (335)
        on left: 361 362
        on right: 362 364 365
    optional_capture_list <pCaptList> (336)
        on left: 363 364 365
        on right: 237 367 368 370 501 502
    expr_block <pExpression> (337)
        on left: 366 367
        on right: 277 278 279 280 397 398 399 830
    expr_full_block <pExpression> (338)
        on left: 368
        on right: 526
    expr_full_block_assumed_piped <pExpression> (339)
        on left: 370
        on right: 235 236 237
    $@22 (340)
        on left: 369
        on right: 370
    expr_numeric_const <pExpression> (341)
        on left: 371 372 373 374 375 376 377
        on right: 450
    expr_assign <pExpression> (342)
        on left: 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396
        on right: 242 277
    expr_assign_pipe_right <pExpression> (343)
        on left: 397 398 399 400
        on right: 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417
    expr_assign_pipe <pExpression> (344)
        on left: 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417
        on right: 241
    expr_named_call <pExpression> (345)
        on left: 418 419
        on right: 525
    expr_method_call <pExpression> (346)
        on left: 420 421
        on right: 524
    func_addr_name <pExpression> (347)
        on left: 422 423
        on right: 424 427 430
    func_addr_expr <pExpression> (348)
        on left: 424 427 430
        on right: 496
    $@23 (349)
        on left: 425
        on right: 427
    $@24 (350)
        on left: 426
        on right: 427
    $@25 (351)
        on left: 428
        on right: 430
    $@26 (352)
        on left: 429
        on right: 430
    expr_field <pExpression> (353)
        on left: 431 432 433 434 435 436 437 440
        on right: 456
    $@27 (354)
        on left: 438
        on right: 440
    $@28 (355)
        on left: 439
        on right: 440
    expr_call <pExpression> (356)
        on left: 441 442 443 444 445 446 447
        on right: 497
    expr <pExpression> (357)
        on left: 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 507 508 509 510 513 514 515 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532
        on right
    $@29 (358)
        on left: 505
        on right: 507
    $@30 (359)
        on left: 506
        on right: 507
    $@31 (360)
        on left: 511
        on right: 513
    $@32 (361)
        on left: 512
        on right: 513
    $@33 (362)
        on left: 516
        on right: 518
    $@34 (363)
        on left: 517
        on right: 518
    expr_mtag <pExpression> (364)
        on left: 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548
        on right: 457
    optional_field_annotation <aaList> (365)
        on left: 549 550 551
        on right: 562 572 614 622
    optional_override <i> (366)
        on left: 552 553 554
        on right: 562 570
    optional_constant <b> (367)
        on left: 555 556
        on right: 568 570
    optional_public_or_private_member_variable <b> (368)
        on left: 557 558 559
        on right: 562 568 570
    optional_static_member_variable <b> (369)
        on left: 560 561
        on right: 562 570
    structure_variable_declaration <pVarDecl> (370)
        on left: 562
        on right: 566
    struct_variable_declaration_list <pVarDeclList> (371)
        on left: 563 564 566 568 570 571
        on right: 564 566 568 570 571 660
    $@35 (372)
        on left: 565
        on right: 566
    $@36 (373)
        on left: 567
        on right: 568
    $@37 (374)
        on left: 569
        on right: 570
    function_argument_declaration <pVarDecl> (375)
        on left: 572 573
        on right: 574 575
    function_argument_list <pVarDeclList> (376)
        on left: 574 575
        on right: 133 575
    tuple_type <pVarDecl> (377)
        on left: 576 577
        on right: 578 579 582
    tuple_type_list <pVarDeclList> (378)
        on left: 578 579
        on right: 136 579 783 871 882
    tuple_alias_type_list <pVarDeclList> (379)
        on left: 580 581 582
        on right: 581 582 794
    variant_type <pVarDecl> (380)
        on left: 583
        on right: 584 585 588
    variant_type_list <pVarDeclList> (381)
        on left: 584 585
        on right: 585 786 859 885
    variant_alias_type_list <pVarDeclList> (382)
        on left: 586 587 588
        on right: 587 588 799
    copy_or_move <b> (383)
        on left: 589 590
        on right: 594 595 596 810 812 814 816
    variable_declaration <pVarDecl> (384)
        on left: 591 592 593 594 595 596
        on right: 562 572
    copy_or_move_or_clone <i> (385)
        on left: 597 598 599
        on right: 320 321 322 323 324 325 326 327 608 609 610 611
    optional_ref <b> (386)
        on left: 600 601
        on right: 324 325 326 327 610 611
    let_variable_name_with_pos_list <pNameWithPosList> (387)
        on left: 602 603 604 605 606
        on right: 605 606 607 608 609 610 611
    let_variable_declaration <pVarDecl> (388)
        on left: 607 608 609 610 611
        on right: 328 614 622
    global_variable_declaration_list <pVarDeclList> (389)
        on left: 612 614
        on right: 614 620
    $@38 (390)
        on left: 613
        on right: 614
    optional_shared <b> (391)
        on left: 615 616
        on right: 22 620 622
    optional_public_or_private_variable <b> (392)
        on left: 617 618 619
        on right: 620 622
    global_let (393)
        on left: 620 622
        on right: 5
    $@39 (394)
        on left: 621
        on right: 622
    enum_list <pEnum> (395)
        on left: 623 624 625 626
        on right: 624 625 626 643 646
    optional_public_or_private_alias <b> (396)
        on left: 627 628 629
        on right: 631 794 799 804
    single_alias (397)
        on left: 631
        on right: 632 633 636
    $@40 (398)
        on left: 630
        on right: 631
    alias_list (399)
        on left: 632 633
        on right: 633 634
    alias_declaration (400)
        on left: 634 636
        on right: 10
    $@41 (401)
        on left: 635
        on right: 636
    optional_public_or_private_enum <b> (402)
        on left: 637 638 639
        on right: 643 646
    enum_name <pEnum> (403)
        on left: 640
        on right: 643 646
    enum_declaration (404)
        on left: 643 646
        on right: 4
    $@42 (405)
        on left: 641
        on right: 643
    $@43 (406)
        on left: 642
        on right: 643
    $@44 (407)
        on left: 644
        on right: 646
    $@45 (408)
        on left: 645
        on right: 646
    optional_structure_parent <s> (409)
        on left: 647 648
        on right: 651
    optional_sealed <b> (410)
        on left: 649 650
        on right: 651
    structure_name <pStructure> (411)
        on left: 651
        on right: 663
    class_or_struct <i> (412)
        on left: 652 653 654 655
        on right: 663
    optional_public_or_private_structure <b> (413)
        on left: 656 657 658
        on right: 663
    optional_struct_variable_declaration_list <pVarDeclList> (414)
        on left: 659 660
        on right: 663
    structure_declaration (415)
        on left: 663
        on right: 3
    $@46 (416)
        on left: 661
        on right: 663
    $@47 (417)
        on left: 662
        on right: 663
    variable_name_with_pos_list <pNameWithPosList> (418)
        on left: 664 665 666 667 668
        on right: 84 591 592 593 594 595 596 667 668 907 908 909 910 911 912
    basic_type_declaration <type> (419)
        on left: 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695
        on right: 436 437 446 447 508 514 519 529 722
    enum_basic_type_declaration <type> (420)
        on left: 696 697 698 699 700 701 702 703
        on right: 646
    structure_type_declaration <pTypeDecl> (421)
        on left: 704
        on right: 290 725
    auto_type_declaration <pTypeDecl> (422)
        on left: 705 706 707
        on right: 723
    bitfield_bits <pNameList> (423)
        on left: 708 709
        on right: 709 715
    bitfield_alias_bits <pNameList> (424)
        on left: 710 711 712
        on right: 711 712 804
    bitfield_type_declaration <pTypeDecl> (425)
        on left: 715
        on right: 724
    $@48 (426)
        on left: 713
        on right: 715
    $@49 (427)
        on left: 714
        on right: 715
    c_or_s (428)
        on left: 716 717
        on right: 270 344 579 581 582 585 587 588 719 902
    table_type_pair <aTypePair> (429)
        on left: 718 719
        on right: 756
    dim_list <pTypeDecl> (430)
        on left: 720 721
        on right: 721 726
    type_declaration_no_options <pTypeDecl> (431)
        on left: 722 723 724 725 726 727 730 731 732 734 735 736 737 738 739 740 741 742 743 744 745 746 749 750 753 756 759 760 763 766 767 770 773 774 777 780 783 786
        on right: 237 320 321 322 323 332 335 338 427 501 502 507 607 608 609 726 727 735 736 737 738 739 740 741 742 743 744 745 746 750 787 788 845 846 847 848 849 850 853 856 862 875 876 879 889 893 901 902
    $@50 (432)
        on left: 728
        on right: 730
    $@51 (433)
        on left: 729
        on right: 730
    $@52 (434)
        on left: 733
        on right: 734
    $@53 (435)
        on left: 747
        on right: 749
    $@54 (436)
        on left: 748
        on right: 749
    $@55 (437)
        on left: 751
        on right: 753
    $@56 (438)
        on left: 752
        on right: 753
    $@57 (439)
        on left: 754
        on right: 756
    $@58 (440)
        on left: 755
        on right: 756
    $@59 (441)
        on left: 757
        on right: 759
    $@60 (442)
        on left: 758
        on right: 759
    $@61 (443)
        on left: 761
        on right: 763
    $@62 (444)
        on left: 762
        on right: 763
    $@63 (445)
        on left: 764
        on right: 766
    $@64 (446)
        on left: 765
        on right: 766
    $@65 (447)
        on left: 768
        on right: 770
    $@66 (448)
        on left: 769
        on right: 770
    $@67 (449)
        on left: 771
        on right: 773
    $@68 (450)
        on left: 772
        on right: 773
    $@69 (451)
        on left: 775
        on right: 777
    $@70 (452)
        on left: 776
        on right: 777
    $@71 (453)
        on left: 778
        on right: 780
    $@72 (454)
        on left: 779
        on right: 780
    $@73 (455)
        on left: 781
        on right: 783
    $@74 (456)
        on left: 782
        on right: 783
    $@75 (457)
        on left: 784
        on right: 786
    $@76 (458)
        on left: 785
        on right: 786
    type_declaration <pTypeDecl> (459)
        on left: 787 788 789
        on right: 135 269 270 289 341 513 518 576 577 583 593 594 631 718 719 730 749 753 759 763 770 777 788 789
    tuple_alias_declaration (460)
        on left: 794
        on right: 12
    $@77 (461)
        on left: 790
        on right: 794
    $@78 (462)
        on left: 791
        on right: 794
    $@79 (463)
        on left: 792
        on right: 794
    $@80 (464)
        on left: 793
        on right: 794
    variant_alias_declaration (465)
        on left: 799
        on right: 11
    $@81 (466)
        on left: 795
        on right: 799
    $@82 (467)
        on left: 796
        on right: 799
    $@83 (468)
        on left: 797
        on right: 799
    $@84 (469)
        on left: 798
        on right: 799
    bitfield_alias_declaration (470)
        on left: 804
        on right: 13
    $@85 (471)
        on left: 800
        on right: 804
    $@86 (472)
        on left: 801
        on right: 804
    $@87 (473)
        on left: 802
        on right: 804
    $@88 (474)
        on left: 803
        on right: 804
    make_decl <pExpression> (475)
        on left: 805 806 807 808 809
        on right: 296 453
    make_struct_fields <pMakeStruct> (476)
        on left: 810 811 812 813 814 815 816 817
        on right: 418 419 435 812 813 816 817 819 820 821 822 823 824 825
    make_variant_dim <pExpression> (477)
        on left: 818 819
        on right: 859 885
    make_struct_single <pExpression> (478)
        on left: 820
        on right: 294 295 443 444 489
    make_struct_dim <pExpression> (479)
        on left: 821 822
        on right: 822 845 848 849 850
    make_struct_dim_list <pExpression> (480)
        on left: 823 824
        on right: 824 826
    make_struct_dim_decl <pExpression> (481)
        on left: 825 826
        on right: 827
    optional_make_struct_dim_decl <pExpression> (482)
        on left: 827 828
        on right: 853 856 871 879 882
    optional_block <pExpression> (483)
        on left: 829 830
        on right: 845 846 847 848 849 850
    optional_trailing_semicolon_cur_cur (484)
        on left: 831 832
        on right: 899
    optional_trailing_semicolon_cur_sqr (485)
        on left: 833 834
        on right: 876
    optional_trailing_semicolon_sqr_sqr (486)
        on left: 835 836
        on right: 875
    optional_trailing_delim_sqr_sqr (487)
        on left: 837 838 839
        on right: 845 846 847 848
    optional_trailing_delim_cur_sqr (488)
        on left: 840 841 842
        on right: 849 850
    use_initializer <b> (489)
        on left: 843 844
        on right: 292 853 856 859 862 871 879 882
    make_struct_decl <pExpression> (490)
        on left: 845 846 847 848 849 850 853 856 859 862
        on right: 805
    $@89 (491)
        on left: 851
        on right: 853
    $@90 (492)
        on left: 852
        on right: 853
    $@91 (493)
        on left: 854
        on right: 856
    $@92 (494)
        on left: 855
        on right: 856
    $@93 (495)
        on left: 857
        on right: 859
    $@94 (496)
        on left: 858
        on right: 859
    $@95 (497)
        on left: 860
        on right: 862
    $@96 (498)
        on left: 861
        on right: 862
    make_tuple <pExpression> (499)
        on left: 863 864 865
        on right: 865 872 873
    make_map_tuple <pExpression> (500)
        on left: 866 867
        on right: 894 895 896 897 911 912
    make_tuple_call <pExpression> (501)
        on left: 868 871
        on right: 809
    $@97 (502)
        on left: 869
        on right: 871
    $@98 (503)
        on left: 870
        on right: 871
    make_dim <pExpression> (504)
        on left: 872 873
        on right: 873 875 876
    make_dim_decl <pExpression> (505)
        on left: 874 875 876 879 882 885 886 889 890 893
        on right: 806
    $@99 (506)
        on left: 877
        on right: 879
    $@100 (507)
        on left: 878
        on right: 879
    $@101 (508)
        on left: 880
        on right: 882
    $@102 (509)
        on left: 881
        on right: 882
    $@103 (510)
        on left: 883
        on right: 885
    $@104 (511)
        on left: 884
        on right: 885
    $@105 (512)
        on left: 887
        on right: 889
    $@106 (513)
        on left: 888
        on right: 889
    $@107 (514)
        on left: 891
        on right: 893
    $@108 (515)
        on left: 892
        on right: 893
    make_table <pExpression> (516)
        on left: 894 895
        on right: 895 899
    expr_map_tuple_list <pExpression> (517)
        on left: 896 897
        on right: 268 897
    make_table_decl <pExpression> (518)
        on left: 898 899 900 901 902
        on right: 807
    array_comprehension_where <pExpression> (519)
        on left: 903 904
        on right: 907 908 909 910 911 912
    optional_comma <b> (520)
        on left: 905 906
        on right: 264 266 268 488 826 868 886 890 893
    array_comprehension <pExpression> (521)
        on left: 907 908 909 910 911 912
        on right: 808


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  314 kwd_let: "let" .

    $default  reduce using rule 314 (kwd_let)


State 4

   42 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   55 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   43 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  634 alias_declaration: "typedef" . open_block alias_list close_block
  636                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 635 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  315 kwd_let: "var" .

    $default  reduce using rule 315 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  804 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 627 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  794 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 627 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  799 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 627 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   68 semicolon: "end of line" .

    $default  reduce using rule 68 (semicolon)


State 14

   69 semicolon: "end of expression" .

    $default  reduce using rule 69 (semicolon)


State 15

   41 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  130 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  222 global_function_declaration: optional_annotation_list . "def" function_declaration
  643 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  646                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  663 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  620 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  622           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 615 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

   99 annotation_argument_name: "type" .

    $default  reduce using rule 99 (annotation_argument_name)


State 35

  100 annotation_argument_name: "in" .

    $default  reduce using rule 100 (annotation_argument_name)


State 36

   98 annotation_argument_name: "name" .

    $default  reduce using rule 98 (annotation_argument_name)


State 37

  101 annotation_argument: annotation_argument_name . '=' string_constant
  102                    | annotation_argument_name . '=' "name"
  103                    | annotation_argument_name . '=' "integer constant"
  104                    | annotation_argument_name . '=' "floating point constant"
  105                    | annotation_argument_name . '=' "true"
  106                    | annotation_argument_name . '=' "false"
  107                    | annotation_argument_name .
  108                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 107 (annotation_argument)


State 38

  109 annotation_argument_list: annotation_argument .

    $default  reduce using rule 109 (annotation_argument_list)


State 39

   42 options_declaration: "options" annotation_argument_list .
  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 42 (options_declaration)


State 40

   58 expect_error: "integer constant" .
   59             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 58 (expect_error)


State 41

   55 expect_declaration: "expect" expect_list .
   57 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 55 (expect_declaration)


State 42

   56 expect_list: expect_error .

    $default  reduce using rule 56 (expect_list)


State 43

   44 keyword_or_name: "name" .

    $default  reduce using rule 44 (keyword_or_name)


State 44

   45 keyword_or_name: "keyword" .

    $default  reduce using rule 45 (keyword_or_name)


State 45

   46 keyword_or_name: "type function" .

    $default  reduce using rule 46 (keyword_or_name)


State 46

   48 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   47 require_module_name: keyword_or_name .

    $default  reduce using rule 47 (require_module_name)


State 48

   49 require_module_name: require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name
   51 require_module: require_module_name . is_public_module
   52               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 94


State 49

   43 require_declaration: "require" require_module .

    $default  reduce using rule 43 (require_declaration)


State 50

  230 open_block: "new scope" .

    $default  reduce using rule 230 (open_block)


State 51

  229 open_block: "begin of code block" .

    $default  reduce using rule 229 (open_block)


State 52

  634 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 627 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  636 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 627 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 83

    $default  reduce using rule 615 (optional_shared)

    optional_shared  go to state 99


State 57

  629 optional_public_or_private_alias: "public" .

    $default  reduce using rule 629 (optional_public_or_private_alias)


State 58

  628 optional_public_or_private_alias: "private" .

    $default  reduce using rule 628 (optional_public_or_private_alias)


State 59

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 800 ($@85)

    $@85  go to state 100


State 60

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 790 ($@77)

    $@77  go to state 101


State 61

  799 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 795 ($@81)

    $@81  go to state 102


State 62

  284 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 282 (name_in_namespace)]
    $default  reduce using rule 282 (name_in_namespace)


State 64

   41 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 40 ($@2)

    $@2  go to state 105


State 65

  115 annotation_declaration_name: "require" .

    $default  reduce using rule 115 (annotation_declaration_name)


State 66

  116 annotation_declaration_name: "private" .

    $default  reduce using rule 116 (annotation_declaration_name)


State 67

  117 annotation_declaration_name: "template" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 68

  126 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  121 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  125 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  118 annotation_declaration_basic: annotation_declaration_name .
  119                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 118 (annotation_declaration_basic)


State 72

  120 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 120 (annotation_declaration)


State 73

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  127 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 127 (annotation_list)


State 74

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  114 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 114 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  653 class_or_struct: "struct" .

    $default  reduce using rule 653 (class_or_struct)


State 78

  652 class_or_struct: "class" .

    $default  reduce using rule 652 (class_or_struct)


State 79

  222 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 223 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  643 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  646                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 637 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  654 class_or_struct: "template" . "class"
  655                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  663 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 656 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  616 optional_shared: "shared" .

    $default  reduce using rule 616 (optional_shared)


State 84

  620 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  622           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 617 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  101 annotation_argument: annotation_argument_name '=' . string_constant
  102                    | annotation_argument_name '=' . "name"
  103                    | annotation_argument_name '=' . "integer constant"
  104                    | annotation_argument_name '=' . "floating point constant"
  105                    | annotation_argument_name '=' . "true"
  106                    | annotation_argument_name '=' . "false"
  108                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  110 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   59 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   57 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   48 require_module_name: '%' require_module_name .
   49                    | require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 48 (require_module_name)


State 90

   52 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   54 is_public_module: "public" .

    $default  reduce using rule 54 (is_public_module)


State 92

   50 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   49 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   51 require_module: require_module_name is_public_module .

    $default  reduce using rule 51 (require_module)


State 95

  631 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  632 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  633 alias_list: alias_list . single_alias semicolon
  634 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 627 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  636 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  284 name_in_namespace: "::" "name" .

    $default  reduce using rule 284 (name_in_namespace)


State 104

  283 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   41 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  126                       | "|>" annotation_declaration .

    $default  reduce using rule 126 (annotation_declaration)


State 107

  121 annotation_declaration: '!' annotation_declaration .
  122                       | annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 121 (annotation_declaration)


State 108

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  125                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  119 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  122 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  123 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  124 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  128 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  130 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 130 (optional_annotation_list)


State 115

  225 optional_public_or_private_function: "public" .

    $default  reduce using rule 225 (optional_public_or_private_function)


State 116

  224 optional_public_or_private_function: "private" .

    $default  reduce using rule 224 (optional_public_or_private_function)


State 117

  228 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 227 ($@7)

    $@7  go to state 166


State 118

  222 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 222 (global_function_declaration)


State 119

  639 optional_public_or_private_enum: "public" .

    $default  reduce using rule 639 (optional_public_or_private_enum)


State 120

  638 optional_public_or_private_enum: "private" .

    $default  reduce using rule 638 (optional_public_or_private_enum)


State 121

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  646                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  655 class_or_struct: "template" "struct" .

    $default  reduce using rule 655 (class_or_struct)


State 123

  654 class_or_struct: "template" "class" .

    $default  reduce using rule 654 (class_or_struct)


State 124

  658 optional_public_or_private_structure: "public" .

    $default  reduce using rule 658 (optional_public_or_private_structure)


State 125

  657 optional_public_or_private_structure: "private" .

    $default  reduce using rule 657 (optional_public_or_private_structure)


State 126

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 661 ($@46)

    $@46  go to state 169


State 127

  619 optional_public_or_private_variable: "public" .

    $default  reduce using rule 619 (optional_public_or_private_variable)


State 128

  618 optional_public_or_private_variable: "private" .

    $default  reduce using rule 618 (optional_public_or_private_variable)


State 129

  620 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  622           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 621 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  105 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 105 (annotation_argument)


State 131

  106 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 106 (annotation_argument)


State 132

  103 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 103 (annotation_argument)


State 133

  104 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 104 (annotation_argument)


State 134

  102 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 102 (annotation_argument)


State 135

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  108 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  101 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 101 (annotation_argument)


State 138

  110 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 110 (annotation_argument_list)


State 139

   59 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 59 (expect_error)


State 140

   57 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 57 (expect_list)


State 141

   52 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 184


State 142

   50 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 50 (require_module_name)


State 143

   49 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 144

  631 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 630 ($@40)

    $@40  go to state 185


State 145

  632 alias_list: single_alias semicolon .

    $default  reduce using rule 632 (alias_list)


State 146

  232 close_block: "close scope" .

    $default  reduce using rule 232 (close_block)


State 147

  231 close_block: "end of code block" .

    $default  reduce using rule 231 (close_block)


State 148

  634 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 634 (alias_declaration)


State 149

  633 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  636 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 636 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 154

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 801 ($@86)

    $@86  go to state 187


State 155

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 791 ($@78)

    $@78  go to state 188


State 156

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 796 ($@82)

    $@82  go to state 189


State 157

  283 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 283 (name_in_namespace)


State 158

   38 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 159

   39 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 190

    $default  reduce using rule 41 (expr_reader)


State 160

  125 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 125 (annotation_declaration)


State 161

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 191


State 162

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration .
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 122 (annotation_declaration)


State 163

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration .
  124                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 123 (annotation_declaration)


State 164

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 124 (annotation_declaration)


State 165

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  128 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 128 (annotation_list)


State 166

  228 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 222


State 167

  640 enum_name: "name" .

    $default  reduce using rule 640 (enum_name)


State 168

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  646                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 223

    open_block  go to state 224


State 169

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 225

    $default  reduce using rule 649 (optional_sealed)

    optional_sealed  go to state 226
    structure_name   go to state 227


State 170

  620 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 612 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 228


State 171

  622 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 549 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 232


State 172

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 173

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 174

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 175

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234
    "end of the string"   shift, and go to state 235


State 176

   94 annotation_argument_value: "true" .

    $default  reduce using rule 94 (annotation_argument_value)


State 177

   95 annotation_argument_value: "false" .

    $default  reduce using rule 95 (annotation_argument_value)


State 178

   92 annotation_argument_value: "integer constant" .

    $default  reduce using rule 92 (annotation_argument_value)


State 179

   93 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 93 (annotation_argument_value)


State 180

   91 annotation_argument_value: "name" .

    $default  reduce using rule 91 (annotation_argument_value)


State 181

   90 annotation_argument_value: string_constant .

    $default  reduce using rule 90 (annotation_argument_value)


State 182

   96 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 96 (annotation_argument_value_list)


State 183

   97 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 236
    ')'  shift, and go to state 237


State 184

   52 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 52 (require_module)


State 185

  631 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 238


State 186

  633 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 633 (alias_list)


State 187

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 239


State 188

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 240


State 189

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 241


State 190

   39 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 39 (reader_character_sequence)


State 191

  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 119 (annotation_declaration_basic)


State 192

  138 function_name: "operator" . '!'
  139              | "operator" . '~'
  140              | "operator" . "+="
  141              | "operator" . "-="
  142              | "operator" . "*="
  143              | "operator" . "/="
  144              | "operator" . "%="
  145              | "operator" . "&="
  146              | "operator" . "|="
  147              | "operator" . "^="
  148              | "operator" . "&&="
  149              | "operator" . "||="
  150              | "operator" . "^^="
  151              | "operator" . "&&"
  152              | "operator" . "||"
  153              | "operator" . "^^"
  154              | "operator" . '+'
  155              | "operator" . '-'
  156              | "operator" . '*'
  157              | "operator" . '/'
  158              | "operator" . '%'
  159              | "operator" . '<'
  160              | "operator" . '>'
  161              | "operator" . ".."
  162              | "operator" . "=="
  163              | "operator" . "!="
  164              | "operator" . "<="
  165              | "operator" . ">="
  166              | "operator" . '&'
  167              | "operator" . '|'
  168              | "operator" . '^'
  171              | "operator" . "++"
  172              | "operator" . "--"
  173              | "operator" . "<<"
  174              | "operator" . ">>"
  175              | "operator" . "<<="
  176              | "operator" . ">>="
  177              | "operator" . "<<<"
  178              | "operator" . ">>>"
  179              | "operator" . "<<<="
  180              | "operator" . ">>>="
  181              | "operator" . '[' ']'
  182              | "operator" . "?[" ']'
  183              | "operator" . '.'
  184              | "operator" . "?."
  185              | "operator" . '.' "name"
  186              | "operator" . '.' "name" ":="
  187              | "operator" . "?." "name"
  188              | "operator" . ":="
  189              | "operator" . "delete"
  190              | "operator" . "??"
  191              | "operator" . "is"
  192              | "operator" . "as"
  193              | "operator" . "is" "name"
  194              | "operator" . "as" "name"
  195              | "operator" . '?' "as"
  196              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 242
    "as"      shift, and go to state 243
    "delete"  shift, and go to state 244
    "+="      shift, and go to state 245
    "-="      shift, and go to state 246
    "/="      shift, and go to state 247
    "*="      shift, and go to state 248
    "%="      shift, and go to state 249
    "&="      shift, and go to state 250
    "|="      shift, and go to state 251
    "^="      shift, and go to state 252
    "<<"      shift, and go to state 253
    ">>"      shift, and go to state 254
    "++"      shift, and go to state 255
    "--"      shift, and go to state 256
    "<="      shift, and go to state 257
    "<<="     shift, and go to state 258
    ">>="     shift, and go to state 259
    ">="      shift, and go to state 260
    "=="      shift, and go to state 261
    "!="      shift, and go to state 262
    "??"      shift, and go to state 263
    "?."      shift, and go to state 264
    "?["      shift, and go to state 265
    ":="      shift, and go to state 266
    "<<<"     shift, and go to state 267
    ">>>"     shift, and go to state 268
    "<<<="    shift, and go to state 269
    ">>>="    shift, and go to state 270
    "&&"      shift, and go to state 271
    "||"      shift, and go to state 272
    "^^"      shift, and go to state 273
    "&&="     shift, and go to state 274
    "||="     shift, and go to state 275
    "^^="     shift, and go to state 276
    ".."      shift, and go to state 277
    '?'       shift, and go to state 278
    '|'       shift, and go to state 279
    '^'       shift, and go to state 280
    '&'       shift, and go to state 281
    '<'       shift, and go to state 282
    '>'       shift, and go to state 283
    '-'       shift, and go to state 284
    '+'       shift, and go to state 285
    '*'       shift, and go to state 286
    '/'       shift, and go to state 287
    '%'       shift, and go to state 288
    '~'       shift, and go to state 289
    '!'       shift, and go to state 290
    '.'       shift, and go to state 291
    '['       shift, and go to state 292


State 193

  197 function_name: "bool" .

    $default  reduce using rule 197 (function_name)


State 194

  198 function_name: "string" .

    $default  reduce using rule 198 (function_name)


State 195

  199 function_name: "int" .

    $default  reduce using rule 199 (function_name)


State 196

  200 function_name: "int2" .

    $default  reduce using rule 200 (function_name)


State 197

  201 function_name: "int3" .

    $default  reduce using rule 201 (function_name)


State 198

  202 function_name: "int4" .

    $default  reduce using rule 202 (function_name)


State 199

  203 function_name: "uint" .

    $default  reduce using rule 203 (function_name)


State 200

  204 function_name: "uint2" .

    $default  reduce using rule 204 (function_name)


State 201

  205 function_name: "uint3" .

    $default  reduce using rule 205 (function_name)


State 202

  206 function_name: "uint4" .

    $default  reduce using rule 206 (function_name)


State 203

  207 function_name: "float" .

    $default  reduce using rule 207 (function_name)


State 204

  208 function_name: "float2" .

    $default  reduce using rule 208 (function_name)


State 205

  209 function_name: "float3" .

    $default  reduce using rule 209 (function_name)


State 206

  210 function_name: "float4" .

    $default  reduce using rule 210 (function_name)


State 207

  211 function_name: "range" .

    $default  reduce using rule 211 (function_name)


State 208

  212 function_name: "urange" .

    $default  reduce using rule 212 (function_name)


State 209

  213 function_name: "range64" .

    $default  reduce using rule 213 (function_name)


State 210

  214 function_name: "urange64" .

    $default  reduce using rule 214 (function_name)


State 211

  215 function_name: "int64" .

    $default  reduce using rule 215 (function_name)


State 212

  216 function_name: "uint64" .

    $default  reduce using rule 216 (function_name)


State 213

  217 function_name: "double" .

    $default  reduce using rule 217 (function_name)


State 214

  218 function_name: "int8" .

    $default  reduce using rule 218 (function_name)


State 215

  219 function_name: "uint8" .

    $default  reduce using rule 219 (function_name)


State 216

  220 function_name: "int16" .

    $default  reduce using rule 220 (function_name)


State 217

  221 function_name: "uint16" .

    $default  reduce using rule 221 (function_name)


State 218

  169 function_name: "++" . "operator"

    "operator"  shift, and go to state 293


State 219

  170 function_name: "--" . "operator"

    "operator"  shift, and go to state 294


State 220

  137 function_name: "name" .

    $default  reduce using rule 137 (function_name)


State 221

  226 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 296


State 222

  228 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 298


State 223

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 299
    "uint"    shift, and go to state 300
    "int64"   shift, and go to state 301
    "uint64"  shift, and go to state 302
    "int8"    shift, and go to state 303
    "uint8"   shift, and go to state 304
    "int16"   shift, and go to state 305
    "uint16"  shift, and go to state 306

    enum_basic_type_declaration  go to state 307


State 224

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 641 ($@42)

    $@42  go to state 308


State 225

  650 optional_sealed: "sealed" .

    $default  reduce using rule 650 (optional_sealed)


State 226

  651 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 309


State 227

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 662 ($@47)

    $@47  go to state 310


State 228

  614 global_variable_declaration_list: global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  620 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 613 ($@38)

    close_block  go to state 311
    $@38         go to state 312


State 229

  550 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 313


State 230

  111 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 314


State 231

  112 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  113                       | metadata_argument_list . semicolon
  551 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 315

    $default  reduce using rule 551 (optional_field_annotation)

    semicolon  go to state 316


State 232

  622 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 317
    "name"  shift, and go to state 318

    let_variable_name_with_pos_list  go to state 319
    let_variable_declaration         go to state 320


State 233

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 234

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 235

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 236

   97 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 321


State 237

  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 108 (annotation_argument)


State 238

  631 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 369


State 239

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 802 ($@87)

    $@87  go to state 370


State 240

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 792 ($@79)

    $@79  go to state 371


State 241

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 797 ($@83)

    $@83  go to state 372


State 242

  191 function_name: "operator" "is" .
  193              | "operator" "is" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 191 (function_name)


State 243

  192 function_name: "operator" "as" .
  194              | "operator" "as" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 192 (function_name)


State 244

  189 function_name: "operator" "delete" .

    $default  reduce using rule 189 (function_name)


State 245

  140 function_name: "operator" "+=" .

    $default  reduce using rule 140 (function_name)


State 246

  141 function_name: "operator" "-=" .

    $default  reduce using rule 141 (function_name)


State 247

  143 function_name: "operator" "/=" .

    $default  reduce using rule 143 (function_name)


State 248

  142 function_name: "operator" "*=" .

    $default  reduce using rule 142 (function_name)


State 249

  144 function_name: "operator" "%=" .

    $default  reduce using rule 144 (function_name)


State 250

  145 function_name: "operator" "&=" .

    $default  reduce using rule 145 (function_name)


State 251

  146 function_name: "operator" "|=" .

    $default  reduce using rule 146 (function_name)


State 252

  147 function_name: "operator" "^=" .

    $default  reduce using rule 147 (function_name)


State 253

  173 function_name: "operator" "<<" .

    $default  reduce using rule 173 (function_name)


State 254

  174 function_name: "operator" ">>" .

    $default  reduce using rule 174 (function_name)


State 255

  171 function_name: "operator" "++" .

    $default  reduce using rule 171 (function_name)


State 256

  172 function_name: "operator" "--" .

    $default  reduce using rule 172 (function_name)


State 257

  164 function_name: "operator" "<=" .

    $default  reduce using rule 164 (function_name)


State 258

  175 function_name: "operator" "<<=" .

    $default  reduce using rule 175 (function_name)


State 259

  176 function_name: "operator" ">>=" .

    $default  reduce using rule 176 (function_name)


State 260

  165 function_name: "operator" ">=" .

    $default  reduce using rule 165 (function_name)


State 261

  162 function_name: "operator" "==" .

    $default  reduce using rule 162 (function_name)


State 262

  163 function_name: "operator" "!=" .

    $default  reduce using rule 163 (function_name)


State 263

  190 function_name: "operator" "??" .

    $default  reduce using rule 190 (function_name)


State 264

  184 function_name: "operator" "?." .
  187              | "operator" "?." . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 184 (function_name)


State 265

  182 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 376


State 266

  188 function_name: "operator" ":=" .

    $default  reduce using rule 188 (function_name)


State 267

  177 function_name: "operator" "<<<" .

    $default  reduce using rule 177 (function_name)


State 268

  178 function_name: "operator" ">>>" .

    $default  reduce using rule 178 (function_name)


State 269

  179 function_name: "operator" "<<<=" .

    $default  reduce using rule 179 (function_name)


State 270

  180 function_name: "operator" ">>>=" .

    $default  reduce using rule 180 (function_name)


State 271

  151 function_name: "operator" "&&" .

    $default  reduce using rule 151 (function_name)


State 272

  152 function_name: "operator" "||" .

    $default  reduce using rule 152 (function_name)


State 273

  153 function_name: "operator" "^^" .

    $default  reduce using rule 153 (function_name)


State 274

  148 function_name: "operator" "&&=" .

    $default  reduce using rule 148 (function_name)


State 275

  149 function_name: "operator" "||=" .

    $default  reduce using rule 149 (function_name)


State 276

  150 function_name: "operator" "^^=" .

    $default  reduce using rule 150 (function_name)


State 277

  161 function_name: "operator" ".." .

    $default  reduce using rule 161 (function_name)


State 278

  195 function_name: "operator" '?' . "as"
  196              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 377


State 279

  167 function_name: "operator" '|' .

    $default  reduce using rule 167 (function_name)


State 280

  168 function_name: "operator" '^' .

    $default  reduce using rule 168 (function_name)


State 281

  166 function_name: "operator" '&' .

    $default  reduce using rule 166 (function_name)


State 282

  159 function_name: "operator" '<' .

    $default  reduce using rule 159 (function_name)


State 283

  160 function_name: "operator" '>' .

    $default  reduce using rule 160 (function_name)


State 284

  155 function_name: "operator" '-' .

    $default  reduce using rule 155 (function_name)


State 285

  154 function_name: "operator" '+' .

    $default  reduce using rule 154 (function_name)


State 286

  156 function_name: "operator" '*' .

    $default  reduce using rule 156 (function_name)


State 287

  157 function_name: "operator" '/' .

    $default  reduce using rule 157 (function_name)


State 288

  158 function_name: "operator" '%' .

    $default  reduce using rule 158 (function_name)


State 289

  139 function_name: "operator" '~' .

    $default  reduce using rule 139 (function_name)


State 290

  138 function_name: "operator" '!' .

    $default  reduce using rule 138 (function_name)


State 291

  183 function_name: "operator" '.' .
  185              | "operator" '.' . "name"
  186              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 378

    $default  reduce using rule 183 (function_name)


State 292

  181 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 379


State 293

  169 function_name: "++" "operator" .

    $default  reduce using rule 169 (function_name)


State 294

  170 function_name: "--" "operator" .

    $default  reduce using rule 170 (function_name)


State 295

  132 optional_function_argument_list: '(' . ')'
  133                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    ')'   shift, and go to state 381
    '@'   shift, and go to state 230

    $default  reduce using rule 549 (optional_field_annotation)

    metadata_argument_list         go to state 231
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 383
    function_argument_list         go to state 384


State 296

  226 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 386


State 297

  233 expression_block: open_block . expressions close_block
  234                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 259 (expressions)

    expressions  go to state 387


State 298

  228 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 228 (function_declaration)


State 299

  696 enum_basic_type_declaration: "int" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 300

  699 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 699 (enum_basic_type_declaration)


State 301

  702 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 702 (enum_basic_type_declaration)


State 302

  703 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 703 (enum_basic_type_declaration)


State 303

  697 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 697 (enum_basic_type_declaration)


State 304

  700 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 305

  698 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 698 (enum_basic_type_declaration)


State 306

  701 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 701 (enum_basic_type_declaration)


State 307

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 388


State 308

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 623 (enum_list)

    enum_list  go to state 389


State 309

  651 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 390

    $default  reduce using rule 647 (optional_structure_parent)

    optional_structure_parent  go to state 391


State 310

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 659 (optional_struct_variable_declaration_list)

    open_block                                 go to state 392
    optional_struct_variable_declaration_list  go to state 393


State 311

  620 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 620 (global_let)


State 312

  614 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 549 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 394


State 313

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  550 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 395


State 314

  111 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 111 (metadata_argument_list)


State 315

  112 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 396


State 316

  113 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 113 (metadata_argument_list)


State 317

  603 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 397


State 318

  602 let_variable_name_with_pos_list: "name" .
  604                                | "name" . "aka" "name"

    "aka"  shift, and go to state 398

    $default  reduce using rule 602 (let_variable_name_with_pos_list)


State 319

  605 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  606                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  607 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  608                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  609                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  610                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  611                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 399
    ':'  shift, and go to state 400
    '&'  shift, and go to state 401

    $default  reduce using rule 600 (optional_ref)

    optional_ref  go to state 402


State 320

  622 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 622 (global_let)


State 321

   97 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 97 (annotation_argument_value_list)


State 322

  730 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 403


State 323

  753 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 404


State 324

  756 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 405


State 325

  731 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 406


State 326

  759 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 407


State 327

  749 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 408


State 328

  669 basic_type_declaration: "bool" .

    $default  reduce using rule 669 (basic_type_declaration)


State 329

  689 basic_type_declaration: "void" .

    $default  reduce using rule 689 (basic_type_declaration)


State 330

  670 basic_type_declaration: "string" .

    $default  reduce using rule 670 (basic_type_declaration)


State 331

  705 auto_type_declaration: "auto" .
  706                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 409

    '('       [reduce using rule 705 (auto_type_declaration)]
    $default  reduce using rule 705 (auto_type_declaration)


State 332

  671 basic_type_declaration: "int" .

    $default  reduce using rule 671 (basic_type_declaration)


State 333

  675 basic_type_declaration: "int2" .

    $default  reduce using rule 675 (basic_type_declaration)


State 334

  676 basic_type_declaration: "int3" .

    $default  reduce using rule 676 (basic_type_declaration)


State 335

  677 basic_type_declaration: "int4" .

    $default  reduce using rule 677 (basic_type_declaration)


State 336

  678 basic_type_declaration: "uint" .

    $default  reduce using rule 678 (basic_type_declaration)


State 337

  695 basic_type_declaration: "bitfield" .
  715 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 410

    $default  reduce using rule 695 (basic_type_declaration)


State 338

  682 basic_type_declaration: "uint2" .

    $default  reduce using rule 682 (basic_type_declaration)


State 339

  683 basic_type_declaration: "uint3" .

    $default  reduce using rule 683 (basic_type_declaration)


State 340

  684 basic_type_declaration: "uint4" .

    $default  reduce using rule 684 (basic_type_declaration)


State 341

  685 basic_type_declaration: "float" .

    $default  reduce using rule 685 (basic_type_declaration)


State 342

  686 basic_type_declaration: "float2" .

    $default  reduce using rule 686 (basic_type_declaration)


State 343

  687 basic_type_declaration: "float3" .

    $default  reduce using rule 687 (basic_type_declaration)


State 344

  688 basic_type_declaration: "float4" .

    $default  reduce using rule 688 (basic_type_declaration)


State 345

  690 basic_type_declaration: "range" .

    $default  reduce using rule 690 (basic_type_declaration)


State 346

  691 basic_type_declaration: "urange" .

    $default  reduce using rule 691 (basic_type_declaration)


State 347

  692 basic_type_declaration: "range64" .

    $default  reduce using rule 692 (basic_type_declaration)


State 348

  693 basic_type_declaration: "urange64" .

    $default  reduce using rule 693 (basic_type_declaration)


State 349

  760 type_declaration_no_options: "block" .
  763                            | "block" . '<' $@61 type_declaration '>' $@62
  766                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 411

    $default  reduce using rule 760 (type_declaration_no_options)


State 350

  674 basic_type_declaration: "int64" .

    $default  reduce using rule 674 (basic_type_declaration)


State 351

  681 basic_type_declaration: "uint64" .

    $default  reduce using rule 681 (basic_type_declaration)


State 352

  694 basic_type_declaration: "double" .

    $default  reduce using rule 694 (basic_type_declaration)


State 353

  767 type_declaration_no_options: "function" .
  770                            | "function" . '<' $@65 type_declaration '>' $@66
  773                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 412

    $default  reduce using rule 767 (type_declaration_no_options)


State 354

  774 type_declaration_no_options: "lambda" .
  777                            | "lambda" . '<' $@69 type_declaration '>' $@70
  780                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 413

    $default  reduce using rule 774 (type_declaration_no_options)


State 355

  672 basic_type_declaration: "int8" .

    $default  reduce using rule 672 (basic_type_declaration)


State 356

  679 basic_type_declaration: "uint8" .

    $default  reduce using rule 679 (basic_type_declaration)


State 357

  673 basic_type_declaration: "int16" .

    $default  reduce using rule 673 (basic_type_declaration)


State 358

  680 basic_type_declaration: "uint16" .

    $default  reduce using rule 680 (basic_type_declaration)


State 359

  783 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 414


State 360

  786 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 415


State 361

  707 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 416


State 362

  732 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  734                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 417


State 363

  704 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 704 (structure_type_declaration)


State 364

  722 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 722 (type_declaration_no_options)


State 365

  725 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 725 (type_declaration_no_options)


State 366

  723 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 723 (type_declaration_no_options)


State 367

  724 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 724 (type_declaration_no_options)


State 368

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  787 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    $default  reduce using rule 787 (type_declaration)

    dim_list  go to state 428


State 369

  631 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 631 (single_alias)


State 370

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 710 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 430


State 371

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 580 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 431


State 372

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 586 (variant_alias_type_list)

    variant_alias_type_list  go to state 432


State 373

  193 function_name: "operator" "is" "name" .

    $default  reduce using rule 193 (function_name)


State 374

  194 function_name: "operator" "as" "name" .

    $default  reduce using rule 194 (function_name)


State 375

  187 function_name: "operator" "?." "name" .

    $default  reduce using rule 187 (function_name)


State 376

  182 function_name: "operator" "?[" ']' .

    $default  reduce using rule 182 (function_name)


State 377

  195 function_name: "operator" '?' "as" .
  196              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 433

    $default  reduce using rule 195 (function_name)


State 378

  185 function_name: "operator" '.' "name" .
  186              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 434

    $default  reduce using rule 185 (function_name)


State 379

  181 function_name: "operator" '[' ']' .

    $default  reduce using rule 181 (function_name)


State 380

  573 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 435


State 381

  132 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 132 (optional_function_argument_list)


State 382

  572 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 436
    "var"  shift, and go to state 437

    $default  reduce using rule 313 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 438


State 383

  574 function_argument_list: function_argument_declaration .

    $default  reduce using rule 574 (function_argument_list)


State 384

  133 optional_function_argument_list: '(' function_argument_list . ')'
  575 function_argument_list: function_argument_list . semicolon function_argument_declaration

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ')'                  shift, and go to state 439

    semicolon  go to state 440


State 385

  135 optional_function_type: ':' . type_declaration
  136                       | ':' . '(' tuple_type_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '('          shift, and go to state 441
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 442


State 386

  226 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 226 (function_declaration_header)


State 387

  233 expression_block: open_block expressions . close_block
  234                 | open_block expressions . close_block "finally" open_block expressions close_block
  260 expressions: expressions . expression_any
  261            | expressions . error

    error                             shift, and go to state 443
    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 446
    "if"                              shift, and go to state 447
    "static_if"                       shift, and go to state 448
    "for"                             shift, and go to state 449
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "return"                          shift, and go to state 456
    "null"                            shift, and go to state 457
    "break"                           shift, and go to state 458
    "try"                             shift, and go to state 459
    "table"                           shift, and go to state 460
    "delete"                          shift, and go to state 461
    "deref"                           shift, and go to state 462
    "with"                            shift, and go to state 463
    "assume"                          shift, and go to state 464
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 467
    "continue"                        shift, and go to state 468
    "pass"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 470
    "label"                           shift, and go to state 471
    "goto"                            shift, and go to state 472
    "unsafe"                          shift, and go to state 473
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "yield"                           shift, and go to state 480
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 503
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder             go to state 516
    expr_reader                go to state 517
    expression_label           go to state 518
    expression_goto            go to state 519
    semicolon                  go to state 520
    if_or_static_if            go to state 521
    expression_if_one_liner    go to state 522
    expression_if_then_else    go to state 523
    expression_for_loop        go to state 524
    expression_unsafe          go to state 525
    expression_while_loop      go to state 526
    expression_with            go to state 527
    expression_with_alias      go to state 528
    close_block                go to state 529
    expr_call_pipe             go to state 530
    expression_any             go to state 531
    expr_keyword               go to state 532
    expression_keyword         go to state 533
    expr_pipe                  go to state 534
    name_in_namespace          go to state 535
    expression_delete          go to state 536
    expr_new                   go to state 537
    expression_break           go to state 538
    expression_continue        go to state 539
    expression_return_no_pipe  go to state 540
    expression_return          go to state 541
    expression_yield_no_pipe   go to state 542
    expression_yield           go to state 543
    expression_try_catch       go to state 544
    kwd_let                    go to state 545
    expression_let             go to state 546
    expr_cast                  go to state 547
    expr_type_decl             go to state 548
    expr_type_info             go to state 549
    block_or_lambda            go to state 550
    expr_full_block            go to state 551
    expr_numeric_const         go to state 552
    expr_assign                go to state 553
    expr_assign_pipe           go to state 554
    expr_named_call            go to state 555
    expr_method_call           go to state 556
    func_addr_expr             go to state 557
    expr_field                 go to state 558
    expr_call                  go to state 559
    expr                       go to state 560
    expr_mtag                  go to state 561
    basic_type_declaration     go to state 562
    make_decl                  go to state 563
    make_struct_decl           go to state 564
    make_tuple_call            go to state 565
    make_dim_decl              go to state 566
    make_table_decl            go to state 567
    array_comprehension        go to state 568


State 388

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 644 ($@44)

    $@44  go to state 569


State 389

  624 enum_list: enum_list . semicolon
  625          | enum_list . "name" semicolon
  626          | enum_list . "name" '=' expr semicolon
  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 570
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 642 ($@43)

    semicolon  go to state 571
    $@43       go to state 572


State 390

  648 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 573


State 391

  651 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 651 (structure_name)


State 392

  660 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 563 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 574


State 393

  663 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 663 (structure_declaration)


State 394

  614 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 317
    "name"  shift, and go to state 318

    let_variable_name_with_pos_list  go to state 319
    let_variable_declaration         go to state 575


State 395

  550 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 576


State 396

  112 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 112 (metadata_argument_list)


State 397

  603 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 581
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 398

  604 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 582


State 399

  605 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  606                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 583


State 400

  607 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  608                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  609                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 584


State 401

  601 optional_ref: '&' .

    $default  reduce using rule 601 (optional_ref)


State 402

  610 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  611                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 585
    ":="  shift, and go to state 586
    '='   shift, and go to state 587

    copy_or_move_or_clone  go to state 588


State 403

  730 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 728 ($@50)

    $@50  go to state 589


State 404

  753 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 751 ($@55)

    $@55  go to state 590


State 405

  756 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 754 ($@57)

    $@57  go to state 591


State 406

  731 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 592
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 407

  759 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 757 ($@59)

    $@59  go to state 593


State 408

  749 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 747 ($@53)

    $@53  go to state 594


State 409

  706 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 595


State 410

  715 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 713 ($@48)

    $@48  go to state 596


State 411

  763 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  766                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 764 ($@63)
    '>'       reduce using rule 764 ($@63)
    '('       reduce using rule 764 ($@63)
    $default  reduce using rule 761 ($@61)

    $@61  go to state 597
    $@63  go to state 598


State 412

  770 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  773                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 771 ($@67)
    '>'       reduce using rule 771 ($@67)
    '('       reduce using rule 771 ($@67)
    $default  reduce using rule 768 ($@65)

    $@65  go to state 599
    $@67  go to state 600


State 413

  777 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  780                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 778 ($@71)
    '>'       reduce using rule 778 ($@71)
    '('       reduce using rule 778 ($@71)
    $default  reduce using rule 775 ($@69)

    $@69  go to state 601
    $@71  go to state 602


State 414

  783 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 781 ($@73)

    $@73  go to state 603


State 415

  786 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 784 ($@75)

    $@75  go to state 604


State 416

  707 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 605
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 417

  732 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  734                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 606
    '('  shift, and go to state 607


State 418

  737 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 737 (type_declaration_no_options)


State 419

  742 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 742 (type_declaration_no_options)


State 420

  736 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 736 (type_declaration_no_options)


State 421

  744 type_declaration_no_options: type_declaration_no_options "==" . "const"
  745                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 608
    '&'      shift, and go to state 609


State 422

  750 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 750 (type_declaration_no_options)


State 423

  746 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 746 (type_declaration_no_options)


State 424

  739 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 739 (type_declaration_no_options)


State 425

  735 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  738                            | type_declaration_no_options '-' . "const"
  740                            | type_declaration_no_options '-' . '&'
  743                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 610
    '&'      shift, and go to state 611
    '['      shift, and go to state 612
    '#'      shift, and go to state 613


State 426

  720 dim_list: '[' . expr ']'
  727 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    ']'                               shift, and go to state 614
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 615
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 427

  741 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 741 (type_declaration_no_options)


State 428

  721 dim_list: dim_list . '[' expr ']'
  726 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 616

    '['       [reduce using rule 726 (type_declaration_no_options)]
    $default  reduce using rule 726 (type_declaration_no_options)


State 429

  788 type_declaration: type_declaration '|' . type_declaration_no_options
  789                 | type_declaration '|' . '#'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362
    '#'          shift, and go to state 617

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 618


State 430

  711 bitfield_alias_bits: bitfield_alias_bits . semicolon
  712                    | bitfield_alias_bits . "name" semicolon
  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 619
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 803 ($@88)

    semicolon  go to state 620
    $@88       go to state 621


State 431

  581 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  582                      | tuple_alias_type_list . tuple_type c_or_s
  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 322
    "array"              shift, and go to state 323
    "table"              shift, and go to state 324
    "typedecl"           shift, and go to state 325
    "iterator"           shift, and go to state 326
    "smart_ptr"          shift, and go to state 327
    "bool"               shift, and go to state 328
    "void"               shift, and go to state 329
    "string"             shift, and go to state 330
    "auto"               shift, and go to state 331
    "int"                shift, and go to state 332
    "int2"               shift, and go to state 333
    "int3"               shift, and go to state 334
    "int4"               shift, and go to state 335
    "uint"               shift, and go to state 336
    "bitfield"           shift, and go to state 337
    "uint2"              shift, and go to state 338
    "uint3"              shift, and go to state 339
    "uint4"              shift, and go to state 340
    "float"              shift, and go to state 341
    "float2"             shift, and go to state 342
    "float3"             shift, and go to state 343
    "float4"             shift, and go to state 344
    "range"              shift, and go to state 345
    "urange"             shift, and go to state 346
    "range64"            shift, and go to state 347
    "urange64"           shift, and go to state 348
    "block"              shift, and go to state 349
    "int64"              shift, and go to state 350
    "uint64"             shift, and go to state 351
    "double"             shift, and go to state 352
    "function"           shift, and go to state 353
    "lambda"             shift, and go to state 354
    "int8"               shift, and go to state 355
    "uint8"              shift, and go to state 356
    "int16"              shift, and go to state 357
    "uint16"             shift, and go to state 358
    "tuple"              shift, and go to state 359
    "variant"            shift, and go to state 360
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 361
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 622
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '$'                  shift, and go to state 362

    $default  reduce using rule 793 ($@80)

    semicolon                    go to state 624
    name_in_namespace            go to state 363
    tuple_type                   go to state 625
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    c_or_s                       go to state 626
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627
    $@80                         go to state 628


State 432

  587 variant_alias_type_list: variant_alias_type_list . c_or_s
  588                        | variant_alias_type_list . variant_type c_or_s
  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 629
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623

    $default  reduce using rule 798 ($@84)

    semicolon     go to state 624
    variant_type  go to state 630
    c_or_s        go to state 631
    $@84          go to state 632


State 433

  196 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 196 (function_name)


State 434

  186 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 186 (function_name)


State 435

  573 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 633
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 436

  311 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 311 (kwd_let_var_or_nothing)


State 437

  312 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 312 (kwd_let_var_or_nothing)


State 438

  572 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_declaration         go to state 636
    variable_name_with_pos_list  go to state 637


State 439

  133 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 133 (optional_function_argument_list)


State 440

  575 function_argument_list: function_argument_list semicolon . function_argument_declaration

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 549 (optional_field_annotation)

    metadata_argument_list         go to state 231
    optional_field_annotation      go to state 382
    function_argument_declaration  go to state 638


State 441

  136 optional_function_type: ':' '(' . tuple_type_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 622
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 639
    tuple_type_list              go to state 640
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627


State 442

  135 optional_function_type: ':' type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 135 (optional_function_type)


State 443

  261 expressions: expressions error .

    $default  reduce using rule 261 (expressions)


State 444

  853 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 641


State 445

  856 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 642


State 446

   86 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 643
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 447

   70 if_or_static_if: "if" .

    $default  reduce using rule 70 (if_or_static_if)


State 448

   71 if_or_static_if: "static_if" .

    $default  reduce using rule 71 (if_or_static_if)


State 449

   84 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 83 ($@5)

    $@5  go to state 644


State 450

  454 expr: "true" .

    $default  reduce using rule 454 (expr)


State 451

  455 expr: "false" .

    $default  reduce using rule 455 (expr)


State 452

  291 expr_new: "new" . new_type_declaration
  292         | "new" . new_type_declaration '(' use_initializer ')'
  293         | "new" . new_type_declaration '(' expr_list ')'
  294         | "new" . new_type_declaration '(' make_struct_single ')'
  295         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  296         | "new" . make_decl

    "struct"               shift, and go to state 444
    "class"                shift, and go to state 445
    "array"                shift, and go to state 455
    "table"                shift, and go to state 460
    "fixed_array"          shift, and go to state 474
    "default"              shift, and go to state 475
    "tuple"                shift, and go to state 477
    "variant"              shift, and go to state 478
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 493
    "[{"                   shift, and go to state 494
    "{{"                   shift, and go to state 495
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 506
    '<'                    shift, and go to state 645
    '['                    shift, and go to state 512

    name_in_namespace           go to state 363
    new_type_declaration        go to state 646
    structure_type_declaration  go to state 647
    make_decl                   go to state 648
    make_struct_decl            go to state 564
    make_tuple_call             go to state 565
    make_dim_decl               go to state 566
    make_table_decl             go to state 567
    array_comprehension         go to state 568


State 453

  342 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  343               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  344               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  345               | "typeinfo" . name_in_namespace '(' expr ')'
  346               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  347               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 649

    name_in_namespace  go to state 650


State 454

  341 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 651


State 455

  879 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  882              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  885              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  886              | "array" . '(' expr_list optional_comma ')'
  889              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 652
    "tuple"    shift, and go to state 653
    "variant"  shift, and go to state 654
    '<'        shift, and go to state 655
    '('        shift, and go to state 656


State 456

  299 expression_return_no_pipe: "return" .
  300                          | "return" . expr_list
  301                          | "return" . "<-" expr_list
  303 expression_return: "return" . expr_pipe
  304                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "<-"                              shift, and go to state 657
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 299 (expression_return_no_pipe)

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 658
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 659
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 661
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 457

  448 expr: "null" .

    $default  reduce using rule 448 (expr)


State 458

  297 expression_break: "break" .

    $default  reduce using rule 297 (expression_break)


State 459

  310 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 662


State 460

  900 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  901                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  902                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 663
    '('  shift, and go to state 664


State 461

  285 expression_delete: "delete" . expr
  286                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "explicit"                        shift, and go to state 665
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 666
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 462

  499 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 667


State 463

   87 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 668
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 464

   89 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 669


State 465

  332 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 670


State 466

  335 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 671


State 467

  500 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 672


State 468

  298 expression_continue: "continue" .

    $default  reduce using rule 298 (expression_continue)


State 469

  258 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 673


State 470

  338 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 674


State 471

   60 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 675


State 472

   61 expression_goto: "goto" . "label" "integer constant"
   62                | "goto" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "label"                           shift, and go to state 676
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 677
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 473

   85 expression_unsafe: "unsafe" . expression_block
  531 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 678

    open_block        go to state 297
    expression_block  go to state 679


State 474

  890 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  893              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 680
    '('  shift, and go to state 681


State 475

  862 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 682


State 476

  695 basic_type_declaration: "bitfield" .

    $default  reduce using rule 695 (basic_type_declaration)


State 477

  868 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  871                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 683
    '('  shift, and go to state 684


State 478

  859 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 685


State 479

  237 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  501 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  502     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 686


State 480

  305 expression_yield_no_pipe: "yield" . expr
  306                         | "yield" . "<-" expr
  308 expression_yield: "yield" . expr_pipe
  309                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "<-"                              shift, and go to state 687
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 688
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 689
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 481

  484 expr: "++" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 690
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 482

  485 expr: "--" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 691
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 483

  280 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 695


State 484

  278 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 696


State 485

  279 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 697


State 486

  533 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 698


State 487

  534 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 699


State 488

  535 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 700


State 489

  536 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 701


State 490

  537 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 702


State 491

  539 expr_mtag: "$c" . '(' expr ')' '(' ')'
  540          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 703


State 492

  538 expr_mtag: "..." .

    $default  reduce using rule 538 (expr_mtag)


State 493

  845 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  846                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  847                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  848                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  875 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  909 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 704
    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 705


State 494

  849 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  850                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  876 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  910 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 706
    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 707


State 495

  899 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  912 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 709
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_map_tuple          go to state 710
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table              go to state 711
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 496

  371 expr_numeric_const: "integer constant" .

    $default  reduce using rule 371 (expr_numeric_const)


State 497

  373 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 373 (expr_numeric_const)


State 498

  372 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 372 (expr_numeric_const)


State 499

  374 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 500

  375 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 501

  376 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 502

  377 expr_numeric_const: "double constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 503

  262 expr_keyword: "keyword" . expr expression_block
  273 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '<'                               shift, and go to state 712
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 713
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 504

  276 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 714


State 505

   37 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 34 (string_builder_body)

    string_builder_body  go to state 715


State 506

  898 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  911 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 516
    expr_reader                   go to state 517
    optional_expr_map_tuple_list  go to state 717
    expression_keyword            go to state 580
    name_in_namespace             go to state 535
    expr_new                      go to state 537
    expr_cast                     go to state 547
    expr_type_decl                go to state 548
    expr_type_info                go to state 549
    block_or_lambda               go to state 550
    expr_full_block               go to state 551
    expr_numeric_const            go to state 552
    expr_named_call               go to state 555
    expr_method_call              go to state 556
    func_addr_expr                go to state 557
    expr_field                    go to state 558
    expr_call                     go to state 559
    expr                          go to state 709
    expr_mtag                     go to state 561
    basic_type_declaration        go to state 562
    make_decl                     go to state 563
    make_struct_decl              go to state 564
    make_map_tuple                go to state 718
    make_tuple_call               go to state 565
    make_dim_decl                 go to state 566
    expr_map_tuple_list           go to state 719
    make_table_decl               go to state 567
    array_comprehension           go to state 568


State 507

  461 expr: '-' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 720
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 508

  460 expr: '+' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 721
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 509

  498 expr: '*' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 722
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 510

  459 expr: '~' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 723
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 511

  458 expr: '!' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 724
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 512

  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 513

  488 expr: '(' . expr_list optional_comma ')'
  489     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 732
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 733
    make_struct_single      go to state 734
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 514

  353 block_or_lambda: '$' .

    $default  reduce using rule 353 (block_or_lambda)


State 515

  354 block_or_lambda: '@' .
  355                | '@' . '@'
  424 func_addr_expr: '@' . '@' func_addr_name
  427               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  430               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  548 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 735

    $default  reduce using rule 354 (block_or_lambda)


State 516

  452 expr: string_builder .

    $default  reduce using rule 452 (expr)


State 517

  451 expr: expr_reader .

    $default  reduce using rule 451 (expr)


State 518

  256 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 736


State 519

  257 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 737


State 520

  238 expression_any: semicolon .

    $default  reduce using rule 238 (expression_any)


State 521

   80 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 738
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 522

   82 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 739


State 523

  254 expression_any: expression_if_then_else .

    $default  reduce using rule 254 (expression_any)


State 524

  249 expression_any: expression_for_loop .

    $default  reduce using rule 249 (expression_any)


State 525

  246 expression_any: expression_unsafe .

    $default  reduce using rule 246 (expression_any)


State 526

  245 expression_any: expression_while_loop .

    $default  reduce using rule 245 (expression_any)


State 527

  247 expression_any: expression_with .

    $default  reduce using rule 247 (expression_any)


State 528

  248 expression_any: expression_with_alias .

    $default  reduce using rule 248 (expression_any)


State 529

  233 expression_block: open_block expressions close_block .
  234                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 740

    $default  reduce using rule 233 (expression_block)


State 530

  281 expr_pipe: expr_call_pipe .

    $default  reduce using rule 281 (expr_pipe)


State 531

  260 expressions: expressions expression_any .

    $default  reduce using rule 260 (expressions)


State 532

  240 expression_any: expr_keyword .

    $default  reduce using rule 240 (expression_any)


State 533

  236 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  532 expr: expression_keyword .

    '$'  shift, and go to state 514
    '@'  shift, and go to state 692

    '$'       [reduce using rule 532 (expr)]
    '@'       [reduce using rule 532 (expr)]
    $default  reduce using rule 532 (expr)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 742


State 534

  239 expression_any: expr_pipe .

    $default  reduce using rule 239 (expression_any)


State 535

  418 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  419                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  441 expr_call: name_in_namespace . '(' ')'
  442          | name_in_namespace . '(' "uninitialized" ')'
  443          | name_in_namespace . '(' make_struct_single ')'
  444          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  445          | name_in_namespace . '(' expr_list ')'
  449 expr: name_in_namespace .
  530     | name_in_namespace . "name"

    "name"  shift, and go to state 743
    '('     shift, and go to state 744

    "name"    [reduce using rule 449 (expr)]
    '('       [reduce using rule 449 (expr)]
    $default  reduce using rule 449 (expr)


State 536

  243 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 745


State 537

  523 expr: expr_new .

    $default  reduce using rule 523 (expr)


State 538

   78 expression_if_one_liner: expression_break .
  250 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 746


State 539

   79 expression_if_one_liner: expression_continue .
  251 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 747


State 540

   76 expression_if_one_liner: expression_return_no_pipe .
  302 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 76 (expression_if_one_liner)

    semicolon  go to state 748


State 541

  252 expression_any: expression_return .

    $default  reduce using rule 252 (expression_any)


State 542

   77 expression_if_one_liner: expression_yield_no_pipe .
  307 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 77 (expression_if_one_liner)

    semicolon  go to state 749


State 543

  253 expression_any: expression_yield .

    $default  reduce using rule 253 (expression_any)


State 544

  255 expression_any: expression_try_catch .

    $default  reduce using rule 255 (expression_any)


State 545

  328 expression_let: kwd_let . optional_in_scope let_variable_declaration
  329               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 750

    $default  reduce using rule 317 (optional_in_scope)

    optional_in_scope  go to state 751


State 546

  244 expression_any: expression_let .

    $default  reduce using rule 244 (expression_any)


State 547

  522 expr: expr_cast .

    $default  reduce using rule 522 (expr)


State 548

  521 expr: expr_type_decl .

    $default  reduce using rule 521 (expr)


State 549

  520 expr: expr_type_info .

    $default  reduce using rule 520 (expr)


State 550

  368 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 752


State 551

  526 expr: expr_full_block .

    $default  reduce using rule 526 (expr)


State 552

  450 expr: expr_numeric_const .

    $default  reduce using rule 450 (expr)


State 553

  242 expression_any: expr_assign . semicolon
  277 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 753
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 754


State 554

  241 expression_any: expr_assign_pipe .

    $default  reduce using rule 241 (expression_any)


State 555

  525 expr: expr_named_call .

    $default  reduce using rule 525 (expr)


State 556

  524 expr: expr_method_call .

    $default  reduce using rule 524 (expr)


State 557

  496 expr: func_addr_expr .

    $default  reduce using rule 496 (expr)


State 558

  456 expr: expr_field .

    $default  reduce using rule 456 (expr)


State 559

  497 expr: expr_call .

    $default  reduce using rule 497 (expr)


State 560

   75 expression_if_one_liner: expr .
  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  401 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  402                 | expr . "<-" expr_assign_pipe_right
  403                 | expr . "&=" expr_assign_pipe_right
  404                 | expr . "|=" expr_assign_pipe_right
  405                 | expr . "^=" expr_assign_pipe_right
  406                 | expr . "&&=" expr_assign_pipe_right
  407                 | expr . "||=" expr_assign_pipe_right
  408                 | expr . "^^=" expr_assign_pipe_right
  409                 | expr . "+=" expr_assign_pipe_right
  410                 | expr . "-=" expr_assign_pipe_right
  411                 | expr . "*=" expr_assign_pipe_right
  412                 | expr . "/=" expr_assign_pipe_right
  413                 | expr . "%=" expr_assign_pipe_right
  414                 | expr . "<<=" expr_assign_pipe_right
  415                 | expr . ">>=" expr_assign_pipe_right
  416                 | expr . "<<<=" expr_assign_pipe_right
  417                 | expr . ">>>=" expr_assign_pipe_right
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "+="    shift, and go to state 757
    "-="    shift, and go to state 758
    "/="    shift, and go to state 759
    "*="    shift, and go to state 760
    "%="    shift, and go to state 761
    "&="    shift, and go to state 762
    "|="    shift, and go to state 763
    "^="    shift, and go to state 764
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    "<<="   shift, and go to state 770
    ">>="   shift, and go to state 771
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "<-"    shift, and go to state 776
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "<<<="  shift, and go to state 785
    ">>>="  shift, and go to state 786
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    "&&="   shift, and go to state 790
    "||="   shift, and go to state 791
    "^^="   shift, and go to state 792
    ".."    shift, and go to state 793
    '='     shift, and go to state 794
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807
    '$'     shift, and go to state 514
    '@'     shift, and go to state 692

    "if"      reduce using rule 75 (expression_if_one_liner)
    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 561

  457 expr: expr_mtag .

    $default  reduce using rule 457 (expr)


State 562

  446 expr_call: basic_type_declaration . '(' ')'
  447          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 809


State 563

  453 expr: make_decl .

    $default  reduce using rule 453 (expr)


State 564

  805 make_decl: make_struct_decl .

    $default  reduce using rule 805 (make_decl)


State 565

  809 make_decl: make_tuple_call .

    $default  reduce using rule 809 (make_decl)


State 566

  806 make_decl: make_dim_decl .

    $default  reduce using rule 806 (make_decl)


State 567

  807 make_decl: make_table_decl .

    $default  reduce using rule 807 (make_decl)


State 568

  808 make_decl: array_comprehension .

    $default  reduce using rule 808 (make_decl)


State 569

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 623 (enum_list)

    enum_list  go to state 810


State 570

  625 enum_list: enum_list "name" . semicolon
  626          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 811

    semicolon  go to state 812


State 571

  624 enum_list: enum_list semicolon .

    $default  reduce using rule 624 (enum_list)


State 572

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 813


State 573

  648 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 648 (optional_structure_parent)


State 574

  564 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  566                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  568                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  570                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  571                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  660 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 814

    "def"     reduce using rule 129 (optional_annotation_list)
    $default  reduce using rule 565 ($@35)

    semicolon                 go to state 815
    optional_annotation_list  go to state 816
    close_block               go to state 817
    $@35                      go to state 818


State 575

  614 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 614 (global_variable_declaration_list)


State 576

  550 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 550 (optional_field_annotation)


State 577

  531 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 678


State 578

  501 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  502     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 819


State 579

  273 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 712


State 580

  532 expr: expression_keyword .

    $default  reduce using rule 532 (expr)


State 581

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  603 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 820


State 582

  604 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 604 (let_variable_name_with_pos_list)


State 583

  605 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  606                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 821

    $default  reduce using rule 605 (let_variable_name_with_pos_list)


State 584

  607 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  608                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  609                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 418
    "implicit"           shift, and go to state 419
    "explicit"           shift, and go to state 420
    "=="                 shift, and go to state 421
    "<-"                 shift, and go to state 585
    "??"                 shift, and go to state 422
    ":="                 shift, and go to state 586
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 587
    '?'                  shift, and go to state 423
    '&'                  shift, and go to state 424
    '-'                  shift, and go to state 425
    '['                  shift, and go to state 426
    '#'                  shift, and go to state 427

    semicolon              go to state 822
    copy_or_move_or_clone  go to state 823
    dim_list               go to state 428


State 585

  598 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 598 (copy_or_move_or_clone)


State 586

  599 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 599 (copy_or_move_or_clone)


State 587

  597 copy_or_move_or_clone: '=' .

    $default  reduce using rule 597 (copy_or_move_or_clone)


State 588

  610 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  611                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 824
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 825
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 589

  730 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 826


State 590

  753 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 827


State 591

  756 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    table_type_pair              go to state 828
    type_declaration_no_options  go to state 368
    type_declaration             go to state 829


State 592

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  731 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 830


State 593

  759 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 831


State 594

  749 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 832


State 595

  706 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 833


State 596

  715 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 834

    bitfield_bits  go to state 835


State 597

  763 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 836


State 598

  766 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 837


State 599

  770 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 838


State 600

  773 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 839


State 601

  777 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 840


State 602

  780 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 841


State 603

  783 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 622
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 639
    tuple_type_list              go to state 842
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627


State 604

  786 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 629

    variant_type       go to state 843
    variant_type_list  go to state 844


State 605

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  707 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 845


State 606

  734 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 733 ($@52)

    $@52  go to state 846


State 607

  732 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 847
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 608

  744 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 744 (type_declaration_no_options)


State 609

  745 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 745 (type_declaration_no_options)


State 610

  738 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 738 (type_declaration_no_options)


State 611

  740 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 740 (type_declaration_no_options)


State 612

  735 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 848


State 613

  743 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 743 (type_declaration_no_options)


State 614

  727 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 727 (type_declaration_no_options)


State 615

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  720 dim_list: '[' expr . ']'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 849


State 616

  721 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 850
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 617

  789 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 789 (type_declaration)


State 618

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  788 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    $default  reduce using rule 788 (type_declaration)

    dim_list  go to state 428


State 619

  712 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 851


State 620

  711 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 711 (bitfield_alias_bits)


State 621

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 852


State 622

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"
  577 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 853

    $default  reduce using rule 282 (name_in_namespace)


State 623

  716 c_or_s: ',' .

    $default  reduce using rule 716 (c_or_s)


State 624

  717 c_or_s: semicolon .

    $default  reduce using rule 717 (c_or_s)


State 625

  582 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623

    semicolon  go to state 624
    c_or_s     go to state 854


State 626

  581 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 581 (tuple_alias_type_list)


State 627

  576 tuple_type: type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 576 (tuple_type)


State 628

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 855


State 629

  583 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 856


State 630

  588 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623

    semicolon  go to state 624
    c_or_s     go to state 857


State 631

  587 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 587 (variant_alias_type_list)


State 632

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 858


State 633

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  573 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 859


State 634

  665 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 860


State 635

  664 variable_name_with_pos_list: "name" .
  666                            | "name" . "aka" "name"

    "aka"  shift, and go to state 861

    $default  reduce using rule 664 (variable_name_with_pos_list)


State 636

  572 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 572 (function_argument_declaration)


State 637

  591 variable_declaration: variable_name_with_pos_list .
  592                     | variable_name_with_pos_list . '&'
  593                     | variable_name_with_pos_list . ':' type_declaration
  594                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  595                     | variable_name_with_pos_list . copy_or_move expr
  596                     | variable_name_with_pos_list . copy_or_move expr_pipe
  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 862
    ','   shift, and go to state 863
    '='   shift, and go to state 864
    ':'   shift, and go to state 865
    '&'   shift, and go to state 866

    $default  reduce using rule 591 (variable_declaration)

    copy_or_move  go to state 867


State 638

  575 function_argument_list: function_argument_list semicolon function_argument_declaration .

    $default  reduce using rule 575 (function_argument_list)


State 639

  578 tuple_type_list: tuple_type .

    $default  reduce using rule 578 (tuple_type_list)


State 640

  136 optional_function_type: ':' '(' tuple_type_list . ')'
  579 tuple_type_list: tuple_type_list . c_or_s tuple_type

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    ')'                  shift, and go to state 868

    semicolon  go to state 624
    c_or_s     go to state 869


State 641

  853 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 851 ($@89)

    $@89  go to state 870


State 642

  856 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 854 ($@91)

    $@91  go to state 871


State 643

   86 expression_while_loop: "while" expr . expression_block
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 755
    "as"                   shift, and go to state 756
    "<<"                   shift, and go to state 765
    ">>"                   shift, and go to state 766
    "++"                   shift, and go to state 767
    "--"                   shift, and go to state 768
    "<="                   shift, and go to state 769
    ">="                   shift, and go to state 772
    "=="                   shift, and go to state 773
    "!="                   shift, and go to state 774
    "->"                   shift, and go to state 775
    "??"                   shift, and go to state 777
    "?."                   shift, and go to state 778
    "?["                   shift, and go to state 779
    "<|"                   shift, and go to state 780
    "|>"                   shift, and go to state 781
    "<<<"                  shift, and go to state 783
    ">>>"                  shift, and go to state 784
    "&&"                   shift, and go to state 787
    "||"                   shift, and go to state 788
    "^^"                   shift, and go to state 789
    ".."                   shift, and go to state 793
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 795
    '|'                    shift, and go to state 796
    '^'                    shift, and go to state 797
    '&'                    shift, and go to state 798
    '<'                    shift, and go to state 799
    '>'                    shift, and go to state 800
    '-'                    shift, and go to state 801
    '+'                    shift, and go to state 802
    '*'                    shift, and go to state 803
    '/'                    shift, and go to state 804
    '%'                    shift, and go to state 805
    '.'                    shift, and go to state 806
    '['                    shift, and go to state 807

    open_block        go to state 297
    expression_block  go to state 872


State 644

   84 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 873


State 645

  289 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 287 ($@12)

    $@12  go to state 874


State 646

  291 expr_new: "new" new_type_declaration .
  292         | "new" new_type_declaration . '(' use_initializer ')'
  293         | "new" new_type_declaration . '(' expr_list ')'
  294         | "new" new_type_declaration . '(' make_struct_single ')'
  295         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 875

    '('       [reduce using rule 291 (expr_new)]
    $default  reduce using rule 291 (expr_new)


State 647

  290 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 290 (new_type_declaration)


State 648

  296 expr_new: "new" make_decl .

    $default  reduce using rule 296 (expr_new)


State 649

  342 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  343               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  344               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 876


State 650

  345 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  346               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  347               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 877
    '('  shift, and go to state 878


State 651

  341 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 339 ($@20)

    $@20  go to state 879


State 652

  879 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 880


State 653

  882 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 881


State 654

  885 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 882


State 655

  889 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 887 ($@105)

    $@105  go to state 883


State 656

  886 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 884
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 657

  301 expression_return_no_pipe: "return" "<-" . expr_list
  304 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 885
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 886
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 661
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 658

  303 expression_return: "return" expr_pipe .

    $default  reduce using rule 303 (expression_return)


State 659

  300 expression_return_no_pipe: "return" expr_list .
  349 expr_list: expr_list . ',' expr

    ','  shift, and go to state 887

    $default  reduce using rule 300 (expression_return_no_pipe)


State 660

  277 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 753


State 661

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_list: expr .
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "+="    shift, and go to state 888
    "-="    shift, and go to state 889
    "/="    shift, and go to state 890
    "*="    shift, and go to state 891
    "%="    shift, and go to state 892
    "&="    shift, and go to state 893
    "|="    shift, and go to state 894
    "^="    shift, and go to state 895
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    "<<="   shift, and go to state 896
    ">>="   shift, and go to state 897
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "<-"    shift, and go to state 898
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "<<<="  shift, and go to state 899
    ">>>="  shift, and go to state 900
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    "&&="   shift, and go to state 901
    "||="   shift, and go to state 902
    "^^="   shift, and go to state 903
    ".."    shift, and go to state 793
    '='     shift, and go to state 904
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807
    '$'     shift, and go to state 514
    '@'     shift, and go to state 692

    " <|"     reduce using rule 378 (expr_assign)
    $default  reduce using rule 348 (expr_list)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 662

  310 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 905


State 663

  901 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  902                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 906


State 664

  900 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 516
    expr_reader                   go to state 517
    optional_expr_map_tuple_list  go to state 907
    expression_keyword            go to state 580
    name_in_namespace             go to state 535
    expr_new                      go to state 537
    expr_cast                     go to state 547
    expr_type_decl                go to state 548
    expr_type_info                go to state 549
    block_or_lambda               go to state 550
    expr_full_block               go to state 551
    expr_numeric_const            go to state 552
    expr_named_call               go to state 555
    expr_method_call              go to state 556
    func_addr_expr                go to state 557
    expr_field                    go to state 558
    expr_call                     go to state 559
    expr                          go to state 709
    expr_mtag                     go to state 561
    basic_type_declaration        go to state 562
    make_decl                     go to state 563
    make_struct_decl              go to state 564
    make_map_tuple                go to state 718
    make_tuple_call               go to state 565
    make_dim_decl                 go to state 566
    expr_map_tuple_list           go to state 719
    make_table_decl               go to state 567
    array_comprehension           go to state 568


State 665

  286 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 908
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 666

  285 expression_delete: "delete" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 285 (expression_delete)


State 667

  499 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 909
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 668

   87 expression_with: "with" expr . expression_block
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 755
    "as"                   shift, and go to state 756
    "<<"                   shift, and go to state 765
    ">>"                   shift, and go to state 766
    "++"                   shift, and go to state 767
    "--"                   shift, and go to state 768
    "<="                   shift, and go to state 769
    ">="                   shift, and go to state 772
    "=="                   shift, and go to state 773
    "!="                   shift, and go to state 774
    "->"                   shift, and go to state 775
    "??"                   shift, and go to state 777
    "?."                   shift, and go to state 778
    "?["                   shift, and go to state 779
    "<|"                   shift, and go to state 780
    "|>"                   shift, and go to state 781
    "<<<"                  shift, and go to state 783
    ">>>"                  shift, and go to state 784
    "&&"                   shift, and go to state 787
    "||"                   shift, and go to state 788
    "^^"                   shift, and go to state 789
    ".."                   shift, and go to state 793
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 795
    '|'                    shift, and go to state 796
    '^'                    shift, and go to state 797
    '&'                    shift, and go to state 798
    '<'                    shift, and go to state 799
    '>'                    shift, and go to state 800
    '-'                    shift, and go to state 801
    '+'                    shift, and go to state 802
    '*'                    shift, and go to state 803
    '/'                    shift, and go to state 804
    '%'                    shift, and go to state 805
    '.'                    shift, and go to state 806
    '['                    shift, and go to state 807

    open_block        go to state 297
    expression_block  go to state 910


State 669

   89 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 911


State 670

  332 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 330 ($@14)

    $@14  go to state 912


State 671

  335 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 333 ($@16)

    $@16  go to state 913


State 672

  500 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 914
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 673

  258 expression_any: "pass" semicolon .

    $default  reduce using rule 258 (expression_any)


State 674

  338 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 336 ($@18)

    $@18  go to state 915


State 675

   60 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 916


State 676

   61 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 917


State 677

   62 expression_goto: "goto" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 62 (expression_goto)


State 678

  531 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 918
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 679

   85 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 85 (expression_unsafe)


State 680

  893 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 891 ($@107)

    $@107  go to state 919


State 681

  890 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 920
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 682

  862 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 860 ($@95)

    $@95  go to state 921


State 683

  871 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 869 ($@97)

    $@97  go to state 922


State 684

  868 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 923
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 685

  859 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 857 ($@93)

    $@93  go to state 924


State 686

  237 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  501 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  502     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 925


State 687

  306 expression_yield_no_pipe: "yield" "<-" . expr
  309 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 926
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 927
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 688

  308 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 308 (expression_yield)


State 689

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  305 expression_yield_no_pipe: "yield" expr .
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "+="    shift, and go to state 888
    "-="    shift, and go to state 889
    "/="    shift, and go to state 890
    "*="    shift, and go to state 891
    "%="    shift, and go to state 892
    "&="    shift, and go to state 893
    "|="    shift, and go to state 894
    "^="    shift, and go to state 895
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    "<<="   shift, and go to state 896
    ">>="   shift, and go to state 897
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "<-"    shift, and go to state 898
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "<<<="  shift, and go to state 899
    ">>>="  shift, and go to state 900
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    "&&="   shift, and go to state 901
    "||="   shift, and go to state 902
    "^^="   shift, and go to state 903
    ".."    shift, and go to state 793
    '='     shift, and go to state 904
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807
    '$'     shift, and go to state 514
    '@'     shift, and go to state 692

    " <|"     reduce using rule 378 (expr_assign)
    $default  reduce using rule 305 (expression_yield_no_pipe)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 690

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  484     | "++" expr .
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 484 (expr)


State 691

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  485     | "--" expr .
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 485 (expr)


State 692

  354 block_or_lambda: '@' .
  355                | '@' . '@'

    '@'  shift, and go to state 928

    $default  reduce using rule 354 (block_or_lambda)


State 693

  366 expr_block: expression_block .

    $default  reduce using rule 366 (expr_block)


State 694

  367 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 929


State 695

  280 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 280 (expr_pipe)


State 696

  278 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 278 (expr_pipe)


State 697

  279 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 279 (expr_pipe)


State 698

  533 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 930
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 699

  534 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 931
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 700

  535 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 932
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 701

  536 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 933
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 702

  537 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 934
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 703

  539 expr_mtag: "$c" '(' . expr ')' '(' ')'
  540          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 935
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 704

  909 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 936


State 705

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  845 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  846                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  847                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  848                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  875 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "const"                           shift, and go to state 418
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "where"                           shift, and go to state 937
    "reinterpret"                     shift, and go to state 470
    "implicit"                        shift, and go to state 419
    "explicit"                        shift, and go to state 420
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "=="                              shift, and go to state 421
    "??"                              shift, and go to state 422
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '?'                               shift, and go to state 423
    '&'                               shift, and go to state 424
    '-'                               shift, and go to state 938
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 939
    '('                               shift, and go to state 940
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515
    '#'                               shift, and go to state 427

    $default  reduce using rule 829 (optional_block)

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 941
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    dim_list                go to state 428
    make_decl               go to state 563
    make_struct_fields      go to state 942
    make_struct_dim         go to state 943
    optional_block          go to state 944
    make_struct_decl        go to state 564
    make_tuple              go to state 945
    make_tuple_call         go to state 565
    make_dim                go to state 946
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 706

  910 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 947


State 707

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  849 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  850                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  876 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "const"                           shift, and go to state 418
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "implicit"                        shift, and go to state 419
    "explicit"                        shift, and go to state 420
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "=="                              shift, and go to state 421
    "??"                              shift, and go to state 422
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '?'                               shift, and go to state 423
    '&'                               shift, and go to state 424
    '-'                               shift, and go to state 938
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 939
    '('                               shift, and go to state 948
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515
    '#'                               shift, and go to state 427

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 941
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    dim_list                go to state 428
    make_decl               go to state 563
    make_struct_fields      go to state 942
    make_struct_dim         go to state 949
    make_struct_decl        go to state 564
    make_tuple              go to state 945
    make_tuple_call         go to state 565
    make_dim                go to state 950
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 708

  912 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 951


State 709

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  866 make_map_tuple: expr . "=>" expr
  867               | expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "=>"   shift, and go to state 952
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 867 (make_map_tuple)


State 710

  894 make_table: make_map_tuple .

    $default  reduce using rule 894 (make_table)


State 711

  895 make_table: make_table . "end of expression" make_map_tuple
  899 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 953
    "end of expression"  shift, and go to state 954
    ";}}"                shift, and go to state 955

    optional_trailing_semicolon_cur_cur  go to state 956


State 712

  273 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 271 ($@8)

    $@8  go to state 957


State 713

  262 expr_keyword: "keyword" expr . expression_block
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 755
    "as"                   shift, and go to state 756
    "<<"                   shift, and go to state 765
    ">>"                   shift, and go to state 766
    "++"                   shift, and go to state 767
    "--"                   shift, and go to state 768
    "<="                   shift, and go to state 769
    ">="                   shift, and go to state 772
    "=="                   shift, and go to state 773
    "!="                   shift, and go to state 774
    "->"                   shift, and go to state 775
    "??"                   shift, and go to state 777
    "?."                   shift, and go to state 778
    "?["                   shift, and go to state 779
    "<|"                   shift, and go to state 780
    "|>"                   shift, and go to state 781
    "<<<"                  shift, and go to state 783
    ">>>"                  shift, and go to state 784
    "&&"                   shift, and go to state 787
    "||"                   shift, and go to state 788
    "^^"                   shift, and go to state 789
    ".."                   shift, and go to state 793
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 795
    '|'                    shift, and go to state 796
    '^'                    shift, and go to state 797
    '&'                    shift, and go to state 798
    '<'                    shift, and go to state 799
    '>'                    shift, and go to state 800
    '-'                    shift, and go to state 801
    '+'                    shift, and go to state 802
    '*'                    shift, and go to state 803
    '/'                    shift, and go to state 804
    '%'                    shift, and go to state 805
    '.'                    shift, and go to state 806
    '['                    shift, and go to state 807

    open_block        go to state 297
    expression_block  go to state 958


State 714

  276 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 274 ($@10)

    $@10  go to state 959


State 715

   35 string_builder_body: string_builder_body . character_sequence
   36                    | string_builder_body . "{" expr optional_format_string "}"
   37 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 960
    "{"                   shift, and go to state 961

    character_sequence  go to state 962


State 716

  911 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 963


State 717

  898 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 964


State 718

  896 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 896 (expr_map_tuple_list)


State 719

  268 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  897 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 965

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 966


State 720

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  461 expr: '-' expr .
  462     | expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 461 (expr)


State 721

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  460 expr: '+' expr .
  462     | expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 460 (expr)


State 722

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  498     | '*' expr .
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 498 (expr)


State 723

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  459 expr: '~' expr .
  462     | expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 459 (expr)


State 724

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  458 expr: '!' expr .
  462     | expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 458 (expr)


State 725

  907 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 967


State 726

  908 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 968


State 727

  874 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 969


State 728

  264 optional_expr_list: expr_list . optional_comma
  349 expr_list: expr_list . ',' expr

    ','  shift, and go to state 970

    ','       [reduce using rule 905 (optional_comma)]
    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 971


State 729

  348 expr_list: expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 348 (expr_list)


State 730

  814 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  815                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 972


State 731

  282 name_in_namespace: "name" .
  283                  | "name" . "::" "name"
  810 make_struct_fields: "name" . copy_or_move expr
  811                   | "name" . ":=" expr

    "<-"  shift, and go to state 862
    ":="  shift, and go to state 973
    "::"  shift, and go to state 104
    '='   shift, and go to state 864

    $default  reduce using rule 282 (name_in_namespace)

    copy_or_move  go to state 974


State 732

  349 expr_list: expr_list . ',' expr
  488 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 970

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 975


State 733

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  820 make_struct_single: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 820 (make_struct_single)


State 734

  489 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 977


State 735

  355 block_or_lambda: '@' '@' .
  424 func_addr_expr: '@' '@' . func_addr_name
  427               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  430               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  548 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 978
    "$c"    shift, and go to state 979
    "name"  shift, and go to state 63
    '<'     shift, and go to state 980

    $default  reduce using rule 355 (block_or_lambda)

    name_in_namespace  go to state 981
    func_addr_name     go to state 982


State 736

  256 expression_any: expression_label semicolon .

    $default  reduce using rule 256 (expression_any)


State 737

  257 expression_any: expression_goto semicolon .

    $default  reduce using rule 257 (expression_any)


State 738

   80 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 755
    "as"                   shift, and go to state 756
    "<<"                   shift, and go to state 765
    ">>"                   shift, and go to state 766
    "++"                   shift, and go to state 767
    "--"                   shift, and go to state 768
    "<="                   shift, and go to state 769
    ">="                   shift, and go to state 772
    "=="                   shift, and go to state 773
    "!="                   shift, and go to state 774
    "->"                   shift, and go to state 775
    "??"                   shift, and go to state 777
    "?."                   shift, and go to state 778
    "?["                   shift, and go to state 779
    "<|"                   shift, and go to state 780
    "|>"                   shift, and go to state 781
    "<<<"                  shift, and go to state 783
    ">>>"                  shift, and go to state 784
    "&&"                   shift, and go to state 787
    "||"                   shift, and go to state 788
    "^^"                   shift, and go to state 789
    ".."                   shift, and go to state 793
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 795
    '|'                    shift, and go to state 796
    '^'                    shift, and go to state 797
    '&'                    shift, and go to state 798
    '<'                    shift, and go to state 799
    '>'                    shift, and go to state 800
    '-'                    shift, and go to state 801
    '+'                    shift, and go to state 802
    '*'                    shift, and go to state 803
    '/'                    shift, and go to state 804
    '%'                    shift, and go to state 805
    '.'                    shift, and go to state 806
    '['                    shift, and go to state 807

    open_block        go to state 297
    expression_block  go to state 983


State 739

   82 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 81 ($@4)

    $@4  go to state 984


State 740

  234 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 985


State 741

  370 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 369 ($@22)

    $@22  go to state 986


State 742

  236 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 236 (expr_call_pipe)


State 743

  530 expr: name_in_namespace "name" .

    $default  reduce using rule 530 (expr)


State 744

  418 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  419                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  441 expr_call: name_in_namespace '(' . ')'
  442          | name_in_namespace '(' . "uninitialized" ')'
  443          | name_in_namespace '(' . make_struct_single ')'
  444          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  445          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "uninitialized"                   shift, and go to state 987
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 988
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 989
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 990
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 733
    make_struct_single      go to state 991
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 745

  243 expression_any: expression_delete semicolon .

    $default  reduce using rule 243 (expression_any)


State 746

  250 expression_any: expression_break semicolon .

    $default  reduce using rule 250 (expression_any)


State 747

  251 expression_any: expression_continue semicolon .

    $default  reduce using rule 251 (expression_any)


State 748

  302 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 302 (expression_return)


State 749

  307 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 307 (expression_yield)


State 750

  316 optional_in_scope: "inscope" .

    $default  reduce using rule 316 (optional_in_scope)


State 751

  328 expression_let: kwd_let optional_in_scope . let_variable_declaration
  329               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 317
    "[["    shift, and go to state 992
    "name"  shift, and go to state 318
    '('     shift, and go to state 993

    tuple_expansion_variable_declaration  go to state 994
    let_variable_name_with_pos_list       go to state 319
    let_variable_declaration              go to state 995


State 752

  368 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 996
    "[["       shift, and go to state 997

    $default  reduce using rule 363 (optional_capture_list)

    optional_capture_list  go to state 998


State 753

  277 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 999


State 754

  242 expression_any: expr_assign semicolon .

    $default  reduce using rule 242 (expression_any)


State 755

  507 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr "is" . basic_type_declaration
  509     | expr "is" . "name"
  547 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1000
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 476
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1001
    "name"      shift, and go to state 1002

    basic_type_declaration  go to state 1003


State 756

  510 expr: expr "as" . "name"
  513     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  514     | expr "as" . basic_type_declaration
  545 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1004
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 476
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1005
    "name"      shift, and go to state 1006

    basic_type_declaration  go to state 1007


State 757

  388 expr_assign: expr "+=" . expr
  409 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1013
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 758

  389 expr_assign: expr "-=" . expr
  410 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1015
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 759

  391 expr_assign: expr "/=" . expr
  412 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1017
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 760

  390 expr_assign: expr "*=" . expr
  411 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1019
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 761

  392 expr_assign: expr "%=" . expr
  413 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1020
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1021
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 762

  382 expr_assign: expr "&=" . expr
  403 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1022
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1023
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 763

  383 expr_assign: expr "|=" . expr
  404 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1024
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1025
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 764

  384 expr_assign: expr "^=" . expr
  405 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1026
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1027
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 765

  462 expr: expr "<<" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1028
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 766

  463 expr: expr ">>" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1029
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 767

  486 expr: expr "++" .

    $default  reduce using rule 486 (expr)


State 768

  487 expr: expr "--" .

    $default  reduce using rule 487 (expr)


State 769

  475 expr: expr "<=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1030
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 770

  393 expr_assign: expr "<<=" . expr
  414 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1031
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1032
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 771

  394 expr_assign: expr ">>=" . expr
  415 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1034
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 772

  476 expr: expr ">=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1035
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 773

  473 expr: expr "==" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1036
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 774

  474 expr: expr "!=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1037
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 775

  420 expr_method_call: expr "->" . "name" '(' ')'
  421                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1038


State 776

  380 expr_assign: expr "<-" . expr
  402 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1040
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 777

  503 expr: expr "??" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1041
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 778

  494 expr: expr "?." . "name"
  542 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1042
    "name"  shift, and go to state 1043


State 779

  492 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1044
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 780

  527 expr: expr "<|" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1045
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 781

  528 expr: expr "|>" . expr
  529     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1046
    expr_mtag               go to state 561
    basic_type_declaration  go to state 1047
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 782

  381 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1048
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 783

  464 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1049
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 784

  465 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1050
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 785

  395 expr_assign: expr "<<<=" . expr
  416 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1051
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1052
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 786

  396 expr_assign: expr ">>>=" . expr
  417 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1053
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1054
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 787

  480 expr: expr "&&" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1055
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 788

  481 expr: expr "||" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1056
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 789

  482 expr: expr "^^" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1057
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 790

  385 expr_assign: expr "&&=" . expr
  406 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1058
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1059
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 791

  386 expr_assign: expr "||=" . expr
  407 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1060
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1061
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 792

  387 expr_assign: expr "^^=" . expr
  408 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1062
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1063
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 793

  483 expr: expr ".." . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1064
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 794

  379 expr_assign: expr '=' . expr
  401 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 1008
    "@ <|"                            shift, and go to state 1009
    "@@ <|"                           shift, and go to state 1010
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 1011
    expression_keyword      go to state 533
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign_pipe_right  go to state 1065
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1066
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 795

  504 expr: expr '?' . expr ':' expr
  515     | expr '?' . "as" "name"
  518     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr '?' . "as" basic_type_declaration
  546 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "as"                              shift, and go to state 1067
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1068
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 796

  478 expr: expr '|' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1069
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 797

  479 expr: expr '^' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1070
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 798

  477 expr: expr '&' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1071
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 799

  471 expr: expr '<' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1072
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 800

  472 expr: expr '>' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1073
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 801

  467 expr: expr '-' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1074
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 802

  466 expr: expr '+' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1075
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 803

  468 expr: expr '*' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1076
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 804

  469 expr: expr '/' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1077
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 805

  470 expr: expr '%' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1078
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 806

  431 expr_field: expr '.' . "name"
  432           | expr '.' . '.' "name"
  433           | expr '.' . "name" '(' ')'
  434           | expr '.' . "name" '(' expr_list ')'
  435           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  436           | expr '.' . basic_type_declaration '(' ')'
  437           | expr '.' . basic_type_declaration '(' expr_list ')'
  440           | expr '.' . $@27 error $@28
  491 expr: expr '.' . '[' expr ']'
  493     | expr '.' . "?[" expr ']'
  495     | expr '.' . "?." "name"
  541 expr_mtag: expr '.' . "$f" '(' expr ')'
  543          | expr '.' . '.' "$f" '(' expr ')'
  544          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 476
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "?."        shift, and go to state 1079
    "?["        shift, and go to state 1080
    "$f"        shift, and go to state 1081
    "name"      shift, and go to state 1082
    '.'         shift, and go to state 1083
    '['         shift, and go to state 1084

    $default  reduce using rule 438 ($@27)

    $@27                    go to state 1085
    basic_type_declaration  go to state 1086


State 807

  490 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1087
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 808

  235 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 235 (expr_call_pipe)


State 809

  446 expr_call: basic_type_declaration '(' . ')'
  447          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1088
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1089
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 810

  624 enum_list: enum_list . semicolon
  625          | enum_list . "name" semicolon
  626          | enum_list . "name" '=' expr semicolon
  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 570
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 645 ($@45)

    semicolon  go to state 571
    $@45       go to state 1090


State 811

  626 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1091
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 812

  625 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 625 (enum_list)


State 813

  643 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 643 (enum_declaration)


State 814

  130 optional_annotation_list: '[' . annotation_list ']'
  571 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1092
    name_in_namespace             go to state 75


State 815

  564 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 564 (struct_variable_declaration_list)


State 816

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  570                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1093


State 817

  660 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 660 (optional_struct_variable_declaration_list)


State 818

  566 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 549 (optional_field_annotation)

    metadata_argument_list          go to state 231
    optional_field_annotation       go to state 1094
    structure_variable_declaration  go to state 1095


State 819

  501 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  502     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1096


State 820

  603 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 603 (let_variable_name_with_pos_list)


State 821

  606 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1097


State 822

  607 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 607 (let_variable_declaration)


State 823

  608 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  609                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1098
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1099
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 824

  611 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 611 (let_variable_declaration)


State 825

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  610 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1100
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 826

  730 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1101


State 827

  753 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1102


State 828

  756 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1103


State 829

  718 table_type_pair: type_declaration .
  719                | type_declaration . c_or_s type_declaration
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '|'                  shift, and go to state 429

    $default  reduce using rule 718 (table_type_pair)

    semicolon  go to state 624
    c_or_s     go to state 1104


State 830

  731 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 731 (type_declaration_no_options)


State 831

  759 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1105


State 832

  749 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1106


State 833

  706 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 706 (auto_type_declaration)


State 834

  708 bitfield_bits: "name" .

    $default  reduce using rule 708 (bitfield_bits)


State 835

  709 bitfield_bits: bitfield_bits . semicolon "name"
  715 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1107

    semicolon  go to state 1108


State 836

  763 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1109


State 837

  766 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1110


State 838

  770 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1111


State 839

  773 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1112


State 840

  777 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1113


State 841

  780 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1114


State 842

  579 tuple_type_list: tuple_type_list . c_or_s tuple_type
  783 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1115

    semicolon  go to state 624
    c_or_s     go to state 869


State 843

  584 variant_type_list: variant_type .

    $default  reduce using rule 584 (variant_type_list)


State 844

  585 variant_type_list: variant_type_list . c_or_s variant_type
  786 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1116

    semicolon  go to state 624
    c_or_s     go to state 1117


State 845

  707 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 707 (auto_type_declaration)


State 846

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1118
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1119


State 847

  732 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1120


State 848

  735 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 735 (type_declaration_no_options)


State 849

  720 dim_list: '[' expr ']' .

    $default  reduce using rule 720 (dim_list)


State 850

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  721 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 1121


State 851

  712 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 712 (bitfield_alias_bits)


State 852

  804 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 804 (bitfield_alias_declaration)


State 853

  577 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1122


State 854

  582 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 582 (tuple_alias_type_list)


State 855

  794 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 794 (tuple_alias_declaration)


State 856

  583 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1123


State 857

  588 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 588 (variant_alias_type_list)


State 858

  799 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 799 (variant_alias_declaration)


State 859

  573 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 573 (function_argument_declaration)


State 860

  665 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1124
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 861

  666 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1125


State 862

  590 copy_or_move: "<-" .

    $default  reduce using rule 590 (copy_or_move)


State 863

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  668                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1126


State 864

  589 copy_or_move: '=' .

    $default  reduce using rule 589 (copy_or_move)


State 865

  593 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  594                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1127


State 866

  592 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 592 (variable_declaration)


State 867

  595 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  596                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1128
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1129
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 868

  136 optional_function_type: ':' '(' tuple_type_list ')' .

    $default  reduce using rule 136 (optional_function_type)


State 869

  579 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 622
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 1130
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627


State 870

  853 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1131


State 871

  856 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1132


State 872

   86 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 86 (expression_while_loop)


State 873

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1133
    ','   shift, and go to state 863


State 874

  289 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1134


State 875

  292 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  293         | "new" new_type_declaration '(' . expr_list ')'
  294         | "new" new_type_declaration '(' . make_struct_single ')'
  295         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "uninitialized"                   shift, and go to state 1135
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 843 (use_initializer)

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1136
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 733
    make_struct_single      go to state 1137
    use_initializer         go to state 1138
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 876

  342 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  343               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  344               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '<'                               shift, and go to state 1139
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1140
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 877

  346 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  347               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1141


State 878

  345 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1142
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 879

  341 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1143


State 880

  879 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 877 ($@99)

    $@99  go to state 1144


State 881

  882 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 880 ($@101)

    $@101  go to state 1145


State 882

  885 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 883 ($@103)

    $@103  go to state 1146


State 883

  889 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1147


State 884

  349 expr_list: expr_list . ',' expr
  886 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 970

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1148


State 885

  304 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 304 (expression_return)


State 886

  301 expression_return_no_pipe: "return" "<-" expr_list .
  349 expr_list: expr_list . ',' expr

    ','  shift, and go to state 887

    $default  reduce using rule 301 (expression_return_no_pipe)


State 887

  349 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1149
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 888

  388 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1150
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 889

  389 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1151
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 890

  391 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1152
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 891

  390 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1153
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 892

  392 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1154
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 893

  382 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1155
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 894

  383 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1156
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 895

  384 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1157
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 896

  393 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1158
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 897

  394 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1159
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 898

  380 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1160
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 899

  395 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1161
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 900

  396 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1162
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 901

  385 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1163
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 902

  386 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1164
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 903

  387 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1165
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 904

  379 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1166
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 905

  310 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1167


State 906

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  901 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  902                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 418
    "implicit"           shift, and go to state 419
    "explicit"           shift, and go to state 420
    "=="                 shift, and go to state 421
    "??"                 shift, and go to state 422
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '?'                  shift, and go to state 423
    '&'                  shift, and go to state 424
    '>'                  shift, and go to state 1168
    '-'                  shift, and go to state 425
    '['                  shift, and go to state 426
    '#'                  shift, and go to state 427

    semicolon  go to state 624
    c_or_s     go to state 1169
    dim_list   go to state 428


State 907

  900 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1170


State 908

  286 expression_delete: "delete" "explicit" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 286 (expression_delete)


State 909

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  499     | "deref" '(' expr . ')'
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1171


State 910

   87 expression_with: "with" expr expression_block .

    $default  reduce using rule 87 (expression_with)


State 911

   89 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 88 ($@6)

    $@6  go to state 1172


State 912

  332 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1173


State 913

  335 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1174


State 914

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  500     | "addr" '(' expr . ')'
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1175


State 915

  338 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1176


State 916

   60 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 60 (expression_label)


State 917

   61 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 61 (expression_goto)


State 918

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  531     | "unsafe" '(' expr . ')'
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1177


State 919

  893 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1178


State 920

  349 expr_list: expr_list . ',' expr
  890 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 970

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1179


State 921

  862 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1180


State 922

  871 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 622
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 639
    tuple_type_list              go to state 1181
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627


State 923

  349 expr_list: expr_list . ',' expr
  868 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 970

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1182


State 924

  859 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 629

    variant_type       go to state 843
    variant_type_list  go to state 1183


State 925

  237 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  501 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  502     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1184
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 926

  309 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 309 (expression_yield)


State 927

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  306 expression_yield_no_pipe: "yield" "<-" expr .
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "+="    shift, and go to state 888
    "-="    shift, and go to state 889
    "/="    shift, and go to state 890
    "*="    shift, and go to state 891
    "%="    shift, and go to state 892
    "&="    shift, and go to state 893
    "|="    shift, and go to state 894
    "^="    shift, and go to state 895
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    "<<="   shift, and go to state 896
    ">>="   shift, and go to state 897
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "<-"    shift, and go to state 898
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "<<<="  shift, and go to state 899
    ">>>="  shift, and go to state 900
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    "&&="   shift, and go to state 901
    "||="   shift, and go to state 902
    "^^="   shift, and go to state 903
    ".."    shift, and go to state 793
    '='     shift, and go to state 904
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807
    '$'     shift, and go to state 514
    '@'     shift, and go to state 692

    " <|"     reduce using rule 378 (expr_assign)
    $default  reduce using rule 306 (expression_yield_no_pipe)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 928

  355 block_or_lambda: '@' '@' .

    $default  reduce using rule 355 (block_or_lambda)


State 929

  367 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 996
    "[["       shift, and go to state 997

    $default  reduce using rule 363 (optional_capture_list)

    optional_capture_list  go to state 1185


State 930

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  533 expr_mtag: "$$" '(' expr . ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1186


State 931

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  534 expr_mtag: "$i" '(' expr . ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1187


State 932

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  535 expr_mtag: "$v" '(' expr . ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1188


State 933

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  536 expr_mtag: "$b" '(' expr . ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1189


State 934

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  537 expr_mtag: "$a" '(' expr . ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1190


State 935

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  539 expr_mtag: "$c" '(' expr . ')' '(' ')'
  540          | "$c" '(' expr . ')' '(' expr_list ')'
  541          | expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1191


State 936

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  909 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1192
    ','   shift, and go to state 863


State 937

  830 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 1193


State 938

  461 expr: '-' . expr
  735 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  738                            | type_declaration_no_options '-' . "const"
  740                            | type_declaration_no_options '-' . '&'
  743                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "const"                           shift, and go to state 610
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '&'                               shift, and go to state 611
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 1194
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515
    '#'                               shift, and go to state 613

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 720
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 939

  720 dim_list: '[' . expr ']'
  727 type_declaration_no_options: type_declaration_no_options '[' . ']'
  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    ']'                               shift, and go to state 614
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    ']'  [reduce using rule 263 (optional_expr_list)]

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1195
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 940

  488 expr: '(' . expr_list optional_comma ')'
  489     | '(' . make_struct_single ')'
  847 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  848                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1196
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 732
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 733
    make_struct_single      go to state 734
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 941

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  863 make_tuple: expr .
  864           | expr . "=>" expr

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "=>"   shift, and go to state 1197
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 863 (make_tuple)


State 942

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  821 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 821 (make_struct_dim)


State 943

  822 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  845 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 937
    "end of expression"  shift, and go to state 1198

    $default  reduce using rule 829 (optional_block)

    optional_block  go to state 1199


State 944

  846 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1200
    ",]]"  shift, and go to state 1201
    ']'    shift, and go to state 1202

    optional_trailing_delim_sqr_sqr  go to state 1203


State 945

  865 make_tuple: make_tuple . ',' expr
  872 make_dim: make_tuple .

    ','  shift, and go to state 1204

    $default  reduce using rule 872 (make_dim)


State 946

  873 make_dim: make_dim . "end of expression" make_tuple
  875 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1205
    ";]]"                shift, and go to state 1206
    ']'                  shift, and go to state 1207

    optional_trailing_semicolon_sqr_sqr  go to state 1208


State 947

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  910 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1209
    ','   shift, and go to state 863


State 948

  488 expr: '(' . expr_list optional_comma ')'
  489     | '(' . make_struct_single ')'
  850 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1210
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 732
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 733
    make_struct_single      go to state 734
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 949

  822 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  849 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 937
    "end of expression"  shift, and go to state 1198

    $default  reduce using rule 829 (optional_block)

    optional_block  go to state 1211


State 950

  873 make_dim: make_dim . "end of expression" make_tuple
  876 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1212
    "end of expression"  shift, and go to state 1205
    ";}]"                shift, and go to state 1213

    optional_trailing_semicolon_cur_sqr  go to state 1214


State 951

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  912 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1215
    ','   shift, and go to state 863


State 952

  866 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1216
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 953

  831 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1217


State 954

  895 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 709
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_map_tuple          go to state 1218
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 955

  832 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 832 (optional_trailing_semicolon_cur_cur)


State 956

  899 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 899 (make_table_decl)


State 957

  273 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1219
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1119


State 958

  262 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 262 (expr_keyword)


State 959

  276 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1220
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1119


State 960

   37 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 37 (string_builder)


State 961

   36 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1221
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 962

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   35 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234

    $default  reduce using rule 35 (string_builder_body)


State 963

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1222
    ','   shift, and go to state 863


State 964

  898 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 898 (make_table_decl)


State 965

  897 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  906 optional_comma: ',' .

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 906 (optional_comma)

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 709
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_map_tuple          go to state 1223
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 966

  268 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 268 (optional_expr_map_tuple_list)


State 967

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  907 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1224
    ','   shift, and go to state 863


State 968

  908 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_name_with_pos_list  go to state 1225


State 969

  874 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 874 (make_dim_decl)


State 970

  349 expr_list: expr_list ',' . expr
  906 optional_comma: ',' .

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 906 (optional_comma)

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1149
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 971

  264 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 264 (optional_expr_list)


State 972

  814 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  815                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1226
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 973

  811 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1227
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 974

  810 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1228
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 975

  488 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1229


State 976

  812 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  813                   | make_struct_fields ',' . "name" ":=" expr
  816                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1230
    "name"  shift, and go to state 1231


State 977

  489 expr: '(' make_struct_single ')' .

    $default  reduce using rule 489 (expr)


State 978

  423 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1232


State 979

  548 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1233


State 980

  427 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  430               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 428 ($@25)
    '>'       reduce using rule 428 ($@25)
    '('       reduce using rule 428 ($@25)
    $default  reduce using rule 425 ($@23)

    $@23  go to state 1234
    $@25  go to state 1235


State 981

  422 func_addr_name: name_in_namespace .

    $default  reduce using rule 422 (func_addr_name)


State 982

  424 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 424 (func_addr_expr)


State 983

   80 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1236
    "elif"         shift, and go to state 1237
    "static_elif"  shift, and go to state 1238

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1239
    expression_else      go to state 1240


State 984

   82 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1241
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 985

  234 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 259 (expressions)

    expressions  go to state 1242


State 986

  370 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 1243


State 987

  442 expr_call: name_in_namespace '(' "uninitialized" . ')'
  444          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    ')'     shift, and go to state 1245

    make_struct_fields  go to state 733
    make_struct_single  go to state 1246


State 988

  418 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 1247
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 989

  441 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 441 (expr_call)


State 990

  349 expr_list: expr_list . ',' expr
  419 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  445 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1248
    ')'  shift, and go to state 1249


State 991

  443 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1250


State 992

  320 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  324                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  325                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1251

    tuple_expansion  go to state 1252


State 993

  322 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  323                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  326                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  327                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1251

    tuple_expansion  go to state 1253


State 994

  329 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 329 (expression_let)


State 995

  328 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 328 (expression_let)


State 996

  365 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1254


State 997

  364 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1255
    ":="    shift, and go to state 1256
    "name"  shift, and go to state 1257
    '='     shift, and go to state 1258
    '&'     shift, and go to state 1259

    capture_entry  go to state 1260
    capture_list   go to state 1261


State 998

  368 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1262


State 999

  277 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 277 (expr_pipe)


State 1000

  507 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1263


State 1001

  547 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1264


State 1002

  509 expr: expr "is" "name" .

    $default  reduce using rule 509 (expr)


State 1003

  508 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 508 (expr)


State 1004

  513 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1265


State 1005

  545 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1266


State 1006

  510 expr: expr "as" "name" .

    $default  reduce using rule 510 (expr)


State 1007

  514 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 514 (expr)


State 1008

  399 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 1267


State 1009

  397 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 1268


State 1010

  398 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 514
    '@'                    shift, and go to state 692

    open_block        go to state 297
    expression_block  go to state 693
    block_or_lambda   go to state 694
    expr_block        go to state 1269


State 1011

  400 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 400 (expr_assign_pipe_right)


State 1012

  409 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 409 (expr_assign_pipe)


State 1013

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr "+=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 388 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1014

  410 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 410 (expr_assign_pipe)


State 1015

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  389 expr_assign: expr "-=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 389 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1016

  412 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 412 (expr_assign_pipe)


State 1017

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr "/=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 391 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1018

  411 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 411 (expr_assign_pipe)


State 1019

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr "*=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 390 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1020

  413 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 413 (expr_assign_pipe)


State 1021

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr "%=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1022

  403 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1023

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  382 expr_assign: expr "&=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 382 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1024

  404 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1025

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "|=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1026

  405 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1027

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr "^=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1028

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  462     | expr "<<" expr .
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '-'   shift, and go to state 801
    '+'   shift, and go to state 802
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 462 (expr)


State 1029

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  463     | expr ">>" expr .
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '-'   shift, and go to state 801
    '+'   shift, and go to state 802
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 463 (expr)


State 1030

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  475     | expr "<=" expr .
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 475 (expr)


State 1031

  414 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1032

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr "<<=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1033

  415 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1034

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr ">>=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1035

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  476     | expr ">=" expr .
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 476 (expr)


State 1036

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  473     | expr "==" expr .
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 473 (expr)


State 1037

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  474     | expr "!=" expr .
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 474 (expr)


State 1038

  420 expr_method_call: expr "->" "name" . '(' ')'
  421                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1270


State 1039

  402 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1040

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  380 expr_assign: expr "<-" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 380 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1041

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  503     | expr "??" expr .
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 503 (expr)


State 1042

  542 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1271


State 1043

  494 expr: expr "?." "name" .

    $default  reduce using rule 494 (expr)


State 1044

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  492     | expr "?[" expr . ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 1272


State 1045

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  527     | expr "<|" expr .
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 527 (expr)


State 1046

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  528     | expr "|>" expr .
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 775
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 528 (expr)


State 1047

  446 expr_call: basic_type_declaration . '(' ')'
  447          | basic_type_declaration . '(' expr_list ')'
  529 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 809

    $default  reduce using rule 529 (expr)


State 1048

  381 expr_assign: expr ":=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 381 (expr_assign)


State 1049

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  464     | expr "<<<" expr .
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '-'   shift, and go to state 801
    '+'   shift, and go to state 802
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 464 (expr)


State 1050

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  465     | expr ">>>" expr .
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '-'   shift, and go to state 801
    '+'   shift, and go to state 802
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 465 (expr)


State 1051

  416 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1052

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr "<<<=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1053

  417 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1054

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr ">>>=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1055

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  480     | expr "&&" expr .
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 480 (expr)


State 1056

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  481     | expr "||" expr .
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "^^"   shift, and go to state 789
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 481 (expr)


State 1057

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  482     | expr "^^" expr .
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 482 (expr)


State 1058

  406 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 406 (expr_assign_pipe)


State 1059

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  385 expr_assign: expr "&&=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 385 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1060

  407 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 407 (expr_assign_pipe)


State 1061

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  386 expr_assign: expr "||=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 386 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1062

  408 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 408 (expr_assign_pipe)


State 1063

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  387 expr_assign: expr "^^=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 387 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1064

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  483     | expr ".." expr .
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    ".."  error (nonassociative)

    $default  reduce using rule 483 (expr)


State 1065

  401 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 401 (expr_assign_pipe)


State 1066

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr '=' expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    '$'    shift, and go to state 514
    '@'    shift, and go to state 692

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1067

  515 expr: expr '?' "as" . "name"
  518     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  519     | expr '?' "as" . basic_type_declaration
  546 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1273
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 476
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1274
    "name"      shift, and go to state 1275

    basic_type_declaration  go to state 1276


State 1068

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  504     | expr '?' expr . ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    ':'    shift, and go to state 1277
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807


State 1069

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  478     | expr '|' expr .
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 478 (expr)


State 1070

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  479     | expr '^' expr .
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 479 (expr)


State 1071

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  477     | expr '&' expr .
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 477 (expr)


State 1072

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  471     | expr '<' expr .
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 471 (expr)


State 1073

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  472     | expr '>' expr .
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 472 (expr)


State 1074

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  467     | expr '-' expr .
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 467 (expr)


State 1075

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  466     | expr '+' expr .
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '*'   shift, and go to state 803
    '/'   shift, and go to state 804
    '%'   shift, and go to state 805
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 466 (expr)


State 1076

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  468     | expr '*' expr .
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 468 (expr)


State 1077

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  469     | expr '/' expr .
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 469 (expr)


State 1078

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  470     | expr '%' expr .
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 755
    "as"  shift, and go to state 756
    "++"  shift, and go to state 767
    "--"  shift, and go to state 768
    "->"  shift, and go to state 775
    "??"  shift, and go to state 777
    "?."  shift, and go to state 778
    "?["  shift, and go to state 779
    "<|"  shift, and go to state 780
    "|>"  shift, and go to state 781
    '.'   shift, and go to state 806
    '['   shift, and go to state 807

    $default  reduce using rule 470 (expr)


State 1079

  495 expr: expr '.' "?." . "name"
  544 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1278
    "name"  shift, and go to state 1279


State 1080

  493 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1280
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1081

  541 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1281


State 1082

  431 expr_field: expr '.' "name" .
  433           | expr '.' "name" . '(' ')'
  434           | expr '.' "name" . '(' expr_list ')'
  435           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1282

    '('       [reduce using rule 431 (expr_field)]
    $default  reduce using rule 431 (expr_field)


State 1083

  432 expr_field: expr '.' '.' . "name"
  543 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1283
    "name"  shift, and go to state 1284


State 1084

  491 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1285
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1085

  440 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1286


State 1086

  436 expr_field: expr '.' basic_type_declaration . '(' ')'
  437           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1287


State 1087

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  490     | expr '[' expr . ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 1288


State 1088

  446 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 446 (expr_call)


State 1089

  349 expr_list: expr_list . ',' expr
  447 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 887
    ')'  shift, and go to state 1289


State 1090

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1290


State 1091

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  626 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807

    semicolon  go to state 1291


State 1092

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'
  571 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1292


State 1093

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  570                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1293
    "private"  shift, and go to state 1294

    $default  reduce using rule 557 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1295


State 1094

  562 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1296

    $default  reduce using rule 560 (optional_static_member_variable)

    optional_static_member_variable  go to state 1297


State 1095

  566 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1298


State 1096

  501 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  502     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1299
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1097

  606 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 606 (let_variable_name_with_pos_list)


State 1098

  609 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 609 (let_variable_declaration)


State 1099

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  608 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1300
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1100

  610 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 610 (let_variable_declaration)


State 1101

  730 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 729 ($@51)

    $@51  go to state 1301


State 1102

  753 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 752 ($@56)

    $@56  go to state 1302


State 1103

  756 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 755 ($@58)

    $@58  go to state 1303


State 1104

  719 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1304


State 1105

  759 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 758 ($@60)

    $@60  go to state 1305


State 1106

  749 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 748 ($@54)

    $@54  go to state 1306


State 1107

  715 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 714 ($@49)

    $@49  go to state 1307


State 1108

  709 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1308


State 1109

  763 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 762 ($@62)

    $@62  go to state 1309


State 1110

  766 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1310


State 1111

  770 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 769 ($@66)

    $@66  go to state 1311


State 1112

  773 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1312


State 1113

  777 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 776 ($@70)

    $@70  go to state 1313


State 1114

  780 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1314


State 1115

  783 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 782 ($@74)

    $@74  go to state 1315


State 1116

  786 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 785 ($@76)

    $@76  go to state 1316


State 1117

  585 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 629

    variant_type  go to state 1317


State 1118

  270 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1318

    semicolon  go to state 624
    c_or_s     go to state 1319


State 1119

  269 type_declaration_no_options_list: type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 269 (type_declaration_no_options_list)


State 1120

  732 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 732 (type_declaration_no_options)


State 1121

  721 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 721 (dim_list)


State 1122

  577 tuple_type: "name" ':' type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 577 (tuple_type)


State 1123

  583 variant_type: "name" ':' type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 583 (variant_type)


State 1124

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  665 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1320


State 1125

  666 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 666 (variable_name_with_pos_list)


State 1126

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  668                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1321

    $default  reduce using rule 667 (variable_name_with_pos_list)


State 1127

  593 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  594                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 862
    '='   shift, and go to state 864
    '|'   shift, and go to state 429

    $default  reduce using rule 593 (variable_declaration)

    copy_or_move  go to state 1322


State 1128

  596 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 596 (variable_declaration)


State 1129

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  595 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "+="    shift, and go to state 888
    "-="    shift, and go to state 889
    "/="    shift, and go to state 890
    "*="    shift, and go to state 891
    "%="    shift, and go to state 892
    "&="    shift, and go to state 893
    "|="    shift, and go to state 894
    "^="    shift, and go to state 895
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    "<<="   shift, and go to state 896
    ">>="   shift, and go to state 897
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "<-"    shift, and go to state 898
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    ":="    shift, and go to state 782
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "<<<="  shift, and go to state 899
    ">>>="  shift, and go to state 900
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    "&&="   shift, and go to state 901
    "||="   shift, and go to state 902
    "^^="   shift, and go to state 903
    ".."    shift, and go to state 793
    '='     shift, and go to state 904
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807
    '$'     shift, and go to state 514
    '@'     shift, and go to state 692

    " <|"     reduce using rule 378 (expr_assign)
    $default  reduce using rule 595 (variable_declaration)

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1130

  579 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 579 (tuple_type_list)


State 1131

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1323
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1132

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1324
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1133

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1325
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1134

  289 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1326


State 1135

  295 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  844 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    $default  reduce using rule 844 (use_initializer)

    make_struct_fields  go to state 733
    make_struct_single  go to state 1327


State 1136

  293 expr_new: "new" new_type_declaration '(' expr_list . ')'
  349 expr_list: expr_list . ',' expr

    ','  shift, and go to state 887
    ')'  shift, and go to state 1328


State 1137

  294 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1329


State 1138

  292 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1330


State 1139

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  344               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1331


State 1140

  342 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1332


State 1141

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  347               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1333
    '>'                  shift, and go to state 1334


State 1142

  345 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1335


State 1143

  341 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1336


State 1144

  879 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1337


State 1145

  882 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 622
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 639
    tuple_type_list              go to state 1338
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 627


State 1146

  885 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 629

    variant_type       go to state 843
    variant_type_list  go to state 1339


State 1147

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1340
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1148

  886 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1341


State 1149

  349 expr_list: expr_list ',' expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 349 (expr_list)


State 1150

  388 expr_assign: expr "+=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 388 (expr_assign)


State 1151

  389 expr_assign: expr "-=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 389 (expr_assign)


State 1152

  391 expr_assign: expr "/=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 391 (expr_assign)


State 1153

  390 expr_assign: expr "*=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 390 (expr_assign)


State 1154

  392 expr_assign: expr "%=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 392 (expr_assign)


State 1155

  382 expr_assign: expr "&=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 382 (expr_assign)


State 1156

  383 expr_assign: expr "|=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 383 (expr_assign)


State 1157

  384 expr_assign: expr "^=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 384 (expr_assign)


State 1158

  393 expr_assign: expr "<<=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 393 (expr_assign)


State 1159

  394 expr_assign: expr ">>=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 394 (expr_assign)


State 1160

  380 expr_assign: expr "<-" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 380 (expr_assign)


State 1161

  395 expr_assign: expr "<<<=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 395 (expr_assign)


State 1162

  396 expr_assign: expr ">>>=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 396 (expr_assign)


State 1163

  385 expr_assign: expr "&&=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 385 (expr_assign)


State 1164

  386 expr_assign: expr "||=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 386 (expr_assign)


State 1165

  387 expr_assign: expr "^^=" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 387 (expr_assign)


State 1166

  379 expr_assign: expr '=' expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 379 (expr_assign)


State 1167

  310 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 310 (expression_try_catch)


State 1168

  901 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1342


State 1169

  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1343


State 1170

  900 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 900 (make_table_decl)


State 1171

  499 expr: "deref" '(' expr ')' .

    $default  reduce using rule 499 (expr)


State 1172

   89 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1344
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1173

  332 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1345
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1174

  335 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1346
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1175

  500 expr: "addr" '(' expr ')' .

    $default  reduce using rule 500 (expr)


State 1176

  338 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1347
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1177

  531 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 531 (expr)


State 1178

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1348
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1179

  890 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1349


State 1180

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  862 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1350
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1181

  579 tuple_type_list: tuple_type_list . c_or_s tuple_type
  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1351

    semicolon  go to state 624
    c_or_s     go to state 869


State 1182

  868 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1352


State 1183

  585 variant_type_list: variant_type_list . c_or_s variant_type
  859 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1353

    semicolon  go to state 624
    c_or_s     go to state 1117


State 1184

  237 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  501 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  502     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 996
    "[["       shift, and go to state 997

    $default  reduce using rule 363 (optional_capture_list)

    optional_capture_list  go to state 1354


State 1185

  367 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1355


State 1186

  533 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 533 (expr_mtag)


State 1187

  534 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1188

  535 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1189

  536 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 536 (expr_mtag)


State 1190

  537 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 537 (expr_mtag)


State 1191

  539 expr_mtag: "$c" '(' expr ')' . '(' ')'
  540          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1356


State 1192

  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1357
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1193

  830 optional_block: "where" expr_block .

    $default  reduce using rule 830 (optional_block)


State 1194

  735 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    ']'                               shift, and go to state 848
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    ']'  [reduce using rule 263 (optional_expr_list)]

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1195

  348 expr_list: expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  720 dim_list: '[' expr . ']'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 849

    ']'       [reduce using rule 348 (expr_list)]
    $default  reduce using rule 348 (expr_list)


State 1196

  847 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  848                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 937
    "$f"     shift, and go to state 730
    "name"   shift, and go to state 1244

    $default  reduce using rule 829 (optional_block)

    make_struct_fields  go to state 942
    make_struct_dim     go to state 1358
    optional_block      go to state 1359


State 1197

  864 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1360
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1198

  822 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    make_struct_fields  go to state 1361


State 1199

  845 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1200
    ",]]"  shift, and go to state 1201
    ']'    shift, and go to state 1202

    optional_trailing_delim_sqr_sqr  go to state 1362


State 1200

  838 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 838 (optional_trailing_delim_sqr_sqr)


State 1201

  839 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 839 (optional_trailing_delim_sqr_sqr)


State 1202

  837 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1363


State 1203

  846 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 846 (make_struct_decl)


State 1204

  865 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1364
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1205

  873 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 941
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple              go to state 1365
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1206

  836 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 836 (optional_trailing_semicolon_sqr_sqr)


State 1207

  835 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1366


State 1208

  875 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 875 (make_dim_decl)


State 1209

  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1367
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1210

  850 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    make_struct_fields  go to state 942
    make_struct_dim     go to state 1368


State 1211

  849 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1369
    ";}]"                shift, and go to state 1370
    ",}]"                shift, and go to state 1371

    optional_trailing_delim_cur_sqr  go to state 1372


State 1212

  833 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1373


State 1213

  834 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 834 (optional_trailing_semicolon_cur_sqr)


State 1214

  876 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 876 (make_dim_decl)


State 1215

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1374
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1216

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  866 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 866 (make_map_tuple)


State 1217

  831 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 831 (optional_trailing_semicolon_cur_cur)


State 1218

  895 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 895 (make_table)


State 1219

  270 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  273 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1375

    semicolon  go to state 624
    c_or_s     go to state 1319


State 1220

  270 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  276 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1376

    semicolon  go to state 624
    c_or_s     go to state 1319


State 1221

   36 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    ':'    shift, and go to state 1377
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 31 (optional_format_string)

    optional_format_string  go to state 1378


State 1222

  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1379
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1223

  897 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 897 (expr_map_tuple_list)


State 1224

  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1380
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1225

  667 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  668                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1381
    ','   shift, and go to state 863


State 1226

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  814 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  815                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1382


State 1227

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  811 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 811 (make_struct_fields)


State 1228

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  810 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 810 (make_struct_fields)


State 1229

  488 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 488 (expr)


State 1230

  816 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  817                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1383


State 1231

  812 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  813                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 862
    ":="  shift, and go to state 1384
    '='   shift, and go to state 864

    copy_or_move  go to state 1385


State 1232

  423 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1386
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1233

  548 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1387
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1234

  427 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1388


State 1235

  430 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1389


State 1236

   66 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1390


State 1237

   63 elif_or_static_elif: "elif" .

    $default  reduce using rule 63 (elif_or_static_elif)


State 1238

   64 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1239

   67 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1391
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1240

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 80 (expression_if_then_else)


State 1241

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1392
    "is"    shift, and go to state 755
    "as"    shift, and go to state 756
    "<<"    shift, and go to state 765
    ">>"    shift, and go to state 766
    "++"    shift, and go to state 767
    "--"    shift, and go to state 768
    "<="    shift, and go to state 769
    ">="    shift, and go to state 772
    "=="    shift, and go to state 773
    "!="    shift, and go to state 774
    "->"    shift, and go to state 775
    "??"    shift, and go to state 777
    "?."    shift, and go to state 778
    "?["    shift, and go to state 779
    "<|"    shift, and go to state 780
    "|>"    shift, and go to state 781
    "<<<"   shift, and go to state 783
    ">>>"   shift, and go to state 784
    "&&"    shift, and go to state 787
    "||"    shift, and go to state 788
    "^^"    shift, and go to state 789
    ".."    shift, and go to state 793
    '?'     shift, and go to state 795
    '|'     shift, and go to state 796
    '^'     shift, and go to state 797
    '&'     shift, and go to state 798
    '<'     shift, and go to state 799
    '>'     shift, and go to state 800
    '-'     shift, and go to state 801
    '+'     shift, and go to state 802
    '*'     shift, and go to state 803
    '/'     shift, and go to state 804
    '%'     shift, and go to state 805
    '.'     shift, and go to state 806
    '['     shift, and go to state 807

    $default  reduce using rule 72 (expression_else_one_liner)

    expression_else_one_liner  go to state 1393


State 1242

  234 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  260 expressions: expressions . expression_any
  261            | expressions . error

    error                             shift, and go to state 443
    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 446
    "if"                              shift, and go to state 447
    "static_if"                       shift, and go to state 448
    "for"                             shift, and go to state 449
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "return"                          shift, and go to state 456
    "null"                            shift, and go to state 457
    "break"                           shift, and go to state 458
    "try"                             shift, and go to state 459
    "table"                           shift, and go to state 460
    "delete"                          shift, and go to state 461
    "deref"                           shift, and go to state 462
    "with"                            shift, and go to state 463
    "assume"                          shift, and go to state 464
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 467
    "continue"                        shift, and go to state 468
    "pass"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 470
    "label"                           shift, and go to state 471
    "goto"                            shift, and go to state 472
    "unsafe"                          shift, and go to state 473
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "yield"                           shift, and go to state 480
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 503
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder             go to state 516
    expr_reader                go to state 517
    expression_label           go to state 518
    expression_goto            go to state 519
    semicolon                  go to state 520
    if_or_static_if            go to state 521
    expression_if_one_liner    go to state 522
    expression_if_then_else    go to state 523
    expression_for_loop        go to state 524
    expression_unsafe          go to state 525
    expression_while_loop      go to state 526
    expression_with            go to state 527
    expression_with_alias      go to state 528
    close_block                go to state 1394
    expr_call_pipe             go to state 530
    expression_any             go to state 531
    expr_keyword               go to state 532
    expression_keyword         go to state 533
    expr_pipe                  go to state 534
    name_in_namespace          go to state 535
    expression_delete          go to state 536
    expr_new                   go to state 537
    expression_break           go to state 538
    expression_continue        go to state 539
    expression_return_no_pipe  go to state 540
    expression_return          go to state 541
    expression_yield_no_pipe   go to state 542
    expression_yield           go to state 543
    expression_try_catch       go to state 544
    kwd_let                    go to state 545
    expression_let             go to state 546
    expr_cast                  go to state 547
    expr_type_decl             go to state 548
    expr_type_info             go to state 549
    block_or_lambda            go to state 550
    expr_full_block            go to state 551
    expr_numeric_const         go to state 552
    expr_assign                go to state 553
    expr_assign_pipe           go to state 554
    expr_named_call            go to state 555
    expr_method_call           go to state 556
    func_addr_expr             go to state 557
    expr_field                 go to state 558
    expr_call                  go to state 559
    expr                       go to state 560
    expr_mtag                  go to state 561
    basic_type_declaration     go to state 562
    make_decl                  go to state 563
    make_struct_decl           go to state 564
    make_tuple_call            go to state 565
    make_dim_decl              go to state 566
    make_table_decl            go to state 567
    array_comprehension        go to state 568


State 1243

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 996
    "[["       shift, and go to state 997

    $default  reduce using rule 363 (optional_capture_list)

    optional_capture_list  go to state 1395


State 1244

  810 make_struct_fields: "name" . copy_or_move expr
  811                   | "name" . ":=" expr

    "<-"  shift, and go to state 862
    ":="  shift, and go to state 973
    '='   shift, and go to state 864

    copy_or_move  go to state 974


State 1245

  442 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 442 (expr_call)


State 1246

  444 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1396


State 1247

  418 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1397


State 1248

  349 expr_list: expr_list ',' . expr
  419 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 1398
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1149
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1249

  445 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 445 (expr_call)


State 1250

  443 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 443 (expr_call)


State 1251

  318 tuple_expansion: "name" .

    $default  reduce using rule 318 (tuple_expansion)


State 1252

  319 tuple_expansion: tuple_expansion . ',' "name"
  320 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  324                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  325                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1399
    ']'  shift, and go to state 1400


State 1253

  319 tuple_expansion: tuple_expansion . ',' "name"
  322 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  323                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  326                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  327                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1399
    ')'  shift, and go to state 1401


State 1254

  365 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1255
    ":="    shift, and go to state 1256
    "name"  shift, and go to state 1257
    '='     shift, and go to state 1258
    '&'     shift, and go to state 1259

    capture_entry  go to state 1260
    capture_list   go to state 1402


State 1255

  358 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1403


State 1256

  359 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1404


State 1257

  360 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1405


State 1258

  357 capture_entry: '=' . "name"

    "name"  shift, and go to state 1406


State 1259

  356 capture_entry: '&' . "name"

    "name"  shift, and go to state 1407


State 1260

  361 capture_list: capture_entry .

    $default  reduce using rule 361 (capture_list)


State 1261

  362 capture_list: capture_list . ',' capture_entry
  364 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1408
    ']'  shift, and go to state 1409


State 1262

  368 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1410


State 1263

  507 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 505 ($@29)

    $@29  go to state 1411


State 1264

  547 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1412
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1265

  513 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 511 ($@31)

    $@31  go to state 1413


State 1266

  545 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1414
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1267

  399 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 399 (expr_assign_pipe_right)


State 1268

  397 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 397 (expr_assign_pipe_right)


State 1269

  398 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 398 (expr_assign_pipe_right)


State 1270

  420 expr_method_call: expr "->" "name" '(' . ')'
  421                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1415
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1416
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1271

  542 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1417
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1272

  492 expr: expr "?[" expr ']' .

    $default  reduce using rule 492 (expr)


State 1273

  518 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1418


State 1274

  546 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1419


State 1275

  515 expr: expr '?' "as" "name" .

    $default  reduce using rule 515 (expr)


State 1276

  519 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 519 (expr)


State 1277

  504 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1420
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1278

  544 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1421


State 1279

  495 expr: expr '.' "?." "name" .

    $default  reduce using rule 495 (expr)


State 1280

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  493     | expr '.' "?[" expr . ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 1422


State 1281

  541 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1423
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1282

  433 expr_field: expr '.' "name" '(' . ')'
  434           | expr '.' "name" '(' . expr_list ')'
  435           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 1424
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1425
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1426
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1283

  543 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1427


State 1284

  432 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 432 (expr_field)


State 1285

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  491     | expr '.' '[' expr . ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ']'    shift, and go to state 1428


State 1286

  440 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 439 ($@28)

    $@28  go to state 1429


State 1287

  436 expr_field: expr '.' basic_type_declaration '(' . ')'
  437           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1430
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1431
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1288

  490 expr: expr '[' expr ']' .

    $default  reduce using rule 490 (expr)


State 1289

  447 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 447 (expr_call)


State 1290

  646 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 646 (enum_declaration)


State 1291

  626 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 626 (enum_list)


State 1292

  130 optional_annotation_list: '[' annotation_list ']' .
  571 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 130 (optional_annotation_list)

    semicolon  go to state 1432


State 1293

  558 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 558 (optional_public_or_private_member_variable)


State 1294

  559 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 559 (optional_public_or_private_member_variable)


State 1295

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  570                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1433
    "static"    shift, and go to state 1296

    $default  reduce using rule 560 (optional_static_member_variable)

    optional_static_member_variable  go to state 1434


State 1296

  561 optional_static_member_variable: "static" .

    $default  reduce using rule 561 (optional_static_member_variable)


State 1297

  562 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1435
    "sealed"    shift, and go to state 1436

    $default  reduce using rule 552 (optional_override)

    optional_override  go to state 1437


State 1298

  566 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 566 (struct_variable_declaration_list)


State 1299

  501 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  502     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 996
    "[["       shift, and go to state 997

    $default  reduce using rule 363 (optional_capture_list)

    optional_capture_list  go to state 1438


State 1300

  608 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 608 (let_variable_declaration)


State 1301

  730 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 730 (type_declaration_no_options)


State 1302

  753 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 753 (type_declaration_no_options)


State 1303

  756 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1304

  719 table_type_pair: type_declaration c_or_s type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 719 (table_type_pair)


State 1305

  759 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 759 (type_declaration_no_options)


State 1306

  749 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 749 (type_declaration_no_options)


State 1307

  715 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 715 (bitfield_type_declaration)


State 1308

  709 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 709 (bitfield_bits)


State 1309

  763 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 763 (type_declaration_no_options)


State 1310

  766 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 765 ($@64)

    $@64  go to state 1439


State 1311

  770 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 770 (type_declaration_no_options)


State 1312

  773 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 772 ($@68)

    $@68  go to state 1440


State 1313

  777 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 777 (type_declaration_no_options)


State 1314

  780 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 779 ($@72)

    $@72  go to state 1441


State 1315

  783 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 783 (type_declaration_no_options)


State 1316

  786 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 786 (type_declaration_no_options)


State 1317

  585 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 585 (variant_type_list)


State 1318

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1442


State 1319

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1443


State 1320

  665 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 665 (variable_name_with_pos_list)


State 1321

  668 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1444


State 1322

  594 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1445
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1323

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 852 ($@90)

    $@90  go to state 1446


State 1324

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@92)

    $@92  go to state 1447


State 1325

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  349 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 887

    open_block        go to state 297
    expression_block  go to state 1448


State 1326

  289 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 288 ($@13)

    $@13  go to state 1449


State 1327

  295 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1450


State 1328

  293 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 293 (expr_new)


State 1329

  294 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 294 (expr_new)


State 1330

  292 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 292 (expr_new)


State 1331

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  344               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1451

    semicolon  go to state 624
    c_or_s     go to state 1452


State 1332

  342 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 342 (expr_type_info)


State 1333

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1453


State 1334

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1454


State 1335

  345 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 345 (expr_type_info)


State 1336

  341 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 340 ($@21)

    $@21  go to state 1455


State 1337

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1456
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1338

  579 tuple_type_list: tuple_type_list . c_or_s tuple_type
  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1457

    semicolon  go to state 624
    c_or_s     go to state 869


State 1339

  585 variant_type_list: variant_type_list . c_or_s variant_type
  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 623
    '>'                  shift, and go to state 1458

    semicolon  go to state 624
    c_or_s     go to state 1117


State 1340

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 888 ($@106)

    $@106  go to state 1459


State 1341

  886 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 886 (make_dim_decl)


State 1342

  901 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 516
    expr_reader                   go to state 517
    optional_expr_map_tuple_list  go to state 1460
    expression_keyword            go to state 580
    name_in_namespace             go to state 535
    expr_new                      go to state 537
    expr_cast                     go to state 547
    expr_type_decl                go to state 548
    expr_type_info                go to state 549
    block_or_lambda               go to state 550
    expr_full_block               go to state 551
    expr_numeric_const            go to state 552
    expr_named_call               go to state 555
    expr_method_call              go to state 556
    func_addr_expr                go to state 557
    expr_field                    go to state 558
    expr_call                     go to state 559
    expr                          go to state 709
    expr_mtag                     go to state 561
    basic_type_declaration        go to state 562
    make_decl                     go to state 563
    make_struct_decl              go to state 564
    make_map_tuple                go to state 718
    make_tuple_call               go to state 565
    make_dim_decl                 go to state 566
    expr_map_tuple_list           go to state 719
    make_table_decl               go to state 567
    array_comprehension           go to state 568


State 1343

  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"
  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1461
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1344

   89 expression_with_alias: "assume" "name" '=' $@6 expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 89 (expression_with_alias)


State 1345

  332 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 331 ($@15)

    $@15  go to state 1462


State 1346

  335 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 334 ($@17)

    $@17  go to state 1463


State 1347

  338 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 337 ($@19)

    $@19  go to state 1464


State 1348

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 892 ($@108)

    $@108  go to state 1465


State 1349

  890 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 890 (make_dim_decl)


State 1350

  862 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 861 ($@96)

    $@96  go to state 1466


State 1351

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 870 ($@98)

    $@98  go to state 1467


State 1352

  868 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 868 (make_tuple_call)


State 1353

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 858 ($@94)

    $@94  go to state 1468


State 1354

  237 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  501 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1469
    '$'  shift, and go to state 514
    '@'  shift, and go to state 692

    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 1470


State 1355

  367 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1471


State 1356

  539 expr_mtag: "$c" '(' expr ')' '(' . ')'
  540          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1472
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1473
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1357

  349 expr_list: expr_list . ',' expr
  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1474
    ','                  shift, and go to state 887


State 1358

  822 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  848 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 937
    "end of expression"  shift, and go to state 1198

    $default  reduce using rule 829 (optional_block)

    optional_block  go to state 1475


State 1359

  847 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1200
    ",]]"  shift, and go to state 1201
    ']'    shift, and go to state 1202

    optional_trailing_delim_sqr_sqr  go to state 1476


State 1360

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  864 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 864 (make_tuple)


State 1361

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  822 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 822 (make_struct_dim)


State 1362

  845 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 845 (make_struct_decl)


State 1363

  837 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 837 (optional_trailing_delim_sqr_sqr)


State 1364

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  865 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 865 (make_tuple)


State 1365

  865 make_tuple: make_tuple . ',' expr
  873 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1204

    $default  reduce using rule 873 (make_dim)


State 1366

  835 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 835 (optional_trailing_semicolon_sqr_sqr)


State 1367

  349 expr_list: expr_list . ',' expr
  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1477
    ','                  shift, and go to state 887


State 1368

  822 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  850 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 937
    "end of expression"  shift, and go to state 1198

    $default  reduce using rule 829 (optional_block)

    optional_block  go to state 1478


State 1369

  840 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1479


State 1370

  841 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 841 (optional_trailing_delim_cur_sqr)


State 1371

  842 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 842 (optional_trailing_delim_cur_sqr)


State 1372

  849 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 849 (make_struct_decl)


State 1373

  833 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 833 (optional_trailing_semicolon_cur_sqr)


State 1374

  349 expr_list: expr_list . ',' expr
  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1480
    ','                  shift, and go to state 887


State 1375

  273 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 272 ($@9)

    $@9  go to state 1481


State 1376

  276 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 275 ($@11)

    $@11  go to state 1482


State 1377

   33 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 32 ($@1)

    $@1  go to state 1483


State 1378

   36 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1484


State 1379

  349 expr_list: expr_list . ',' expr
  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1485
    ','                  shift, and go to state 887


State 1380

  349 expr_list: expr_list . ',' expr
  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1486
    ','                  shift, and go to state 887


State 1381

  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1487
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1382

  814 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  815                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 862
    ":="  shift, and go to state 1488
    '='   shift, and go to state 864

    copy_or_move  go to state 1489


State 1383

  816 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  817                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1490
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1384

  813 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1491
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1385

  812 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1492
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1386

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  423 func_addr_name: "$i" '(' expr . ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1493


State 1387

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  548          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1494


State 1388

  427 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1495
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1389

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1496


State 1390

   66 expression_else: "else" expression_block .

    $default  reduce using rule 66 (expression_else)


State 1391

   67 expression_else: elif_or_static_elif expr . expression_block expression_else
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 755
    "as"                   shift, and go to state 756
    "<<"                   shift, and go to state 765
    ">>"                   shift, and go to state 766
    "++"                   shift, and go to state 767
    "--"                   shift, and go to state 768
    "<="                   shift, and go to state 769
    ">="                   shift, and go to state 772
    "=="                   shift, and go to state 773
    "!="                   shift, and go to state 774
    "->"                   shift, and go to state 775
    "??"                   shift, and go to state 777
    "?."                   shift, and go to state 778
    "?["                   shift, and go to state 779
    "<|"                   shift, and go to state 780
    "|>"                   shift, and go to state 781
    "<<<"                  shift, and go to state 783
    ">>>"                  shift, and go to state 784
    "&&"                   shift, and go to state 787
    "||"                   shift, and go to state 788
    "^^"                   shift, and go to state 789
    ".."                   shift, and go to state 793
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 795
    '|'                    shift, and go to state 796
    '^'                    shift, and go to state 797
    '&'                    shift, and go to state 798
    '<'                    shift, and go to state 799
    '>'                    shift, and go to state 800
    '-'                    shift, and go to state 801
    '+'                    shift, and go to state 802
    '*'                    shift, and go to state 803
    '/'                    shift, and go to state 804
    '%'                    shift, and go to state 805
    '.'                    shift, and go to state 806
    '['                    shift, and go to state 807

    open_block        go to state 297
    expression_block  go to state 1497


State 1392

   74 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 73 ($@3)

    $@3  go to state 1498


State 1393

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1499


State 1394

  234 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 234 (expression_block)


State 1395

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1500


State 1396

  444 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 444 (expr_call)


State 1397

  418 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1501


State 1398

  419 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 1502
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1399

  319 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1503


State 1400

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  324                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  325                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1504


State 1401

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  323                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  326                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  327                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1505
    '&'  shift, and go to state 401

    $default  reduce using rule 600 (optional_ref)

    optional_ref  go to state 1506


State 1402

  362 capture_list: capture_list . ',' capture_entry
  365 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1408
    ')'  shift, and go to state 1507


State 1403

  358 capture_entry: "<-" "name" .

    $default  reduce using rule 358 (capture_entry)


State 1404

  359 capture_entry: ":=" "name" .

    $default  reduce using rule 359 (capture_entry)


State 1405

  360 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1508


State 1406

  357 capture_entry: '=' "name" .

    $default  reduce using rule 357 (capture_entry)


State 1407

  356 capture_entry: '&' "name" .

    $default  reduce using rule 356 (capture_entry)


State 1408

  362 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1255
    ":="    shift, and go to state 1256
    "name"  shift, and go to state 1257
    '='     shift, and go to state 1258
    '&'     shift, and go to state 1259

    capture_entry  go to state 1509


State 1409

  364 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1510


State 1410

  368 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1511
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1512
    block_or_simple_block  go to state 1513


State 1411

  507 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1514


State 1412

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  547          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1515


State 1413

  513 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1516


State 1414

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  545          | expr "as" "$f" '(' expr . ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1517


State 1415

  420 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 420 (expr_method_call)


State 1416

  349 expr_list: expr_list . ',' expr
  421 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 887
    ')'  shift, and go to state 1518


State 1417

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  542          | expr "?." "$f" '(' expr . ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1519


State 1418

  518 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 516 ($@33)

    $@33  go to state 1520


State 1419

  546 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1521
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1420

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  504     | expr '?' expr ':' expr .
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 504 (expr)


State 1421

  544 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1522
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1422

  493 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 493 (expr)


State 1423

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr '.' "$f" '(' expr . ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1523


State 1424

  435 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  874 make_dim_decl: '[' . optional_expr_list ']'
  907 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  908                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "for"                             shift, and go to state 725
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "iterator"                        shift, and go to state 726
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "$f"                              shift, and go to state 730
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 731
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 727
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_fields      go to state 1524
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1425

  433 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 433 (expr_field)


State 1426

  349 expr_list: expr_list . ',' expr
  434 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 887
    ')'  shift, and go to state 1525


State 1427

  543 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1526
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1428

  491 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 491 (expr)


State 1429

  440 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 440 (expr_field)


State 1430

  436 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 436 (expr_field)


State 1431

  349 expr_list: expr_list . ',' expr
  437 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 887
    ')'  shift, and go to state 1527


State 1432

  571 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 571 (struct_variable_declaration_list)


State 1433

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1528

    $default  reduce using rule 555 (optional_constant)

    optional_constant  go to state 1529


State 1434

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1435
    "sealed"    shift, and go to state 1436

    $default  reduce using rule 552 (optional_override)

    optional_override  go to state 1530


State 1435

  553 optional_override: "override" .

    $default  reduce using rule 553 (optional_override)


State 1436

  554 optional_override: "sealed" .

    $default  reduce using rule 554 (optional_override)


State 1437

  562 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1293
    "private"  shift, and go to state 1294

    $default  reduce using rule 557 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1531


State 1438

  501 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1469


State 1439

  766 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 766 (type_declaration_no_options)


State 1440

  773 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 773 (type_declaration_no_options)


State 1441

  780 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 780 (type_declaration_no_options)


State 1442

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 1532
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1443

  270 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429

    $default  reduce using rule 270 (type_declaration_no_options_list)


State 1444

  668 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 668 (variable_name_with_pos_list)


State 1445

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  594 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 594 (variable_declaration)


State 1446

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1533


State 1447

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1534


State 1448

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 84 (expression_for_loop)


State 1449

  289 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 289 (new_type_declaration)


State 1450

  295 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 295 (expr_new)


State 1451

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1535
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1452

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1536


State 1453

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1537


State 1454

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1538
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1455

  341 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 341 (expr_type_decl)


State 1456

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 878 ($@100)

    $@100  go to state 1539


State 1457

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 881 ($@102)

    $@102  go to state 1540


State 1458

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 884 ($@104)

    $@104  go to state 1541


State 1459

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1542


State 1460

  901 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1543


State 1461

  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1544


State 1462

  332 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1545
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1463

  335 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1546
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1464

  338 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1547
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1465

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1548


State 1466

  862 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1550


State 1467

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1551


State 1468

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1552


State 1469

  501 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    ')'                               shift, and go to state 1553
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1554
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1470

  237 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 237 (expr_call_pipe)


State 1471

  367 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1511
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1512
    block_or_simple_block  go to state 1555


State 1472

  539 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 539 (expr_mtag)


State 1473

  349 expr_list: expr_list . ',' expr
  540 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 887
    ')'  shift, and go to state 1556


State 1474

  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1557
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1475

  848 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1200
    ",]]"  shift, and go to state 1201
    ']'    shift, and go to state 1202

    optional_trailing_delim_sqr_sqr  go to state 1558


State 1476

  847 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 847 (make_struct_decl)


State 1477

  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1559
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1478

  850 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1369
    ";}]"                shift, and go to state 1370
    ",}]"                shift, and go to state 1371

    optional_trailing_delim_cur_sqr  go to state 1560


State 1479

  840 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 840 (optional_trailing_delim_cur_sqr)


State 1480

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 709
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_map_tuple          go to state 1561
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1481

  273 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1562
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1482

  276 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1563

    '('       [reduce using rule 265 (optional_expr_list_in_braces)]
    $default  reduce using rule 265 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1564


State 1483

   33 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 29 (format_string)

    format_string  go to state 1565


State 1484

   36 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 36 (string_builder_body)


State 1485

  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 709
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_map_tuple          go to state 1566
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1486

  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1567
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1487

  349 expr_list: expr_list . ',' expr
  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1568
    ','                  shift, and go to state 887


State 1488

  815 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1569
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1489

  814 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1570
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1490

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  817                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1571


State 1491

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  813 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 813 (make_struct_fields)


State 1492

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  812 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 812 (make_struct_fields)


State 1493

  423 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 423 (func_addr_name)


State 1494

  548 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 548 (expr_mtag)


State 1495

  427 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 426 ($@24)

    $@24  go to state 1572


State 1496

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1573


State 1497

   67 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1236
    "elif"         shift, and go to state 1237
    "static_elif"  shift, and go to state 1238

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1239
    expression_else      go to state 1574


State 1498

   74 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "return"                          shift, and go to state 1575
    "null"                            shift, and go to state 457
    "break"                           shift, and go to state 458
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "continue"                        shift, and go to state 468
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "yield"                           shift, and go to state 1576
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder             go to state 516
    expr_reader                go to state 517
    expression_if_one_liner    go to state 1577
    expression_keyword         go to state 580
    name_in_namespace          go to state 535
    expr_new                   go to state 537
    expression_break           go to state 1578
    expression_continue        go to state 1579
    expression_return_no_pipe  go to state 1580
    expression_yield_no_pipe   go to state 1581
    expr_cast                  go to state 547
    expr_type_decl             go to state 548
    expr_type_info             go to state 549
    block_or_lambda            go to state 550
    expr_full_block            go to state 551
    expr_numeric_const         go to state 552
    expr_named_call            go to state 555
    expr_method_call           go to state 556
    func_addr_expr             go to state 557
    expr_field                 go to state 558
    expr_call                  go to state 559
    expr                       go to state 1582
    expr_mtag                  go to state 561
    basic_type_declaration     go to state 562
    make_decl                  go to state 563
    make_struct_decl           go to state 564
    make_tuple_call            go to state 565
    make_dim_decl              go to state 566
    make_table_decl            go to state 567
    array_comprehension        go to state 568


State 1499

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 82 (expression_if_then_else)


State 1500

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 385

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1583


State 1501

  418 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 418 (expr_named_call)


State 1502

  419 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1584


State 1503

  319 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 319 (tuple_expansion)


State 1504

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  324                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  325                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1585
    '&'  shift, and go to state 401

    $default  reduce using rule 600 (optional_ref)

    optional_ref  go to state 1586


State 1505

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  323                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1587


State 1506

  326 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  327                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 585
    ":="  shift, and go to state 586
    '='   shift, and go to state 587

    copy_or_move_or_clone  go to state 1588


State 1507

  365 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 365 (optional_capture_list)


State 1508

  360 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1589


State 1509

  362 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 362 (capture_list)


State 1510

  364 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 364 (optional_capture_list)


State 1511

  351 block_or_simple_block: "=>" . expr
  352                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "<-"                              shift, and go to state 1590
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1591
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1512

  350 block_or_simple_block: expression_block .

    $default  reduce using rule 350 (block_or_simple_block)


State 1513

  368 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 368 (expr_full_block)


State 1514

  507 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "??"        shift, and go to state 422
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '>'         shift, and go to state 1592
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    dim_list  go to state 428


State 1515

  547 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1516

  513 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1593


State 1517

  545 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 545 (expr_mtag)


State 1518

  421 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 421 (expr_method_call)


State 1519

  542 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 542 (expr_mtag)


State 1520

  518 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1594


State 1521

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr '?' "as" "$f" '(' expr . ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1595


State 1522

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr '.' "?." "$f" '(' expr . ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1596


State 1523

  541 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 541 (expr_mtag)


State 1524

  435 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 976
    ']'  shift, and go to state 1597


State 1525

  434 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 434 (expr_field)


State 1526

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr '.' '.' "$f" '(' expr . ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1598


State 1527

  437 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 437 (expr_field)


State 1528

  556 optional_constant: "const" .

    $default  reduce using rule 556 (optional_constant)


State 1529

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 567 ($@36)

    $@36  go to state 1599


State 1530

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1528

    $default  reduce using rule 555 (optional_constant)

    optional_constant  go to state 1600


State 1531

  562 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 634
    "name"  shift, and go to state 635

    variable_declaration         go to state 1601
    variable_name_with_pos_list  go to state 637


State 1532

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1602


State 1533

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1603


State 1534

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1604


State 1535

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1605


State 1536

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1606


State 1537

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1607


State 1538

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1608


State 1539

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1609


State 1540

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1610


State 1541

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1611


State 1542

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 1612
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1543

  901 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 901 (make_table_decl)


State 1544

  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 267 (optional_expr_map_tuple_list)

    string_builder                go to state 516
    expr_reader                   go to state 517
    optional_expr_map_tuple_list  go to state 1613
    expression_keyword            go to state 580
    name_in_namespace             go to state 535
    expr_new                      go to state 537
    expr_cast                     go to state 547
    expr_type_decl                go to state 548
    expr_type_info                go to state 549
    block_or_lambda               go to state 550
    expr_full_block               go to state 551
    expr_numeric_const            go to state 552
    expr_named_call               go to state 555
    expr_method_call              go to state 556
    func_addr_expr                go to state 557
    expr_field                    go to state 558
    expr_call                     go to state 559
    expr                          go to state 709
    expr_mtag                     go to state 561
    basic_type_declaration        go to state 562
    make_decl                     go to state 563
    make_struct_decl              go to state 564
    make_map_tuple                go to state 718
    make_tuple_call               go to state 565
    make_dim_decl                 go to state 566
    expr_map_tuple_list           go to state 719
    make_table_decl               go to state 567
    array_comprehension           go to state 568


State 1545

  332 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 332 (expr_cast)


State 1546

  335 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 335 (expr_cast)


State 1547

  338 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 338 (expr_cast)


State 1548

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 1614
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1549

  844 use_initializer: "uninitialized" .

    $default  reduce using rule 844 (use_initializer)


State 1550

  862 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 862 (make_struct_decl)


State 1551

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1615


State 1552

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1616


State 1553

  501 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 501 (expr)


State 1554

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  502     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1617


State 1555

  367 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 367 (expr_block)


State 1556

  540 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 540 (expr_mtag)


State 1557

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    ".."                 shift, and go to state 793
    "end of expression"  shift, and go to state 1618
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1619


State 1558

  848 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 848 (make_struct_decl)


State 1559

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    ".."                 shift, and go to state 793
    "end of expression"  shift, and go to state 1618
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1620


State 1560

  850 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 850 (make_struct_decl)


State 1561

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1618

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1621


State 1562

  273 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 273 (expression_keyword)


State 1563

  266 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 263 (optional_expr_list)

    string_builder          go to state 516
    expr_reader             go to state 517
    optional_expr_list      go to state 1622
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 728
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1564

  276 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 276 (expression_keyword)


State 1565

   30 format_string: format_string . STRING_CHARACTER
   33 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1623

    $default  reduce using rule 33 (optional_format_string)


State 1566

  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1618

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1624


State 1567

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    ".."                 shift, and go to state 793
    "end of expression"  shift, and go to state 1618
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1625


State 1568

  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1626
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1569

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  815 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 815 (make_struct_fields)


State 1570

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  814 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 814 (make_struct_fields)


State 1571

  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  817                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 862
    ":="  shift, and go to state 1627
    '='   shift, and go to state 864

    copy_or_move  go to state 1628


State 1572

  427 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 978
    "name"  shift, and go to state 63

    name_in_namespace  go to state 981
    func_addr_name     go to state 1629


State 1573

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 429 ($@26)

    $@26  go to state 1630


State 1574

   67 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 67 (expression_else)


State 1575

  299 expression_return_no_pipe: "return" .
  300                          | "return" . expr_list
  301                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "<-"                              shift, and go to state 1631
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    $default  reduce using rule 299 (expression_return_no_pipe)

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 659
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1576

  305 expression_yield_no_pipe: "yield" . expr
  306                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "<-"                              shift, and go to state 1632
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1633
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1577

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 74 (expression_else_one_liner)


State 1578

   78 expression_if_one_liner: expression_break .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1579

   79 expression_if_one_liner: expression_continue .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1580

   76 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1581

   77 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 77 (expression_if_one_liner)


State 1582

   75 expression_if_one_liner: expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 75 (expression_if_one_liner)


State 1583

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1634


State 1584

  419 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1635


State 1585

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1636


State 1586

  324 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  325                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 585
    ":="  shift, and go to state 586
    '='   shift, and go to state 587

    copy_or_move_or_clone  go to state 1637


State 1587

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  323                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "<-"        shift, and go to state 585
    "??"        shift, and go to state 422
    ":="        shift, and go to state 586
    '='         shift, and go to state 587
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    copy_or_move_or_clone  go to state 1638
    dim_list               go to state 428


State 1588

  326 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  327                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1639
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1640
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1589

  360 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 360 (capture_entry)


State 1590

  352 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1641
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1591

  351 block_or_simple_block: "=>" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    ".."  error (nonassociative)

    $default  reduce using rule 351 (block_or_simple_block)


State 1592

  507 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 506 ($@30)

    $@30  go to state 1642


State 1593

  513 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 512 ($@32)

    $@32  go to state 1643


State 1594

  518 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  788 type_declaration: type_declaration . '|' type_declaration_no_options
  789                 | type_declaration . '|' '#'

    '|'  shift, and go to state 429
    '>'  shift, and go to state 1644


State 1595

  546 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1596

  544 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 544 (expr_mtag)


State 1597

  435 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1645


State 1598

  543 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 543 (expr_mtag)


State 1599

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1646


State 1600

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 569 ($@37)

    $@37  go to state 1647


State 1601

  562 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 562 (structure_variable_declaration)


State 1602

  734 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1603

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    '('     shift, and go to state 1648

    $default  reduce using rule 828 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1649
    make_struct_dim_list           go to state 1650
    make_struct_dim_decl           go to state 1651
    optional_make_struct_dim_decl  go to state 1652


State 1604

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    '('     shift, and go to state 1648

    $default  reduce using rule 828 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1649
    make_struct_dim_list           go to state 1650
    make_struct_dim_decl           go to state 1651
    optional_make_struct_dim_decl  go to state 1653


State 1605

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 343 (expr_type_info)


State 1606

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1654
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1607

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1655
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1608

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 346 (expr_type_info)


State 1609

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1656


State 1610

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1549

    $default  reduce using rule 843 (use_initializer)

    use_initializer  go to state 1657


State 1611

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    $default  reduce using rule 818 (make_variant_dim)

    make_struct_fields  go to state 1658
    make_variant_dim    go to state 1659


State 1612

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1660


State 1613

  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1661


State 1614

  349 expr_list: expr_list . ',' expr
  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 970

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1662


State 1615

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    '('     shift, and go to state 1648

    $default  reduce using rule 828 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1649
    make_struct_dim_list           go to state 1650
    make_struct_dim_decl           go to state 1651
    optional_make_struct_dim_decl  go to state 1663


State 1616

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    $default  reduce using rule 818 (make_variant_dim)

    make_struct_fields  go to state 1658
    make_variant_dim    go to state 1664


State 1617

  502 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 502 (expr)


State 1618

  904 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1665


State 1619

  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1666


State 1620

  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1667


State 1621

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1668


State 1622

  266 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1669

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1670


State 1623

   30 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 30 (format_string)


State 1624

  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1671


State 1625

  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1672


State 1626

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    ".."                 shift, and go to state 793
    "end of expression"  shift, and go to state 1618
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807

    $default  reduce using rule 903 (array_comprehension_where)

    array_comprehension_where  go to state 1673


State 1627

  817 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1674
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1628

  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1675
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1629

  427 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 427 (func_addr_expr)


State 1630

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 978
    "name"  shift, and go to state 63

    name_in_namespace  go to state 981
    func_addr_name     go to state 1676


State 1631

  301 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    expr_list               go to state 886
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 729
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1632

  306 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1677
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1633

  305 expression_yield_no_pipe: "yield" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 305 (expression_yield_no_pipe)


State 1634

  370 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 370 (expr_full_block_assumed_piped)


State 1635

  419 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 419 (expr_named_call)


State 1636

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  321                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  726 type_declaration_no_options: type_declaration_no_options . dim_list
  727                            | type_declaration_no_options . '[' ']'
  735                            | type_declaration_no_options . '-' '[' ']'
  736                            | type_declaration_no_options . "explicit"
  737                            | type_declaration_no_options . "const"
  738                            | type_declaration_no_options . '-' "const"
  739                            | type_declaration_no_options . '&'
  740                            | type_declaration_no_options . '-' '&'
  741                            | type_declaration_no_options . '#'
  742                            | type_declaration_no_options . "implicit"
  743                            | type_declaration_no_options . '-' '#'
  744                            | type_declaration_no_options . "==" "const"
  745                            | type_declaration_no_options . "==" '&'
  746                            | type_declaration_no_options . '?'
  750                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 418
    "implicit"  shift, and go to state 419
    "explicit"  shift, and go to state 420
    "=="        shift, and go to state 421
    "<-"        shift, and go to state 585
    "??"        shift, and go to state 422
    ":="        shift, and go to state 586
    '='         shift, and go to state 587
    '?'         shift, and go to state 423
    '&'         shift, and go to state 424
    '-'         shift, and go to state 425
    '['         shift, and go to state 426
    '#'         shift, and go to state 427

    copy_or_move_or_clone  go to state 1678
    dim_list               go to state 428


State 1637

  324 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  325                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1679
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1680
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1638

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  323                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1681
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1682
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1639

  327 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 327 (tuple_expansion_variable_declaration)


State 1640

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  326 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1683
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1641

  352 block_or_simple_block: "=>" "<-" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 352 (block_or_simple_block)


State 1642

  507 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 507 (expr)


State 1643

  513 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 513 (expr)


State 1644

  518 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 517 ($@34)

    $@34  go to state 1684


State 1645

  435 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 435 (expr_field)


State 1646

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1685


State 1647

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1686


State 1648

  823 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    make_struct_fields  go to state 1687


State 1649

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  825 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 825 (make_struct_dim_decl)


State 1650

  824 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  826 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1688

    $default  reduce using rule 905 (optional_comma)

    optional_comma  go to state 1689


State 1651

  827 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 827 (optional_make_struct_dim_decl)


State 1652

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1690


State 1653

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1691


State 1654

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1692


State 1655

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807
    ')'    shift, and go to state 1693


State 1656

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    '('     shift, and go to state 1648

    $default  reduce using rule 828 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1649
    make_struct_dim_list           go to state 1650
    make_struct_dim_decl           go to state 1651
    optional_make_struct_dim_decl  go to state 1694


State 1657

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244
    '('     shift, and go to state 1648

    $default  reduce using rule 828 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1649
    make_struct_dim_list           go to state 1650
    make_struct_dim_decl           go to state 1651
    optional_make_struct_dim_decl  go to state 1695


State 1658

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  819 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 976

    $default  reduce using rule 819 (make_variant_dim)


State 1659

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1696


State 1660

  889 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 889 (make_dim_decl)


State 1661

  902 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 902 (make_table_decl)


State 1662

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1697


State 1663

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1698


State 1664

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1699


State 1665

  904 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 578
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expression_keyword      go to state 580
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1700
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1666

  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1701


State 1667

  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1702


State 1668

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1703


State 1669

  906 optional_comma: ',' .

    $default  reduce using rule 906 (optional_comma)


State 1670

  266 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1704


State 1671

  911 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 911 (array_comprehension)


State 1672

  907 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 907 (array_comprehension)


State 1673

  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1705


State 1674

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  817 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 817 (make_struct_fields)


State 1675

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  816 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 816 (make_struct_fields)


State 1676

  430 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 430 (func_addr_expr)


State 1677

  306 expression_yield_no_pipe: "yield" "<-" expr .
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 306 (expression_yield_no_pipe)


State 1678

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  321                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 444
    "class"                           shift, and go to state 445
    "true"                            shift, and go to state 450
    "false"                           shift, and go to state 451
    "new"                             shift, and go to state 452
    "typeinfo"                        shift, and go to state 453
    "type"                            shift, and go to state 454
    "array"                           shift, and go to state 455
    "null"                            shift, and go to state 457
    "table"                           shift, and go to state 460
    "deref"                           shift, and go to state 462
    "cast"                            shift, and go to state 465
    "upcast"                          shift, and go to state 466
    "addr"                            shift, and go to state 467
    "reinterpret"                     shift, and go to state 470
    "unsafe"                          shift, and go to state 577
    "fixed_array"                     shift, and go to state 474
    "default"                         shift, and go to state 475
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 476
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 477
    "variant"                         shift, and go to state 478
    "generator"                       shift, and go to state 479
    "++"                              shift, and go to state 481
    "--"                              shift, and go to state 482
    "$ <|"                            shift, and go to state 483
    "@ <|"                            shift, and go to state 484
    "@@ <|"                           shift, and go to state 485
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 486
    "$i"                              shift, and go to state 487
    "$v"                              shift, and go to state 488
    "$b"                              shift, and go to state 489
    "$a"                              shift, and go to state 490
    "$c"                              shift, and go to state 491
    "..."                             shift, and go to state 492
    "[["                              shift, and go to state 493
    "[{"                              shift, and go to state 494
    "{{"                              shift, and go to state 495
    "integer constant"                shift, and go to state 496
    "long integer constant"           shift, and go to state 497
    "unsigned integer constant"       shift, and go to state 498
    "unsigned long integer constant"  shift, and go to state 499
    "unsigned int8 constant"          shift, and go to state 500
    "floating point constant"         shift, and go to state 501
    "double constant"                 shift, and go to state 502
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 579
    "type function"                   shift, and go to state 504
    "start of the string"             shift, and go to state 505
    "begin of code block"             shift, and go to state 506
    '-'                               shift, and go to state 507
    '+'                               shift, and go to state 508
    '*'                               shift, and go to state 509
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 510
    '!'                               shift, and go to state 511
    '['                               shift, and go to state 512
    '('                               shift, and go to state 513
    '$'                               shift, and go to state 514
    '@'                               shift, and go to state 515

    string_builder          go to state 516
    expr_reader             go to state 517
    expr_call_pipe          go to state 530
    expression_keyword      go to state 533
    expr_pipe               go to state 1706
    name_in_namespace       go to state 535
    expr_new                go to state 537
    expr_cast               go to state 547
    expr_type_decl          go to state 548
    expr_type_info          go to state 549
    block_or_lambda         go to state 550
    expr_full_block         go to state 551
    expr_numeric_const      go to state 552
    expr_assign             go to state 660
    expr_named_call         go to state 555
    expr_method_call        go to state 556
    func_addr_expr          go to state 557
    expr_field              go to state 558
    expr_call               go to state 559
    expr                    go to state 1707
    expr_mtag               go to state 561
    basic_type_declaration  go to state 562
    make_decl               go to state 563
    make_struct_decl        go to state 564
    make_tuple_call         go to state 565
    make_dim_decl           go to state 566
    make_table_decl         go to state 567
    array_comprehension     go to state 568


State 1679

  325 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 325 (tuple_expansion_variable_declaration)


State 1680

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  324 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1708
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1681

  323 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 323 (tuple_expansion_variable_declaration)


State 1682

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1709
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1683

  326 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 326 (tuple_expansion_variable_declaration)


State 1684

  518 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 518 (expr)


State 1685

  568 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 568 (struct_variable_declaration_list)


State 1686

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1710


State 1687

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  823 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 976
    ')'  shift, and go to state 1711


State 1688

  824 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  906 optional_comma: ',' .

    '('  shift, and go to state 1712

    $default  reduce using rule 906 (optional_comma)


State 1689

  826 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 826 (make_struct_dim_decl)


State 1690

  853 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 853 (make_struct_decl)


State 1691

  856 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 856 (make_struct_decl)


State 1692

  344 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 344 (expr_type_info)


State 1693

  347 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 347 (expr_type_info)


State 1694

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1713


State 1695

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1714


State 1696

  885 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 885 (make_dim_decl)


State 1697

  893 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 893 (make_dim_decl)


State 1698

  871 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 871 (make_tuple_call)


State 1699

  859 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 859 (make_struct_decl)


State 1700

  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'
  904 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 755
    "as"   shift, and go to state 756
    "<<"   shift, and go to state 765
    ">>"   shift, and go to state 766
    "++"   shift, and go to state 767
    "--"   shift, and go to state 768
    "<="   shift, and go to state 769
    ">="   shift, and go to state 772
    "=="   shift, and go to state 773
    "!="   shift, and go to state 774
    "->"   shift, and go to state 775
    "??"   shift, and go to state 777
    "?."   shift, and go to state 778
    "?["   shift, and go to state 779
    "<|"   shift, and go to state 780
    "|>"   shift, and go to state 781
    "<<<"  shift, and go to state 783
    ">>>"  shift, and go to state 784
    "&&"   shift, and go to state 787
    "||"   shift, and go to state 788
    "^^"   shift, and go to state 789
    ".."   shift, and go to state 793
    '?'    shift, and go to state 795
    '|'    shift, and go to state 796
    '^'    shift, and go to state 797
    '&'    shift, and go to state 798
    '<'    shift, and go to state 799
    '>'    shift, and go to state 800
    '-'    shift, and go to state 801
    '+'    shift, and go to state 802
    '*'    shift, and go to state 803
    '/'    shift, and go to state 804
    '%'    shift, and go to state 805
    '.'    shift, and go to state 806
    '['    shift, and go to state 807

    $default  reduce using rule 904 (array_comprehension_where)


State 1701

  909 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 909 (array_comprehension)


State 1702

  910 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 910 (array_comprehension)


State 1703

  912 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 912 (array_comprehension)


State 1704

  266 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 266 (optional_expr_list_in_braces)


State 1705

  908 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 908 (array_comprehension)


State 1706

  321 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 321 (tuple_expansion_variable_declaration)


State 1707

  235 expr_call_pipe: expr . expr_full_block_assumed_piped
  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  378 expr_assign: expr .
  379            | expr . '=' expr
  380            | expr . "<-" expr
  381            | expr . ":=" expr
  382            | expr . "&=" expr
  383            | expr . "|=" expr
  384            | expr . "^=" expr
  385            | expr . "&&=" expr
  386            | expr . "||=" expr
  387            | expr . "^^=" expr
  388            | expr . "+=" expr
  389            | expr . "-=" expr
  390            | expr . "*=" expr
  391            | expr . "/=" expr
  392            | expr . "%=" expr
  393            | expr . "<<=" expr
  394            | expr . ">>=" expr
  395            | expr . "<<<=" expr
  396            | expr . ">>>=" expr
  420 expr_method_call: expr . "->" "name" '(' ')'
  421                 | expr . "->" "name" '(' expr_list ')'
  431 expr_field: expr . '.' "name"
  432           | expr . '.' '.' "name"
  433           | expr . '.' "name" '(' ')'
  434           | expr . '.' "name" '(' expr_list ')'
  435           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  436           | expr . '.' basic_type_declaration '(' ')'
  437           | expr . '.' basic_type_declaration '(' expr_list ')'
  440           | expr . '.' $@27 error $@28
  462 expr: expr . "<<" expr
  463     | expr . ">>" expr
  464     | expr . "<<<" expr
  465     | expr . ">>>" expr
  466     | expr . '+' expr
  467     | expr . '-' expr
  468     | expr . '*' expr
  469     | expr . '/' expr
  470     | expr . '%' expr
  471     | expr . '<' expr
  472     | expr . '>' expr
  473     | expr . "==" expr
  474     | expr . "!=" expr
  475     | expr . "<=" expr
  476     | expr . ">=" expr
  477     | expr . '&' expr
  478     | expr . '|' expr
  479     | expr . '^' expr
  480     | expr . "&&" expr
  481     | expr . "||" expr
  482     | expr . "^^" expr
  483     | expr . ".." expr
  486     | expr . "++"
  487     | expr . "--"
  490     | expr . '[' expr ']'
  491     | expr . '.' '[' expr ']'
  492     | expr . "?[" expr ']'
  493     | expr . '.' "?[" expr ']'
  494     | expr . "?." "name"
  495     | expr . '.' "?." "name"
  503     | expr . "??" expr
  504     | expr . '?' expr ':' expr
  507     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  508     | expr . "is" basic_type_declaration
  509     | expr . "is" "name"
  510     | expr . "as" "name"
  513     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  514     | expr . "as" basic_type_declaration
  515     | expr . '?' "as" "name"
  518     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  519     | expr . '?' "as" basic_type_declaration
  527     | expr . "<|" expr
  528     | expr . "|>" expr
  529     | expr . "|>" basic_type_declaration
  541 expr_mtag: expr . '.' "$f" '(' expr ')'
  542          | expr . "?." "$f" '(' expr ')'
  543          | expr . '.' '.' "$f" '(' expr ')'
  544          | expr . '.' "?." "$f" '(' expr ')'
  545          | expr . "as" "$f" '(' expr ')'
  546          | expr . '?' "as" "$f" '(' expr ')'
  547          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 755
    "as"                 shift, and go to state 756
    "+="                 shift, and go to state 888
    "-="                 shift, and go to state 889
    "/="                 shift, and go to state 890
    "*="                 shift, and go to state 891
    "%="                 shift, and go to state 892
    "&="                 shift, and go to state 893
    "|="                 shift, and go to state 894
    "^="                 shift, and go to state 895
    "<<"                 shift, and go to state 765
    ">>"                 shift, and go to state 766
    "++"                 shift, and go to state 767
    "--"                 shift, and go to state 768
    "<="                 shift, and go to state 769
    "<<="                shift, and go to state 896
    ">>="                shift, and go to state 897
    ">="                 shift, and go to state 772
    "=="                 shift, and go to state 773
    "!="                 shift, and go to state 774
    "->"                 shift, and go to state 775
    "<-"                 shift, and go to state 898
    "??"                 shift, and go to state 777
    "?."                 shift, and go to state 778
    "?["                 shift, and go to state 779
    "<|"                 shift, and go to state 780
    "|>"                 shift, and go to state 781
    ":="                 shift, and go to state 782
    "<<<"                shift, and go to state 783
    ">>>"                shift, and go to state 784
    "<<<="               shift, and go to state 899
    ">>>="               shift, and go to state 900
    "&&"                 shift, and go to state 787
    "||"                 shift, and go to state 788
    "^^"                 shift, and go to state 789
    "&&="                shift, and go to state 901
    "||="                shift, and go to state 902
    "^^="                shift, and go to state 903
    ".."                 shift, and go to state 793
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 904
    '?'                  shift, and go to state 795
    '|'                  shift, and go to state 796
    '^'                  shift, and go to state 797
    '&'                  shift, and go to state 798
    '<'                  shift, and go to state 799
    '>'                  shift, and go to state 800
    '-'                  shift, and go to state 801
    '+'                  shift, and go to state 802
    '*'                  shift, and go to state 803
    '/'                  shift, and go to state 804
    '%'                  shift, and go to state 805
    '.'                  shift, and go to state 806
    '['                  shift, and go to state 807
    '$'                  shift, and go to state 514
    '@'                  shift, and go to state 692

    $default  reduce using rule 378 (expr_assign)

    semicolon                      go to state 1715
    block_or_lambda                go to state 741
    expr_full_block_assumed_piped  go to state 808


State 1708

  324 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 324 (tuple_expansion_variable_declaration)


State 1709

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 322 (tuple_expansion_variable_declaration)


State 1710

  570 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 570 (struct_variable_declaration_list)


State 1711

  823 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 823 (make_struct_dim_list)


State 1712

  824 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 730
    "name"  shift, and go to state 1244

    make_struct_fields  go to state 1716


State 1713

  879 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 879 (make_dim_decl)


State 1714

  882 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 882 (make_dim_decl)


State 1715

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 320 (tuple_expansion_variable_declaration)


State 1716

  812 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  813                   | make_struct_fields . ',' "name" ":=" expr
  816                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  817                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  824 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 976
    ')'  shift, and go to state 1717


State 1717

  824 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 824 (make_struct_dim_list)
