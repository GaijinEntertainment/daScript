Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 336 conflicts: 1 shift/reduce
State 373 conflicts: 2 shift/reduce
State 438 conflicts: 1 shift/reduce
State 555 conflicts: 2 shift/reduce
State 557 conflicts: 2 shift/reduce
State 667 conflicts: 1 shift/reduce
State 750 conflicts: 1 shift/reduce
State 961 conflicts: 1 shift/reduce
State 1105 conflicts: 1 shift/reduce
State 1220 conflicts: 1 shift/reduce
State 1221 conflicts: 1 shift/reduce
State 1515 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 optional_not_required: %empty
   23                      | '!' "inscope"

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   25 character_sequence: STRING_CHARACTER
   26                   | STRING_CHARACTER_ESC
   27                   | character_sequence STRING_CHARACTER
   28                   | character_sequence STRING_CHARACTER_ESC

   29 string_constant: "start of the string" character_sequence "end of the string"
   30                | "start of the string" "end of the string"

   31 format_string: %empty
   32              | format_string STRING_CHARACTER

   33 optional_format_string: %empty

   34 $@1: %empty

   35 optional_format_string: ':' $@1 format_string

   36 string_builder_body: %empty
   37                    | string_builder_body character_sequence
   38                    | string_builder_body "{" expr optional_format_string "}"

   39 string_builder: "start of the string" string_builder_body "end of the string"

   40 reader_character_sequence: STRING_CHARACTER
   41                          | reader_character_sequence STRING_CHARACTER

   42 $@2: %empty

   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   44 options_declaration: "options" annotation_argument_list

   45 require_declaration: "require" require_module

   46 keyword_or_name: "name"
   47                | "keyword"
   48                | "type function"

   49 require_module_name: keyword_or_name
   50                    | '%' require_module_name
   51                    | require_module_name '.' keyword_or_name
   52                    | require_module_name '/' keyword_or_name

   53 require_module: require_module_name is_public_module
   54               | require_module_name "as" "name" is_public_module

   55 is_public_module: %empty
   56                 | "public"

   57 expect_declaration: "expect" expect_list

   58 expect_list: expect_error
   59            | expect_list ',' expect_error

   60 expect_error: "integer constant"
   61             | "integer constant" ':' "integer constant"

   62 expression_label: "label" "integer constant" ':'

   63 expression_goto: "goto" "label" "integer constant"
   64                | "goto" expr

   65 elif_or_static_elif: "elif"
   66                    | "static_elif"

   67 expression_else: %empty
   68                | "else" expression_block
   69                | elif_or_static_elif expr expression_block expression_else

   70 semicolon: "end of line"
   71          | "end of expression"

   72 if_or_static_if: "if"
   73                | "static_if"

   74 expression_else_one_liner: %empty

   75 $@3: %empty

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return_no_pipe
   79                        | expression_yield_no_pipe
   80                        | expression_break
   81                        | expression_continue

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else

   83 $@4: %empty

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   85 $@5: %empty

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   87 expression_unsafe: "unsafe" expression_block

   88 expression_while_loop: "while" expr expression_block

   89 expression_with: "with" expr expression_block

   90 $@6: %empty

   91 expression_with_alias: "assume" "name" '=' $@6 expr
   92                      | "assume" "type" "name" '=' type_declaration

   93 annotation_argument_value: string_constant
   94                          | "name"
   95                          | "integer constant"
   96                          | "floating point constant"
   97                          | "true"
   98                          | "false"

   99 annotation_argument_value_list: annotation_argument_value
  100                               | annotation_argument_value_list ',' annotation_argument_value

  101 annotation_argument_name: "name"
  102                         | "type"
  103                         | "in"

  104 annotation_argument: annotation_argument_name '=' string_constant
  105                    | annotation_argument_name '=' "name"
  106                    | annotation_argument_name '=' "integer constant"
  107                    | annotation_argument_name '=' "floating point constant"
  108                    | annotation_argument_name '=' "true"
  109                    | annotation_argument_name '=' "false"
  110                    | annotation_argument_name
  111                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  112 annotation_argument_list: annotation_argument
  113                         | annotation_argument_list ',' annotation_argument

  114 metadata_argument_list: '@' annotation_argument
  115                       | metadata_argument_list '@' annotation_argument
  116                       | metadata_argument_list semicolon

  117 annotation_declaration_name: name_in_namespace
  118                            | "require"
  119                            | "private"
  120                            | "template"

  121 annotation_declaration_basic: annotation_declaration_name
  122                             | annotation_declaration_name '(' annotation_argument_list ')'

  123 annotation_declaration: annotation_declaration_basic
  124                       | '!' annotation_declaration
  125                       | annotation_declaration "&&" annotation_declaration
  126                       | annotation_declaration "||" annotation_declaration
  127                       | annotation_declaration "^^" annotation_declaration
  128                       | '(' annotation_declaration ')'
  129                       | "|>" annotation_declaration

  130 annotation_list: annotation_declaration
  131                | annotation_list ',' annotation_declaration

  132 optional_annotation_list: %empty
  133                         | '[' annotation_list ']'

  134 optional_function_argument_list: %empty
  135                                | '(' ')'
  136                                | '(' function_argument_list ')'

  137 optional_function_type: %empty
  138                       | ':' type_declaration

  139 function_name: "name"
  140              | "operator" '!'
  141              | "operator" '~'
  142              | "operator" "+="
  143              | "operator" "-="
  144              | "operator" "*="
  145              | "operator" "/="
  146              | "operator" "%="
  147              | "operator" "&="
  148              | "operator" "|="
  149              | "operator" "^="
  150              | "operator" "&&="
  151              | "operator" "||="
  152              | "operator" "^^="
  153              | "operator" "&&"
  154              | "operator" "||"
  155              | "operator" "^^"
  156              | "operator" '+'
  157              | "operator" '-'
  158              | "operator" '*'
  159              | "operator" '/'
  160              | "operator" '%'
  161              | "operator" '<'
  162              | "operator" '>'
  163              | "operator" ".."
  164              | "operator" "=="
  165              | "operator" "!="
  166              | "operator" "<="
  167              | "operator" ">="
  168              | "operator" '&'
  169              | "operator" '|'
  170              | "operator" '^'
  171              | "++" "operator"
  172              | "--" "operator"
  173              | "operator" "++"
  174              | "operator" "--"
  175              | "operator" "<<"
  176              | "operator" ">>"
  177              | "operator" "<<="
  178              | "operator" ">>="
  179              | "operator" "<<<"
  180              | "operator" ">>>"
  181              | "operator" "<<<="
  182              | "operator" ">>>="
  183              | "operator" '[' ']'
  184              | "operator" "?[" ']'
  185              | "operator" '.'
  186              | "operator" "?."
  187              | "operator" '.' "name"
  188              | "operator" '.' "name" ":="
  189              | "operator" '.' "name" "+="
  190              | "operator" '.' "name" "-="
  191              | "operator" '.' "name" "*="
  192              | "operator" '.' "name" "/="
  193              | "operator" '.' "name" "%="
  194              | "operator" '.' "name" "&="
  195              | "operator" '.' "name" "|="
  196              | "operator" '.' "name" "^="
  197              | "operator" '.' "name" "&&="
  198              | "operator" '.' "name" "||="
  199              | "operator" '.' "name" "^^="
  200              | "operator" "?." "name"
  201              | "operator" ":="
  202              | "operator" "delete"
  203              | "operator" "??"
  204              | "operator" "is"
  205              | "operator" "as"
  206              | "operator" "is" "name"
  207              | "operator" "as" "name"
  208              | "operator" '?' "as"
  209              | "operator" '?' "as" "name"
  210              | "bool"
  211              | "string"
  212              | "int"
  213              | "int2"
  214              | "int3"
  215              | "int4"
  216              | "uint"
  217              | "uint2"
  218              | "uint3"
  219              | "uint4"
  220              | "float"
  221              | "float2"
  222              | "float3"
  223              | "float4"
  224              | "range"
  225              | "urange"
  226              | "range64"
  227              | "urange64"
  228              | "int64"
  229              | "uint64"
  230              | "double"
  231              | "int8"
  232              | "uint8"
  233              | "int16"
  234              | "uint16"

  235 global_function_declaration: optional_annotation_list "def" function_declaration

  236 optional_public_or_private_function: %empty
  237                                    | "private"
  238                                    | "public"

  239 function_declaration_header: function_name optional_function_argument_list optional_function_type

  240 $@7: %empty

  241 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  242 open_block: "begin of code block"
  243           | "new scope"

  244 close_block: "end of code block"
  245            | "close scope"

  246 expression_block: open_block expressions close_block
  247                 | open_block expressions close_block "finally" open_block expressions close_block

  248 expr_call_pipe: expr expr_full_block_assumed_piped
  249               | expression_keyword expr_full_block_assumed_piped
  250               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  251 expression_any: semicolon
  252               | expr_pipe
  253               | expr_keyword
  254               | expr_assign_pipe
  255               | expr_assign semicolon
  256               | expression_delete semicolon
  257               | expression_let
  258               | expression_while_loop
  259               | expression_unsafe
  260               | expression_with
  261               | expression_with_alias
  262               | expression_for_loop
  263               | expression_break semicolon
  264               | expression_continue semicolon
  265               | expression_return
  266               | expression_yield
  267               | expression_if_then_else
  268               | expression_try_catch
  269               | expression_label semicolon
  270               | expression_goto semicolon
  271               | "pass" semicolon

  272 expressions: %empty
  273            | expressions expression_any
  274            | expressions error

  275 expr_keyword: "keyword" expr expression_block

  276 optional_expr_list: %empty
  277                   | expr_list optional_comma

  278 optional_expr_list_in_braces: %empty
  279                             | '(' optional_expr_list optional_comma ')'

  280 optional_expr_map_tuple_list: %empty
  281                             | expr_map_tuple_list optional_comma

  282 type_declaration_no_options_list: type_declaration
  283                                 | type_declaration_no_options_list c_or_s type_declaration

  284 $@8: %empty

  285 $@9: %empty

  286 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  287 $@10: %empty

  288 $@11: %empty

  289 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  290 expr_pipe: expr_assign " <|" expr_block
  291          | "@ <|" expr_block
  292          | "@@ <|" expr_block
  293          | "$ <|" expr_block
  294          | expr_call_pipe

  295 name_in_namespace: "name"
  296                  | "name" "::" "name"
  297                  | "::" "name"

  298 expression_delete: "delete" expr
  299                  | "delete" "explicit" expr

  300 $@12: %empty

  301 $@13: %empty

  302 new_type_declaration: '<' $@12 type_declaration '>' $@13
  303                     | structure_type_declaration

  304 expr_new: "new" new_type_declaration
  305         | "new" new_type_declaration '(' use_initializer ')'
  306         | "new" new_type_declaration '(' expr_list ')'
  307         | "new" new_type_declaration '(' make_struct_single ')'
  308         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  309         | "new" make_decl

  310 expression_break: "break"

  311 expression_continue: "continue"

  312 expression_return_no_pipe: "return"
  313                          | "return" expr_list
  314                          | "return" "<-" expr_list

  315 expression_return: expression_return_no_pipe semicolon
  316                  | "return" expr_pipe
  317                  | "return" "<-" expr_pipe

  318 expression_yield_no_pipe: "yield" expr
  319                         | "yield" "<-" expr

  320 expression_yield: expression_yield_no_pipe semicolon
  321                 | "yield" expr_pipe
  322                 | "yield" "<-" expr_pipe

  323 expression_try_catch: "try" expression_block "recover" expression_block

  324 kwd_let_var_or_nothing: "let"
  325                       | "var"
  326                       | %empty

  327 kwd_let: "let"
  328        | "var"

  329 optional_in_scope: "inscope"
  330                  | %empty

  331 tuple_expansion: "name"
  332                | tuple_expansion ',' "name"

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  335                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  336                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  337                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  338                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  339                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  340                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  341 expression_let: kwd_let optional_in_scope let_variable_declaration
  342               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  343 $@14: %empty

  344 $@15: %empty

  345 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  346 $@16: %empty

  347 $@17: %empty

  348 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  349 $@18: %empty

  350 $@19: %empty

  351 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  352 $@20: %empty

  353 $@21: %empty

  354 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  355 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  356               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  357               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  358               | "typeinfo" name_in_namespace '(' expr ')'
  359               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  360               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  361 expr_list: expr
  362          | expr_list ',' expr

  363 block_or_simple_block: expression_block
  364                      | "=>" expr
  365                      | "=>" "<-" expr

  366 block_or_lambda: '$'
  367                | '@'
  368                | '@' '@'

  369 capture_entry: '&' "name"
  370              | '=' "name"
  371              | "<-" "name"
  372              | ":=" "name"
  373              | "name" '(' "name" ')'

  374 capture_list: capture_entry
  375             | capture_list ',' capture_entry

  376 optional_capture_list: %empty
  377                      | "[[" capture_list ']' ']'
  378                      | "capture" '(' capture_list ')'

  379 expr_block: expression_block
  380           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  381 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  382 $@22: %empty

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  384 expr_numeric_const: "integer constant"
  385                   | "unsigned integer constant"
  386                   | "long integer constant"
  387                   | "unsigned long integer constant"
  388                   | "unsigned int8 constant"
  389                   | "floating point constant"
  390                   | "double constant"

  391 expr_assign: expr
  392            | expr '=' expr
  393            | expr "<-" expr
  394            | expr ":=" expr
  395            | expr "&=" expr
  396            | expr "|=" expr
  397            | expr "^=" expr
  398            | expr "&&=" expr
  399            | expr "||=" expr
  400            | expr "^^=" expr
  401            | expr "+=" expr
  402            | expr "-=" expr
  403            | expr "*=" expr
  404            | expr "/=" expr
  405            | expr "%=" expr
  406            | expr "<<=" expr
  407            | expr ">>=" expr
  408            | expr "<<<=" expr
  409            | expr ">>>=" expr

  410 expr_assign_pipe_right: "@ <|" expr_block
  411                       | "@@ <|" expr_block
  412                       | "$ <|" expr_block
  413                       | expr_call_pipe

  414 expr_assign_pipe: expr '=' expr_assign_pipe_right
  415                 | expr "<-" expr_assign_pipe_right
  416                 | expr "&=" expr_assign_pipe_right
  417                 | expr "|=" expr_assign_pipe_right
  418                 | expr "^=" expr_assign_pipe_right
  419                 | expr "&&=" expr_assign_pipe_right
  420                 | expr "||=" expr_assign_pipe_right
  421                 | expr "^^=" expr_assign_pipe_right
  422                 | expr "+=" expr_assign_pipe_right
  423                 | expr "-=" expr_assign_pipe_right
  424                 | expr "*=" expr_assign_pipe_right
  425                 | expr "/=" expr_assign_pipe_right
  426                 | expr "%=" expr_assign_pipe_right
  427                 | expr "<<=" expr_assign_pipe_right
  428                 | expr ">>=" expr_assign_pipe_right
  429                 | expr "<<<=" expr_assign_pipe_right
  430                 | expr ">>>=" expr_assign_pipe_right

  431 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  432                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  433 expr_method_call: expr "->" "name" '(' ')'
  434                 | expr "->" "name" '(' expr_list ')'

  435 func_addr_name: name_in_namespace
  436               | "$i" '(' expr ')'

  437 func_addr_expr: '@' '@' func_addr_name

  438 $@23: %empty

  439 $@24: %empty

  440 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  441 $@25: %empty

  442 $@26: %empty

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  444 expr_field: expr '.' "name"
  445           | expr '.' '.' "name"
  446           | expr '.' "name" '(' ')'
  447           | expr '.' "name" '(' expr_list ')'
  448           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr '.' basic_type_declaration '(' ')'
  450           | expr '.' basic_type_declaration '(' expr_list ')'

  451 $@27: %empty

  452 $@28: %empty

  453 expr_field: expr '.' $@27 error $@28

  454 expr_call: name_in_namespace '(' ')'
  455          | name_in_namespace '(' "uninitialized" ')'
  456          | name_in_namespace '(' make_struct_single ')'
  457          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  458          | name_in_namespace '(' expr_list ')'
  459          | basic_type_declaration '(' ')'
  460          | basic_type_declaration '(' expr_list ')'

  461 expr: "null"
  462     | name_in_namespace
  463     | expr_numeric_const
  464     | expr_reader
  465     | string_builder
  466     | make_decl
  467     | "true"
  468     | "false"
  469     | expr_field
  470     | expr_mtag
  471     | '!' expr
  472     | '~' expr
  473     | '+' expr
  474     | '-' expr
  475     | expr "<<" expr
  476     | expr ">>" expr
  477     | expr "<<<" expr
  478     | expr ">>>" expr
  479     | expr '+' expr
  480     | expr '-' expr
  481     | expr '*' expr
  482     | expr '/' expr
  483     | expr '%' expr
  484     | expr '<' expr
  485     | expr '>' expr
  486     | expr "==" expr
  487     | expr "!=" expr
  488     | expr "<=" expr
  489     | expr ">=" expr
  490     | expr '&' expr
  491     | expr '|' expr
  492     | expr '^' expr
  493     | expr "&&" expr
  494     | expr "||" expr
  495     | expr "^^" expr
  496     | expr ".." expr
  497     | "++" expr
  498     | "--" expr
  499     | expr "++"
  500     | expr "--"
  501     | '(' expr_list optional_comma ')'
  502     | '(' make_struct_single ')'
  503     | expr '[' expr ']'
  504     | expr '.' '[' expr ']'
  505     | expr "?[" expr ']'
  506     | expr '.' "?[" expr ']'
  507     | expr "?." "name"
  508     | expr '.' "?." "name"
  509     | func_addr_expr
  510     | expr_call
  511     | '*' expr
  512     | "deref" '(' expr ')'
  513     | "addr" '(' expr ')'
  514     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  516     | expr "??" expr
  517     | expr '?' expr ':' expr

  518 $@29: %empty

  519 $@30: %empty

  520 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr "is" basic_type_declaration
  522     | expr "is" "name"
  523     | expr "as" "name"

  524 $@31: %empty

  525 $@32: %empty

  526 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr "as" basic_type_declaration
  528     | expr '?' "as" "name"

  529 $@33: %empty

  530 $@34: %empty

  531 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr '?' "as" basic_type_declaration
  533     | expr_type_info
  534     | expr_type_decl
  535     | expr_cast
  536     | expr_new
  537     | expr_method_call
  538     | expr_named_call
  539     | expr_full_block
  540     | expr "<|" expr
  541     | expr "|>" expr
  542     | expr "|>" basic_type_declaration
  543     | name_in_namespace "name"
  544     | "unsafe" '(' expr ')'
  545     | expression_keyword

  546 expr_mtag: "$$" '(' expr ')'
  547          | "$i" '(' expr ')'
  548          | "$v" '(' expr ')'
  549          | "$b" '(' expr ')'
  550          | "$a" '(' expr ')'
  551          | "..."
  552          | "$c" '(' expr ')' '(' ')'
  553          | "$c" '(' expr ')' '(' expr_list ')'
  554          | expr '.' "$f" '(' expr ')'
  555          | expr "?." "$f" '(' expr ')'
  556          | expr '.' '.' "$f" '(' expr ')'
  557          | expr '.' "?." "$f" '(' expr ')'
  558          | expr "as" "$f" '(' expr ')'
  559          | expr '?' "as" "$f" '(' expr ')'
  560          | expr "is" "$f" '(' expr ')'
  561          | '@' '@' "$c" '(' expr ')'

  562 optional_field_annotation: %empty
  563                          | "[[" annotation_argument_list ']' ']'
  564                          | metadata_argument_list

  565 optional_override: %empty
  566                  | "override"
  567                  | "sealed"

  568 optional_constant: %empty
  569                  | "const"

  570 optional_public_or_private_member_variable: %empty
  571                                           | "public"
  572                                           | "private"

  573 optional_static_member_variable: %empty
  574                                | "static"

  575 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  576 struct_variable_declaration_list: %empty
  577                                 | struct_variable_declaration_list semicolon

  578 $@35: %empty

  579 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  580 $@36: %empty

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  582 $@37: %empty

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  584                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  585 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  586 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  587                                   | "$a" '(' expr ')'

  588 function_argument_list: function_argument_declaration_no_type
  589                       | function_argument_declaration_type
  590                       | function_argument_declaration_no_type semicolon function_argument_list
  591                       | function_argument_declaration_type semicolon function_argument_list
  592                       | function_argument_declaration_type ',' function_argument_list

  593 tuple_type: type_declaration
  594           | "name" ':' type_declaration

  595 tuple_type_list: tuple_type
  596                | tuple_type_list c_or_s tuple_type

  597 tuple_alias_type_list: %empty
  598                      | tuple_alias_type_list c_or_s
  599                      | tuple_alias_type_list tuple_type c_or_s

  600 variant_type: "name" ':' type_declaration

  601 variant_type_list: variant_type
  602                  | variant_type_list c_or_s variant_type

  603 variant_alias_type_list: %empty
  604                        | variant_alias_type_list c_or_s
  605                        | variant_alias_type_list variant_type c_or_s

  606 copy_or_move: '='
  607             | "<-"

  608 variable_declaration_no_type: variable_name_with_pos_list
  609                             | variable_name_with_pos_list '&'
  610                             | variable_name_with_pos_list copy_or_move expr

  611 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  612                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  613 variable_declaration: variable_declaration_type
  614                     | variable_declaration_no_type

  615 copy_or_move_or_clone: '='
  616                      | "<-"
  617                      | ":="

  618 optional_ref: %empty
  619             | '&'

  620 let_variable_name_with_pos_list: "name"
  621                                | "$i" '(' expr ')'
  622                                | "name" "aka" "name"
  623                                | let_variable_name_with_pos_list ',' "name"
  624                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  626                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  627                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  628                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  629                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  630 global_variable_declaration_list: %empty
  631                                 | global_variable_declaration_list "end of line"

  632 $@38: %empty

  633 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  634 optional_shared: %empty
  635                | "shared"

  636 optional_public_or_private_variable: %empty
  637                                    | "private"
  638                                    | "public"

  639 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  640 $@39: %empty

  641 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  642 enum_list: %empty
  643          | enum_list semicolon
  644          | enum_list "name" semicolon
  645          | enum_list "name" '=' expr semicolon

  646 optional_public_or_private_alias: %empty
  647                                 | "private"
  648                                 | "public"

  649 $@40: %empty

  650 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  651 alias_list: single_alias semicolon
  652           | alias_list single_alias semicolon

  653 alias_declaration: "typedef" open_block alias_list close_block

  654 $@41: %empty

  655 alias_declaration: "typedef" $@41 single_alias semicolon

  656 optional_public_or_private_enum: %empty
  657                                | "private"
  658                                | "public"

  659 enum_name: "name"

  660 $@42: %empty

  661 $@43: %empty

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  663 $@44: %empty

  664 $@45: %empty

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  666 optional_structure_parent: %empty
  667                          | ':' name_in_namespace

  668 optional_sealed: %empty
  669                | "sealed"

  670 structure_name: optional_sealed "name" optional_structure_parent

  671 class_or_struct: "class"
  672                | "struct"
  673                | "template" "class"
  674                | "template" "struct"

  675 optional_public_or_private_structure: %empty
  676                                     | "private"
  677                                     | "public"

  678 optional_struct_variable_declaration_list: %empty
  679                                          | open_block struct_variable_declaration_list close_block

  680 $@46: %empty

  681 $@47: %empty

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  683 variable_name_with_pos_list: "name"
  684                            | "$i" '(' expr ')'
  685                            | "name" "aka" "name"
  686                            | variable_name_with_pos_list ',' "name"
  687                            | variable_name_with_pos_list ',' "name" "aka" "name"

  688 basic_type_declaration: "bool"
  689                       | "string"
  690                       | "int"
  691                       | "int8"
  692                       | "int16"
  693                       | "int64"
  694                       | "int2"
  695                       | "int3"
  696                       | "int4"
  697                       | "uint"
  698                       | "uint8"
  699                       | "uint16"
  700                       | "uint64"
  701                       | "uint2"
  702                       | "uint3"
  703                       | "uint4"
  704                       | "float"
  705                       | "float2"
  706                       | "float3"
  707                       | "float4"
  708                       | "void"
  709                       | "range"
  710                       | "urange"
  711                       | "range64"
  712                       | "urange64"
  713                       | "double"
  714                       | "bitfield"

  715 enum_basic_type_declaration: "int"
  716                            | "int8"
  717                            | "int16"
  718                            | "uint"
  719                            | "uint8"
  720                            | "uint16"
  721                            | "int64"
  722                            | "uint64"

  723 structure_type_declaration: name_in_namespace

  724 auto_type_declaration: "auto"
  725                      | "auto" '(' "name" ')'
  726                      | "$t" '(' expr ')'

  727 bitfield_bits: "name"
  728              | bitfield_bits semicolon "name"

  729 bitfield_alias_bits: %empty
  730                    | bitfield_alias_bits semicolon
  731                    | bitfield_alias_bits "name" semicolon
  732                    | bitfield_alias_bits "name" '=' expr semicolon

  733 bitfield_basic_type_declaration: %empty
  734                                | ':' "uint8"
  735                                | ':' "uint16"
  736                                | ':' "uint"
  737                                | ':' "uint64"

  738 $@48: %empty

  739 $@49: %empty

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49

  741 c_or_s: ','
  742       | semicolon

  743 table_type_pair: type_declaration
  744                | type_declaration c_or_s type_declaration

  745 dim_list: '[' expr ']'
  746         | dim_list '[' expr ']'

  747 type_declaration_no_options: basic_type_declaration
  748                            | auto_type_declaration
  749                            | bitfield_type_declaration
  750                            | structure_type_declaration
  751                            | type_declaration_no_options dim_list
  752                            | type_declaration_no_options '[' ']'

  753 $@50: %empty

  754 $@51: %empty

  755 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  756                            | "typedecl" '(' expr ')'
  757                            | '$' name_in_namespace '(' optional_expr_list ')'

  758 $@52: %empty

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  760                            | type_declaration_no_options '-' '[' ']'
  761                            | type_declaration_no_options "explicit"
  762                            | type_declaration_no_options "const"
  763                            | type_declaration_no_options '-' "const"
  764                            | type_declaration_no_options '&'
  765                            | type_declaration_no_options '-' '&'
  766                            | type_declaration_no_options '#'
  767                            | type_declaration_no_options "implicit"
  768                            | type_declaration_no_options '-' '#'
  769                            | type_declaration_no_options "==" "const"
  770                            | type_declaration_no_options "==" '&'
  771                            | type_declaration_no_options '?'

  772 $@53: %empty

  773 $@54: %empty

  774 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  775                            | type_declaration_no_options "??"

  776 $@55: %empty

  777 $@56: %empty

  778 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  779 $@57: %empty

  780 $@58: %empty

  781 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  782 $@59: %empty

  783 $@60: %empty

  784 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  785                            | "block"

  786 $@61: %empty

  787 $@62: %empty

  788 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  789 $@63: %empty

  790 $@64: %empty

  791 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  792                            | "function"

  793 $@65: %empty

  794 $@66: %empty

  795 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  796 $@67: %empty

  797 $@68: %empty

  798 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  799                            | "lambda"

  800 $@69: %empty

  801 $@70: %empty

  802 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  803 $@71: %empty

  804 $@72: %empty

  805 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  806 $@73: %empty

  807 $@74: %empty

  808 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  809 $@75: %empty

  810 $@76: %empty

  811 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  812 type_declaration: type_declaration_no_options
  813                 | type_declaration '|' type_declaration_no_options
  814                 | type_declaration '|' '#'

  815 $@77: %empty

  816 $@78: %empty

  817 $@79: %empty

  818 $@80: %empty

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  820 $@81: %empty

  821 $@82: %empty

  822 $@83: %empty

  823 $@84: %empty

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  825 $@85: %empty

  826 $@86: %empty

  827 $@87: %empty

  828 $@88: %empty

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

  830 make_decl: make_struct_decl
  831          | make_dim_decl
  832          | make_table_decl
  833          | array_comprehension
  834          | make_tuple_call

  835 make_struct_fields: "name" copy_or_move expr
  836                   | "name" ":=" expr
  837                   | make_struct_fields ',' "name" copy_or_move expr
  838                   | make_struct_fields ',' "name" ":=" expr
  839                   | "$f" '(' expr ')' copy_or_move expr
  840                   | "$f" '(' expr ')' ":=" expr
  841                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  843 make_variant_dim: %empty
  844                 | make_struct_fields

  845 make_struct_single: make_struct_fields optional_comma

  846 make_struct_dim: make_struct_fields
  847                | make_struct_dim "end of expression" make_struct_fields

  848 make_struct_dim_list: '(' make_struct_fields ')'
  849                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  850 make_struct_dim_decl: make_struct_fields
  851                     | make_struct_dim_list optional_comma

  852 optional_make_struct_dim_decl: make_struct_dim_decl
  853                              | %empty

  854 optional_block: %empty
  855               | "where" expr_block

  856 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  857                                    | ";}}"

  858 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  859                                    | ";}]"

  860 optional_trailing_semicolon_sqr_sqr: ']' ']'
  861                                    | ";]]"

  862 optional_trailing_delim_sqr_sqr: ']' ']'
  863                                | ";]]"
  864                                | ",]]"

  865 optional_trailing_delim_cur_sqr: "end of code block" ']'
  866                                | ";}]"
  867                                | ",}]"

  868 use_initializer: %empty
  869                | "uninitialized"

  870 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  873                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  874                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  875                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  876 $@89: %empty

  877 $@90: %empty

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  879 $@91: %empty

  880 $@92: %empty

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  882 $@93: %empty

  883 $@94: %empty

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  885 $@95: %empty

  886 $@96: %empty

  887 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  888 make_tuple: expr
  889           | expr "=>" expr
  890           | make_tuple ',' expr

  891 make_map_tuple: expr "=>" expr
  892               | expr

  893 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  894 $@97: %empty

  895 $@98: %empty

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  897 make_dim: make_tuple
  898         | make_dim "end of expression" make_tuple

  899 make_dim_decl: '[' optional_expr_list ']'
  900              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  901              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  902 $@99: %empty

  903 $@100: %empty

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  905 $@101: %empty

  906 $@102: %empty

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  908 $@103: %empty

  909 $@104: %empty

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  911              | "array" '(' expr_list optional_comma ')'

  912 $@105: %empty

  913 $@106: %empty

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  915              | "fixed_array" '(' expr_list optional_comma ')'

  916 $@107: %empty

  917 $@108: %empty

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  919 make_table: make_map_tuple
  920           | make_table "end of expression" make_map_tuple

  921 expr_map_tuple_list: make_map_tuple
  922                    | expr_map_tuple_list ',' make_map_tuple

  923 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  924                | "{{" make_table optional_trailing_semicolon_cur_cur
  925                | "table" '(' optional_expr_map_tuple_list ')'
  926                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  927                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  928 array_comprehension_where: %empty
  929                          | "end of expression" "where" expr

  930 optional_comma: %empty
  931               | ','

  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  934                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  935                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  936                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  937                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23 124 140 471
    '#' (35) 766 768 814
    '$' (36) 20 366 757 759
    '%' (37) 43 50 160 483
    '&' (38) 168 369 490 609 619 764 765 770
    '(' (40) 111 122 128 135 136 279 305 306 307 308 335 336 339 340 355 356 357 358 359 360 373 378 431 432 433 434 436 446 447 448 449 450 454 455 456 457 458 459 460 501 502 512 513 514 515 544 546 547 548 549 550 552 553 554 555 556 557 558 559 560 561 587 621 684 725 726 756 757 759 839 840 841 842 848 849 872 873 875 878 881 884 893 896 904 907 910 911 914 915 918 925 926 927
    ')' (41) 111 122 128 135 136 279 305 306 307 308 335 336 339 340 355 356 357 358 359 360 373 378 431 432 433 434 436 446 447 448 449 450 454 455 456 457 458 459 460 501 502 512 513 514 515 544 546 547 548 549 550 552 553 554 555 556 557 558 559 560 561 587 621 684 725 726 756 757 759 839 840 841 842 848 849 872 873 875 878 881 884 893 896 904 907 910 911 914 915 918 925 926 927
    '*' (42) 158 481 511
    '+' (43) 156 473 479
    ',' (44) 59 100 113 131 332 362 375 432 592 623 624 686 687 741 837 838 841 842 849 890 922 931
    '-' (45) 157 474 480 760 763 765 768
    '.' (46) 51 185 187 188 189 190 191 192 193 194 195 196 197 198 199 444 445 446 447 448 449 450 453 504 506 508 554 556 557
    '/' (47) 52 159 482
    ':' (58) 35 61 62 138 333 334 335 336 517 594 600 611 612 625 626 627 665 667 734 735 736 737
    "end of expression" (59) 71 360 847 898 920 929 932 933 934 935 936 937
    '<' (60) 161 250 286 289 302 345 348 351 354 356 357 359 360 440 443 484 514 515 520 526 531 740 755 759 774 778 781 784 788 791 795 798 802 805 808 811 878 881 884 887 896 904 907 910 914 918 926 927
    '=' (61) 91 92 104 105 106 107 108 109 111 370 392 414 606 615 645 650 732
    '>' (62) 162 250 286 289 302 345 348 351 354 356 357 359 360 440 443 485 514 515 520 526 531 740 755 759 774 778 781 784 788 791 795 798 802 805 808 811 878 881 884 887 896 904 907 910 914 918 926 927
    '?' (63) 208 209 517 528 531 532 559 771
    '@' (64) 114 115 367 368 437 440 443 561
    '[' (91) 133 183 431 432 448 503 504 584 745 746 752 760 899 932 933
    ']' (93) 133 183 184 333 334 337 338 377 431 432 448 503 504 505 506 563 584 745 746 752 760 858 860 862 865 899 932 933 934 935
    '^' (94) 170 492
    "begin of code block" (123) 242 923 936
    '|' (124) 169 491 813 814
    "end of code block" (125) 244 856 858 865 923 935 936 937
    '~' (126) 141 472
    error (256) 274 453
    "lexer error" (258)
    "capture" (259) 378
    "struct" (260) 672 674 878 904
    "class" (261) 671 673 881
    "let" (262) 324 327
    "def" (263) 235 581 583
    "while" (264) 88
    "if" (265) 72 84
    "static_if" (266) 73
    "else" (267) 68 76
    "for" (268) 86 932 933 934 935 936 937
    "recover" (269) 323
    "true" (270) 97 108 467
    "false" (271) 98 109 468
    "new" (272) 304 305 306 307 308 309
    "typeinfo" (273) 355 356 357 358 359 360
    "type" (274) 92 102 354 520 526 531 755
    "in" (275) 86 103 932 933 934 935 936 937
    "is" (276) 204 206 520 521 522 560
    "as" (277) 54 205 207 208 209 523 526 527 528 531 532 558 559
    "elif" (278) 65
    "static_elif" (279) 66
    "array" (280) 778 904 907 910 911 914
    "return" (281) 312 313 314 316 317
    "null" (282) 461
    "break" (283) 310
    "try" (284) 323
    "options" (285) 44
    "table" (286) 781 925 926 927
    "expect" (287) 57
    "const" (288) 569 762 763 769
    "require" (289) 45 118
    "operator" (290) 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
    "enum" (291) 662 665
    "finally" (292) 247
    "delete" (293) 202 298 299
    "deref" (294) 512
    "typedef" (295) 653 655
    "typedecl" (296) 756
    "with" (297) 89
    "aka" (298) 622 624 685 687
    "assume" (299) 91 92
    "cast" (300) 345
    "override" (301) 566
    "abstract" (302) 581
    "upcast" (303) 348
    "iterator" (304) 784 933
    "var" (305) 325 328
    "addr" (306) 513
    "continue" (307) 311
    "where" (308) 855 929
    "pass" (309) 271
    "reinterpret" (310) 351
    "module" (311) 24
    "public" (312) 18 56 238 571 638 648 658 677
    "label" (313) 62 63
    "goto" (314) 63 64
    "implicit" (315) 767
    "explicit" (316) 299 761
    "shared" (317) 635
    "private" (318) 19 119 237 572 637 647 657 676
    "smart_ptr" (319) 774
    "unsafe" (320) 87 544
    "inscope" (321) 23 329
    "static" (322) 574
    "fixed_array" (323) 915 918
    "default" (324) 887
    "uninitialized" (325) 308 455 457 869
    "bool" (326) 210 688
    "void" (327) 708
    "string" (328) 211 689
    "auto" (329) 724 725
    "int" (330) 212 690 715
    "int2" (331) 213 694
    "int3" (332) 214 695
    "int4" (333) 215 696
    "uint" (334) 216 697 718 736
    "bitfield" (335) 714 740 829
    "uint2" (336) 217 701
    "uint3" (337) 218 702
    "uint4" (338) 219 703
    "float" (339) 220 704
    "float2" (340) 221 705
    "float3" (341) 222 706
    "float4" (342) 223 707
    "range" (343) 224 709
    "urange" (344) 225 710
    "range64" (345) 226 711
    "urange64" (346) 227 712
    "block" (347) 785 788 791
    "int64" (348) 228 693 721
    "uint64" (349) 229 700 722 737
    "double" (350) 230 713
    "function" (351) 792 795 798
    "lambda" (352) 799 802 805
    "int8" (353) 231 691 716
    "uint8" (354) 232 698 719 734
    "int16" (355) 233 692 717
    "uint16" (356) 234 699 720 735
    "tuple" (357) 808 819 893 896 907
    "variant" (358) 811 824 884 910
    "generator" (359) 250 514 515
    "yield" (360) 318 319 321 322
    "sealed" (361) 567 669
    "template" (362) 120 673 674
    "+=" (363) 142 189 401 422
    "-=" (364) 143 190 402 423
    "/=" (365) 145 192 404 425
    "*=" (366) 144 191 403 424
    "%=" (367) 146 193 405 426
    "&=" (368) 147 194 395 416
    "|=" (369) 148 195 396 417
    "^=" (370) 149 196 397 418
    "<<" (371) 175 475
    ">>" (372) 176 476
    "++" (373) 171 173 497 499
    "--" (374) 172 174 498 500
    "<=" (375) 166 488
    "<<=" (376) 177 406 427
    ">>=" (377) 178 407 428
    ">=" (378) 167 489
    "==" (379) 164 486 769 770
    "!=" (380) 165 487
    "->" (381) 433 434
    "<-" (382) 314 317 319 322 365 371 393 415 607 616
    "??" (383) 203 516 775
    "?." (384) 186 200 507 508 555 557
    "?[" (385) 184 505 506
    "<|" (386) 540
    " <|" (387) 290
    "$ <|" (388) 293 412
    "@ <|" (389) 291 410
    "@@ <|" (390) 292 411
    "|>" (391) 129 541 542
    ":=" (392) 188 201 372 394 617 836 838 840 842
    "<<<" (393) 179 477
    ">>>" (394) 180 478
    "<<<=" (395) 181 408 429
    ">>>=" (396) 182 409 430
    "=>" (397) 364 365 889 891
    "::" (398) 296 297
    "&&" (399) 125 153 493
    "||" (400) 126 154 494
    "^^" (401) 127 155 495
    "&&=" (402) 150 197 398 419
    "||=" (403) 151 198 399 420
    "^^=" (404) 152 199 400 421
    ".." (405) 163 496
    "$$" (406) 546
    "$i" (407) 436 547 621 684
    "$v" (408) 548
    "$b" (409) 549
    "$a" (410) 550 587
    "$t" (411) 726
    "$c" (412) 552 553 561
    "$f" (413) 554 555 556 557 558 559 560 839 840 841 842
    "..." (414) 551
    "[[" (415) 333 334 337 338 377 563 870 871 872 873 900 934
    "[{" (416) 874 875 901 935
    "{{" (417) 924 937
    "new scope" <i> (418) 243
    "close scope" <i> (419) 245
    "end of line" (420) 70 631
    "integer constant" <i> (421) 60 61 62 63 95 106 384
    "long integer constant" <i64> (422) 386
    "unsigned integer constant" <ui> (423) 385
    "unsigned long integer constant" <ui64> (424) 387
    "unsigned int8 constant" <ui> (425) 388
    "floating point constant" <fd> (426) 96 107 389
    "double constant" <d> (427) 390
    "name" <s> (428) 21 46 54 91 92 94 101 105 139 187 188 189 190 191 192 193 194 195 196 197 198 199 200 206 207 209 295 296 297 331 332 356 357 359 360 369 370 371 372 373 433 434 444 445 446 447 448 507 508 522 523 528 543 594 600 620 622 623 624 644 645 650 659 670 683 685 686 687 725 727 728 731 732 819 824 829 835 836 837 838
    "keyword" <s> (429) 47 275 286
    "type function" <s> (430) 48 289
    "start of the string" (431) 29 30 39
    STRING_CHARACTER <ch> (432) 25 27 32 40 41
    STRING_CHARACTER_ESC (433) 26 28
    "end of the string" (434) 29 30 39
    "{" (435) 38
    "}" (436) 38
    "end of failed eader macro" (437)
    ";}}" (438) 857
    ";}]" (439) 859 866
    ";]]" (440) 861 863
    ",]]" (441) 864
    ",}]" (442) 867
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 24
    module_name <s> (226)
        on left: 20 21
        on right: 24
    optional_not_required <b> (227)
        on left: 22 23
        on right: 24
    module_declaration (228)
        on left: 24
        on right: 2
    character_sequence <s> (229)
        on left: 25 26 27 28
        on right: 27 28 29 37
    string_constant <s> (230)
        on left: 29 30
        on right: 93 104
    format_string <s> (231)
        on left: 31 32
        on right: 32 35
    optional_format_string <s> (232)
        on left: 33 35
        on right: 38
    $@1 (233)
        on left: 34
        on right: 35
    string_builder_body <pExpression> (234)
        on left: 36 37 38
        on right: 37 38 39
    string_builder <pExpression> (235)
        on left: 39
        on right: 465
    reader_character_sequence (236)
        on left: 40 41
        on right: 41 43
    expr_reader <pExpression> (237)
        on left: 43
        on right: 16 464
    $@2 (238)
        on left: 42
        on right: 43
    options_declaration (239)
        on left: 44
        on right: 9
    require_declaration (240)
        on left: 45
        on right: 8
    keyword_or_name <s> (241)
        on left: 46 47 48
        on right: 49 51 52
    require_module_name <s> (242)
        on left: 49 50 51 52
        on right: 50 51 52 53 54
    require_module (243)
        on left: 53 54
        on right: 45
    is_public_module <b> (244)
        on left: 55 56
        on right: 53 54
    expect_declaration (245)
        on left: 57
        on right: 7
    expect_list (246)
        on left: 58 59
        on right: 57 59
    expect_error (247)
        on left: 60 61
        on right: 58 59
    expression_label <pExpression> (248)
        on left: 62
        on right: 269
    expression_goto <pExpression> (249)
        on left: 63 64
        on right: 270
    elif_or_static_elif <b> (250)
        on left: 65 66
        on right: 69
    expression_else <pExpression> (251)
        on left: 67 68 69
        on right: 69 82
    semicolon (252)
        on left: 70 71
        on right: 15 16 84 116 251 255 256 263 264 269 270 271 315 320 333 335 337 339 577 579 581 584 590 591 625 626 628 643 644 645 651 652 655 728 730 731 732 742
    if_or_static_if <b> (253)
        on left: 72 73
        on right: 82
    expression_else_one_liner <pExpression> (254)
        on left: 74 76
        on right: 84
    $@3 (255)
        on left: 75
        on right: 76
    expression_if_one_liner <pExpression> (256)
        on left: 77 78 79 80 81
        on right: 76 84
    expression_if_then_else <pExpression> (257)
        on left: 82 84
        on right: 267
    $@4 (258)
        on left: 83
        on right: 84
    expression_for_loop <pExpression> (259)
        on left: 86
        on right: 262
    $@5 (260)
        on left: 85
        on right: 86
    expression_unsafe <pExpression> (261)
        on left: 87
        on right: 259
    expression_while_loop <pExpression> (262)
        on left: 88
        on right: 258
    expression_with <pExpression> (263)
        on left: 89
        on right: 260
    expression_with_alias <pExpression> (264)
        on left: 91 92
        on right: 261
    $@6 (265)
        on left: 90
        on right: 91
    annotation_argument_value <aa> (266)
        on left: 93 94 95 96 97 98
        on right: 99 100
    annotation_argument_value_list <aaList> (267)
        on left: 99 100
        on right: 100 111
    annotation_argument_name <s> (268)
        on left: 101 102 103
        on right: 104 105 106 107 108 109 110 111
    annotation_argument <aa> (269)
        on left: 104 105 106 107 108 109 110 111
        on right: 112 113 114 115
    annotation_argument_list <aaList> (270)
        on left: 112 113
        on right: 44 113 122 563
    metadata_argument_list <aaList> (271)
        on left: 114 115 116
        on right: 115 116 564
    annotation_declaration_name <s> (272)
        on left: 117 118 119 120
        on right: 121 122
    annotation_declaration_basic <fa> (273)
        on left: 121 122
        on right: 123
    annotation_declaration <fa> (274)
        on left: 123 124 125 126 127 128 129
        on right: 124 125 126 127 128 129 130 131
    annotation_list <faList> (275)
        on left: 130 131
        on right: 131 133 584
    optional_annotation_list <faList> (276)
        on left: 132 133
        on right: 235 380 381 383 581 583 662 665 682
    optional_function_argument_list <pVarDeclList> (277)
        on left: 134 135 136
        on right: 239 380 381 383 443 791 798 805
    optional_function_type <pTypeDecl> (278)
        on left: 137 138
        on right: 239 380 381 383 443 791 798 805
    function_name <s> (279)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234
        on right: 239
    global_function_declaration (280)
        on left: 235
        on right: 6
    optional_public_or_private_function <b> (281)
        on left: 236 237 238
        on right: 241
    function_declaration_header <pFuncDecl> (282)
        on left: 239
        on right: 241 581 583
    function_declaration <pFuncDecl> (283)
        on left: 241
        on right: 235
    $@7 (284)
        on left: 240
        on right: 241
    open_block (285)
        on left: 242 243
        on right: 246 247 639 653 662 665 679 819 824 829
    close_block (286)
        on left: 244 245
        on right: 246 247 639 653 662 665 679 819 824 829
    expression_block <pExpression> (287)
        on left: 246 247
        on right: 68 69 82 86 87 88 89 241 275 323 363 379 383 583
    expr_call_pipe <pExpression> (288)
        on left: 248 249 250
        on right: 294 413
    expression_any <pExpression> (289)
        on left: 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271
        on right: 273
    expressions <pExpression> (290)
        on left: 272 273 274
        on right: 246 247 273 274
    expr_keyword <pExpression> (291)
        on left: 275
        on right: 253
    optional_expr_list <pExpression> (292)
        on left: 276 277
        on right: 279 757 759 899 914
    optional_expr_list_in_braces <pExpression> (293)
        on left: 278 279
        on right: 289
    optional_expr_map_tuple_list <pExpression> (294)
        on left: 280 281
        on right: 923 925 926 927
    type_declaration_no_options_list <pTypeDeclList> (295)
        on left: 282 283
        on right: 283 286 289 759
    expression_keyword <pExpression> (296)
        on left: 286 289
        on right: 249 545
    $@8 (297)
        on left: 284
        on right: 286
    $@9 (298)
        on left: 285
        on right: 286
    $@10 (299)
        on left: 287
        on right: 289
    $@11 (300)
        on left: 288
        on right: 289
    expr_pipe <pExpression> (301)
        on left: 290 291 292 293 294
        on right: 252 316 317 321 322 334 336 338 340 627 629
    name_in_namespace <s> (302)
        on left: 295 296 297
        on right: 43 117 355 356 357 358 359 360 431 432 435 454 455 456 457 458 462 543 667 723 757 759
    expression_delete <pExpression> (303)
        on left: 298 299
        on right: 256
    new_type_declaration <pTypeDecl> (304)
        on left: 302 303
        on right: 304 305 306 307 308
    $@12 (305)
        on left: 300
        on right: 302
    $@13 (306)
        on left: 301
        on right: 302
    expr_new <pExpression> (307)
        on left: 304 305 306 307 308 309
        on right: 536
    expression_break <pExpression> (308)
        on left: 310
        on right: 80 263
    expression_continue <pExpression> (309)
        on left: 311
        on right: 81 264
    expression_return_no_pipe <pExpression> (310)
        on left: 312 313 314
        on right: 78 315
    expression_return <pExpression> (311)
        on left: 315 316 317
        on right: 265
    expression_yield_no_pipe <pExpression> (312)
        on left: 318 319
        on right: 79 320
    expression_yield <pExpression> (313)
        on left: 320 321 322
        on right: 266
    expression_try_catch <pExpression> (314)
        on left: 323
        on right: 268
    kwd_let_var_or_nothing <b> (315)
        on left: 324 325 326
        on right: 585 586
    kwd_let <b> (316)
        on left: 327 328
        on right: 341 342 639 641
    optional_in_scope <b> (317)
        on left: 329 330
        on right: 341 342
    tuple_expansion <pNameList> (318)
        on left: 331 332
        on right: 332 333 334 335 336 337 338 339 340
    tuple_expansion_variable_declaration <pVarDecl> (319)
        on left: 333 334 335 336 337 338 339 340
        on right: 342
    expression_let <pExpression> (320)
        on left: 341 342
        on right: 257
    expr_cast <pExpression> (321)
        on left: 345 348 351
        on right: 535
    $@14 (322)
        on left: 343
        on right: 345
    $@15 (323)
        on left: 344
        on right: 345
    $@16 (324)
        on left: 346
        on right: 348
    $@17 (325)
        on left: 347
        on right: 348
    $@18 (326)
        on left: 349
        on right: 351
    $@19 (327)
        on left: 350
        on right: 351
    expr_type_decl <pExpression> (328)
        on left: 354
        on right: 534
    $@20 (329)
        on left: 352
        on right: 354
    $@21 (330)
        on left: 353
        on right: 354
    expr_type_info <pExpression> (331)
        on left: 355 356 357 358 359 360
        on right: 533
    expr_list <pExpression> (332)
        on left: 361 362
        on right: 86 277 306 313 314 362 432 434 447 450 458 460 501 553 893 911 915 918 932 933 934 935 936 937
    block_or_simple_block <pExpression> (333)
        on left: 363 364 365
        on right: 380 381
    block_or_lambda <i> (334)
        on left: 366 367 368
        on right: 380 381 383
    capture_entry <pCapt> (335)
        on left: 369 370 371 372 373
        on right: 374 375
    capture_list <pCaptList> (336)
        on left: 374 375
        on right: 375 377 378
    optional_capture_list <pCaptList> (337)
        on left: 376 377 378
        on right: 250 380 381 383 514 515
    expr_block <pExpression> (338)
        on left: 379 380
        on right: 290 291 292 293 410 411 412 855
    expr_full_block <pExpression> (339)
        on left: 381
        on right: 539
    expr_full_block_assumed_piped <pExpression> (340)
        on left: 383
        on right: 248 249 250
    $@22 (341)
        on left: 382
        on right: 383
    expr_numeric_const <pExpression> (342)
        on left: 384 385 386 387 388 389 390
        on right: 463
    expr_assign <pExpression> (343)
        on left: 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409
        on right: 255 290
    expr_assign_pipe_right <pExpression> (344)
        on left: 410 411 412 413
        on right: 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430
    expr_assign_pipe <pExpression> (345)
        on left: 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430
        on right: 254
    expr_named_call <pExpression> (346)
        on left: 431 432
        on right: 538
    expr_method_call <pExpression> (347)
        on left: 433 434
        on right: 537
    func_addr_name <pExpression> (348)
        on left: 435 436
        on right: 437 440 443
    func_addr_expr <pExpression> (349)
        on left: 437 440 443
        on right: 509
    $@23 (350)
        on left: 438
        on right: 440
    $@24 (351)
        on left: 439
        on right: 440
    $@25 (352)
        on left: 441
        on right: 443
    $@26 (353)
        on left: 442
        on right: 443
    expr_field <pExpression> (354)
        on left: 444 445 446 447 448 449 450 453
        on right: 469
    $@27 (355)
        on left: 451
        on right: 453
    $@28 (356)
        on left: 452
        on right: 453
    expr_call <pExpression> (357)
        on left: 454 455 456 457 458 459 460
        on right: 510
    expr <pExpression> (358)
        on left: 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 520 521 522 523 526 527 528 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545
        on right
    $@29 (359)
        on left: 518
        on right: 520
    $@30 (360)
        on left: 519
        on right: 520
    $@31 (361)
        on left: 524
        on right: 526
    $@32 (362)
        on left: 525
        on right: 526
    $@33 (363)
        on left: 529
        on right: 531
    $@34 (364)
        on left: 530
        on right: 531
    expr_mtag <pExpression> (365)
        on left: 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561
        on right: 470
    optional_field_annotation <aaList> (366)
        on left: 562 563 564
        on right: 575 585 586 633 641
    optional_override <i> (367)
        on left: 565 566 567
        on right: 575 583
    optional_constant <b> (368)
        on left: 568 569
        on right: 581 583
    optional_public_or_private_member_variable <b> (369)
        on left: 570 571 572
        on right: 575 581 583
    optional_static_member_variable <b> (370)
        on left: 573 574
        on right: 575 583
    structure_variable_declaration <pVarDecl> (371)
        on left: 575
        on right: 579
    struct_variable_declaration_list <pVarDeclList> (372)
        on left: 576 577 579 581 583 584
        on right: 577 579 581 583 584 679
    $@35 (373)
        on left: 578
        on right: 579
    $@36 (374)
        on left: 580
        on right: 581
    $@37 (375)
        on left: 582
        on right: 583
    function_argument_declaration_no_type <pVarDecl> (376)
        on left: 585
        on right: 588 590
    function_argument_declaration_type <pVarDecl> (377)
        on left: 586 587
        on right: 589 591 592
    function_argument_list <pVarDeclList> (378)
        on left: 588 589 590 591 592
        on right: 136 590 591 592
    tuple_type <pVarDecl> (379)
        on left: 593 594
        on right: 595 596 599
    tuple_type_list <pVarDeclList> (380)
        on left: 595 596
        on right: 596 808 896 907
    tuple_alias_type_list <pVarDeclList> (381)
        on left: 597 598 599
        on right: 598 599 819
    variant_type <pVarDecl> (382)
        on left: 600
        on right: 601 602 605
    variant_type_list <pVarDeclList> (383)
        on left: 601 602
        on right: 602 811 884 910
    variant_alias_type_list <pVarDeclList> (384)
        on left: 603 604 605
        on right: 604 605 824
    copy_or_move <b> (385)
        on left: 606 607
        on right: 610 612 835 837 839 841
    variable_declaration_no_type <pVarDecl> (386)
        on left: 608 609 610
        on right: 585 614
    variable_declaration_type <pVarDecl> (387)
        on left: 611 612
        on right: 586 613
    variable_declaration <pVarDecl> (388)
        on left: 613 614
        on right: 575
    copy_or_move_or_clone <i> (389)
        on left: 615 616 617
        on right: 333 334 335 336 337 338 339 340 626 627 628 629
    optional_ref <b> (390)
        on left: 618 619
        on right: 337 338 339 340 628 629
    let_variable_name_with_pos_list <pNameWithPosList> (391)
        on left: 620 621 622 623 624
        on right: 623 624 625 626 627 628 629
    let_variable_declaration <pVarDecl> (392)
        on left: 625 626 627 628 629
        on right: 341 633 641
    global_variable_declaration_list <pVarDeclList> (393)
        on left: 630 631 633
        on right: 631 633 639
    $@38 (394)
        on left: 632
        on right: 633
    optional_shared <b> (395)
        on left: 634 635
        on right: 24 639 641
    optional_public_or_private_variable <b> (396)
        on left: 636 637 638
        on right: 639 641
    global_let (397)
        on left: 639 641
        on right: 5
    $@39 (398)
        on left: 640
        on right: 641
    enum_list <pEnum> (399)
        on left: 642 643 644 645
        on right: 643 644 645 662 665
    optional_public_or_private_alias <b> (400)
        on left: 646 647 648
        on right: 650 819 824 829
    single_alias (401)
        on left: 650
        on right: 651 652 655
    $@40 (402)
        on left: 649
        on right: 650
    alias_list (403)
        on left: 651 652
        on right: 652 653
    alias_declaration (404)
        on left: 653 655
        on right: 10
    $@41 (405)
        on left: 654
        on right: 655
    optional_public_or_private_enum <b> (406)
        on left: 656 657 658
        on right: 662 665
    enum_name <pEnum> (407)
        on left: 659
        on right: 662 665
    enum_declaration (408)
        on left: 662 665
        on right: 4
    $@42 (409)
        on left: 660
        on right: 662
    $@43 (410)
        on left: 661
        on right: 662
    $@44 (411)
        on left: 663
        on right: 665
    $@45 (412)
        on left: 664
        on right: 665
    optional_structure_parent <s> (413)
        on left: 666 667
        on right: 670
    optional_sealed <b> (414)
        on left: 668 669
        on right: 670
    structure_name <pStructure> (415)
        on left: 670
        on right: 682
    class_or_struct <i> (416)
        on left: 671 672 673 674
        on right: 682
    optional_public_or_private_structure <b> (417)
        on left: 675 676 677
        on right: 682
    optional_struct_variable_declaration_list <pVarDeclList> (418)
        on left: 678 679
        on right: 682
    structure_declaration (419)
        on left: 682
        on right: 3
    $@46 (420)
        on left: 680
        on right: 682
    $@47 (421)
        on left: 681
        on right: 682
    variable_name_with_pos_list <pNameWithPosList> (422)
        on left: 683 684 685 686 687
        on right: 86 608 609 610 611 612 686 687 932 933 934 935 936 937
    basic_type_declaration <type> (423)
        on left: 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714
        on right: 449 450 459 460 521 527 532 542 747
    enum_basic_type_declaration <type> (424)
        on left: 715 716 717 718 719 720 721 722
        on right: 665
    structure_type_declaration <pTypeDecl> (425)
        on left: 723
        on right: 303 750
    auto_type_declaration <pTypeDecl> (426)
        on left: 724 725 726
        on right: 748
    bitfield_bits <pNameList> (427)
        on left: 727 728
        on right: 728 740
    bitfield_alias_bits <pNameExprList> (428)
        on left: 729 730 731 732
        on right: 730 731 732 829
    bitfield_basic_type_declaration <type> (429)
        on left: 733 734 735 736 737
        on right: 740 829
    bitfield_type_declaration <pTypeDecl> (430)
        on left: 740
        on right: 749
    $@48 (431)
        on left: 738
        on right: 740
    $@49 (432)
        on left: 739
        on right: 740
    c_or_s (433)
        on left: 741 742
        on right: 283 357 596 598 599 602 604 605 744 927
    table_type_pair <aTypePair> (434)
        on left: 743 744
        on right: 781
    dim_list <pTypeDecl> (435)
        on left: 745 746
        on right: 746 751
    type_declaration_no_options <pTypeDecl> (436)
        on left: 747 748 749 750 751 752 755 756 757 759 760 761 762 763 764 765 766 767 768 769 770 771 774 775 778 781 784 785 788 791 792 795 798 799 802 805 808 811
        on right: 250 333 334 335 336 345 348 351 440 514 515 520 625 626 627 751 752 760 761 762 763 764 765 766 767 768 769 770 771 775 812 813 870 871 872 873 874 875 878 881 887 900 901 904 914 918 926 927
    $@50 (437)
        on left: 753
        on right: 755
    $@51 (438)
        on left: 754
        on right: 755
    $@52 (439)
        on left: 758
        on right: 759
    $@53 (440)
        on left: 772
        on right: 774
    $@54 (441)
        on left: 773
        on right: 774
    $@55 (442)
        on left: 776
        on right: 778
    $@56 (443)
        on left: 777
        on right: 778
    $@57 (444)
        on left: 779
        on right: 781
    $@58 (445)
        on left: 780
        on right: 781
    $@59 (446)
        on left: 782
        on right: 784
    $@60 (447)
        on left: 783
        on right: 784
    $@61 (448)
        on left: 786
        on right: 788
    $@62 (449)
        on left: 787
        on right: 788
    $@63 (450)
        on left: 789
        on right: 791
    $@64 (451)
        on left: 790
        on right: 791
    $@65 (452)
        on left: 793
        on right: 795
    $@66 (453)
        on left: 794
        on right: 795
    $@67 (454)
        on left: 796
        on right: 798
    $@68 (455)
        on left: 797
        on right: 798
    $@69 (456)
        on left: 800
        on right: 802
    $@70 (457)
        on left: 801
        on right: 802
    $@71 (458)
        on left: 803
        on right: 805
    $@72 (459)
        on left: 804
        on right: 805
    $@73 (460)
        on left: 806
        on right: 808
    $@74 (461)
        on left: 807
        on right: 808
    $@75 (462)
        on left: 809
        on right: 811
    $@76 (463)
        on left: 810
        on right: 811
    type_declaration <pTypeDecl> (464)
        on left: 812 813 814
        on right: 92 138 282 283 302 354 526 531 593 594 600 611 612 650 743 744 755 774 778 784 788 795 802 813 814
    tuple_alias_declaration (465)
        on left: 819
        on right: 12
    $@77 (466)
        on left: 815
        on right: 819
    $@78 (467)
        on left: 816
        on right: 819
    $@79 (468)
        on left: 817
        on right: 819
    $@80 (469)
        on left: 818
        on right: 819
    variant_alias_declaration (470)
        on left: 824
        on right: 11
    $@81 (471)
        on left: 820
        on right: 824
    $@82 (472)
        on left: 821
        on right: 824
    $@83 (473)
        on left: 822
        on right: 824
    $@84 (474)
        on left: 823
        on right: 824
    bitfield_alias_declaration (475)
        on left: 829
        on right: 13
    $@85 (476)
        on left: 825
        on right: 829
    $@86 (477)
        on left: 826
        on right: 829
    $@87 (478)
        on left: 827
        on right: 829
    $@88 (479)
        on left: 828
        on right: 829
    make_decl <pExpression> (480)
        on left: 830 831 832 833 834
        on right: 309 466
    make_struct_fields <pMakeStruct> (481)
        on left: 835 836 837 838 839 840 841 842
        on right: 431 432 448 837 838 841 842 844 845 846 847 848 849 850
    make_variant_dim <pExpression> (482)
        on left: 843 844
        on right: 884 910
    make_struct_single <pExpression> (483)
        on left: 845
        on right: 307 308 456 457 502
    make_struct_dim <pExpression> (484)
        on left: 846 847
        on right: 847 870 873 874 875
    make_struct_dim_list <pExpression> (485)
        on left: 848 849
        on right: 849 851
    make_struct_dim_decl <pExpression> (486)
        on left: 850 851
        on right: 852
    optional_make_struct_dim_decl <pExpression> (487)
        on left: 852 853
        on right: 878 881 896 904 907
    optional_block <pExpression> (488)
        on left: 854 855
        on right: 870 871 872 873 874 875
    optional_trailing_semicolon_cur_cur (489)
        on left: 856 857
        on right: 924
    optional_trailing_semicolon_cur_sqr (490)
        on left: 858 859
        on right: 901
    optional_trailing_semicolon_sqr_sqr (491)
        on left: 860 861
        on right: 900
    optional_trailing_delim_sqr_sqr (492)
        on left: 862 863 864
        on right: 870 871 872 873
    optional_trailing_delim_cur_sqr (493)
        on left: 865 866 867
        on right: 874 875
    use_initializer <b> (494)
        on left: 868 869
        on right: 305 878 881 884 887 896 904 907
    make_struct_decl <pExpression> (495)
        on left: 870 871 872 873 874 875 878 881 884 887
        on right: 830
    $@89 (496)
        on left: 876
        on right: 878
    $@90 (497)
        on left: 877
        on right: 878
    $@91 (498)
        on left: 879
        on right: 881
    $@92 (499)
        on left: 880
        on right: 881
    $@93 (500)
        on left: 882
        on right: 884
    $@94 (501)
        on left: 883
        on right: 884
    $@95 (502)
        on left: 885
        on right: 887
    $@96 (503)
        on left: 886
        on right: 887
    make_tuple <pExpression> (504)
        on left: 888 889 890
        on right: 890 897 898
    make_map_tuple <pExpression> (505)
        on left: 891 892
        on right: 919 920 921 922 936 937
    make_tuple_call <pExpression> (506)
        on left: 893 896
        on right: 834
    $@97 (507)
        on left: 894
        on right: 896
    $@98 (508)
        on left: 895
        on right: 896
    make_dim <pExpression> (509)
        on left: 897 898
        on right: 898 900 901
    make_dim_decl <pExpression> (510)
        on left: 899 900 901 904 907 910 911 914 915 918
        on right: 831
    $@99 (511)
        on left: 902
        on right: 904
    $@100 (512)
        on left: 903
        on right: 904
    $@101 (513)
        on left: 905
        on right: 907
    $@102 (514)
        on left: 906
        on right: 907
    $@103 (515)
        on left: 908
        on right: 910
    $@104 (516)
        on left: 909
        on right: 910
    $@105 (517)
        on left: 912
        on right: 914
    $@106 (518)
        on left: 913
        on right: 914
    $@107 (519)
        on left: 916
        on right: 918
    $@108 (520)
        on left: 917
        on right: 918
    make_table <pExpression> (521)
        on left: 919 920
        on right: 920 924
    expr_map_tuple_list <pExpression> (522)
        on left: 921 922
        on right: 281 922
    make_table_decl <pExpression> (523)
        on left: 923 924 925 926 927
        on right: 832
    array_comprehension_where <pExpression> (524)
        on left: 928 929
        on right: 932 933 934 935 936 937
    optional_comma <b> (525)
        on left: 930 931
        on right: 277 279 281 501 845 851 893 911 915 918
    array_comprehension <pExpression> (526)
        on left: 932 933 934 935 936 937
        on right: 833


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 132 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  327 kwd_let: "let" .

    $default  reduce using rule 327 (kwd_let)


State 4

   44 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   57 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   45 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  653 alias_declaration: "typedef" . open_block alias_list close_block
  655                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 654 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  328 kwd_let: "var" .

    $default  reduce using rule 328 (kwd_let)


State 9

   24 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  829 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 646 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  819 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 646 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  824 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 646 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   70 semicolon: "end of line" .

    $default  reduce using rule 70 (semicolon)


State 14

   71 semicolon: "end of expression" .

    $default  reduce using rule 71 (semicolon)


State 15

   43 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  133 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  235 global_function_declaration: optional_annotation_list . "def" function_declaration
  662 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  665                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  682 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  639 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  641           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 634 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  102 annotation_argument_name: "type" .

    $default  reduce using rule 102 (annotation_argument_name)


State 35

  103 annotation_argument_name: "in" .

    $default  reduce using rule 103 (annotation_argument_name)


State 36

  101 annotation_argument_name: "name" .

    $default  reduce using rule 101 (annotation_argument_name)


State 37

  104 annotation_argument: annotation_argument_name . '=' string_constant
  105                    | annotation_argument_name . '=' "name"
  106                    | annotation_argument_name . '=' "integer constant"
  107                    | annotation_argument_name . '=' "floating point constant"
  108                    | annotation_argument_name . '=' "true"
  109                    | annotation_argument_name . '=' "false"
  110                    | annotation_argument_name .
  111                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 110 (annotation_argument)


State 38

  112 annotation_argument_list: annotation_argument .

    $default  reduce using rule 112 (annotation_argument_list)


State 39

   44 options_declaration: "options" annotation_argument_list .
  113 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 44 (options_declaration)


State 40

   60 expect_error: "integer constant" .
   61             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 60 (expect_error)


State 41

   57 expect_declaration: "expect" expect_list .
   59 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 57 (expect_declaration)


State 42

   58 expect_list: expect_error .

    $default  reduce using rule 58 (expect_list)


State 43

   46 keyword_or_name: "name" .

    $default  reduce using rule 46 (keyword_or_name)


State 44

   47 keyword_or_name: "keyword" .

    $default  reduce using rule 47 (keyword_or_name)


State 45

   48 keyword_or_name: "type function" .

    $default  reduce using rule 48 (keyword_or_name)


State 46

   50 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   49 require_module_name: keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 48

   51 require_module_name: require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name
   53 require_module: require_module_name . is_public_module
   54               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 94


State 49

   45 require_declaration: "require" require_module .

    $default  reduce using rule 45 (require_declaration)


State 50

  243 open_block: "new scope" .

    $default  reduce using rule 243 (open_block)


State 51

  242 open_block: "begin of code block" .

    $default  reduce using rule 242 (open_block)


State 52

  653 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 646 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  655 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 646 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   24 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 83

    $default  reduce using rule 634 (optional_shared)

    optional_shared  go to state 99


State 57

  648 optional_public_or_private_alias: "public" .

    $default  reduce using rule 648 (optional_public_or_private_alias)


State 58

  647 optional_public_or_private_alias: "private" .

    $default  reduce using rule 647 (optional_public_or_private_alias)


State 59

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 825 ($@85)

    $@85  go to state 100


State 60

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 815 ($@77)

    $@77  go to state 101


State 61

  824 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 820 ($@81)

    $@81  go to state 102


State 62

  297 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  295 name_in_namespace: "name" .
  296                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 295 (name_in_namespace)]
    $default  reduce using rule 295 (name_in_namespace)


State 64

   43 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 42 ($@2)

    $@2  go to state 105


State 65

  118 annotation_declaration_name: "require" .

    $default  reduce using rule 118 (annotation_declaration_name)


State 66

  119 annotation_declaration_name: "private" .

    $default  reduce using rule 119 (annotation_declaration_name)


State 67

  120 annotation_declaration_name: "template" .

    $default  reduce using rule 120 (annotation_declaration_name)


State 68

  129 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  124 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  128 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  121 annotation_declaration_basic: annotation_declaration_name .
  122                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 121 (annotation_declaration_basic)


State 72

  123 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 123 (annotation_declaration)


State 73

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration
  130 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 130 (annotation_list)


State 74

  131 annotation_list: annotation_list . ',' annotation_declaration
  133 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  117 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 117 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  672 class_or_struct: "struct" .

    $default  reduce using rule 672 (class_or_struct)


State 78

  671 class_or_struct: "class" .

    $default  reduce using rule 671 (class_or_struct)


State 79

  235 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 236 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  662 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  665                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 656 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  673 class_or_struct: "template" . "class"
  674                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  682 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 675 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  635 optional_shared: "shared" .

    $default  reduce using rule 635 (optional_shared)


State 84

  639 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  641           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 636 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  104 annotation_argument: annotation_argument_name '=' . string_constant
  105                    | annotation_argument_name '=' . "name"
  106                    | annotation_argument_name '=' . "integer constant"
  107                    | annotation_argument_name '=' . "floating point constant"
  108                    | annotation_argument_name '=' . "true"
  109                    | annotation_argument_name '=' . "false"
  111                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  113 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   61 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   59 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   50 require_module_name: '%' require_module_name .
   51                    | require_module_name . '.' keyword_or_name
   52                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 50 (require_module_name)


State 90

   54 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   56 is_public_module: "public" .

    $default  reduce using rule 56 (is_public_module)


State 92

   52 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   51 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   53 require_module: require_module_name is_public_module .

    $default  reduce using rule 53 (require_module)


State 95

  650 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  651 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  652 alias_list: alias_list . single_alias semicolon
  653 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 646 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  655 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   24 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  297 name_in_namespace: "::" "name" .

    $default  reduce using rule 297 (name_in_namespace)


State 104

  296 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   43 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration
  129                       | "|>" annotation_declaration .

    $default  reduce using rule 129 (annotation_declaration)


State 107

  124 annotation_declaration: '!' annotation_declaration .
  125                       | annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 124 (annotation_declaration)


State 108

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration
  128                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  122 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  125 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  126 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  127 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  131 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  133 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 133 (optional_annotation_list)


State 115

  238 optional_public_or_private_function: "public" .

    $default  reduce using rule 238 (optional_public_or_private_function)


State 116

  237 optional_public_or_private_function: "private" .

    $default  reduce using rule 237 (optional_public_or_private_function)


State 117

  241 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 240 ($@7)

    $@7  go to state 166


State 118

  235 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 235 (global_function_declaration)


State 119

  658 optional_public_or_private_enum: "public" .

    $default  reduce using rule 658 (optional_public_or_private_enum)


State 120

  657 optional_public_or_private_enum: "private" .

    $default  reduce using rule 657 (optional_public_or_private_enum)


State 121

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  665                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  674 class_or_struct: "template" "struct" .

    $default  reduce using rule 674 (class_or_struct)


State 123

  673 class_or_struct: "template" "class" .

    $default  reduce using rule 673 (class_or_struct)


State 124

  677 optional_public_or_private_structure: "public" .

    $default  reduce using rule 677 (optional_public_or_private_structure)


State 125

  676 optional_public_or_private_structure: "private" .

    $default  reduce using rule 676 (optional_public_or_private_structure)


State 126

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 680 ($@46)

    $@46  go to state 169


State 127

  638 optional_public_or_private_variable: "public" .

    $default  reduce using rule 638 (optional_public_or_private_variable)


State 128

  637 optional_public_or_private_variable: "private" .

    $default  reduce using rule 637 (optional_public_or_private_variable)


State 129

  639 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  641           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 640 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  108 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 108 (annotation_argument)


State 131

  109 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 109 (annotation_argument)


State 132

  106 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 106 (annotation_argument)


State 133

  107 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 107 (annotation_argument)


State 134

  105 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 105 (annotation_argument)


State 135

   29 string_constant: "start of the string" . character_sequence "end of the string"
   30                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  111 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  104 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 104 (annotation_argument)


State 138

  113 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 113 (annotation_argument_list)


State 139

   61 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 61 (expect_error)


State 140

   59 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 59 (expect_list)


State 141

   54 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 55 (is_public_module)

    is_public_module  go to state 184


State 142

   52 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 52 (require_module_name)


State 143

   51 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 51 (require_module_name)


State 144

  650 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 649 ($@40)

    $@40  go to state 185


State 145

  651 alias_list: single_alias semicolon .

    $default  reduce using rule 651 (alias_list)


State 146

  245 close_block: "close scope" .

    $default  reduce using rule 245 (close_block)


State 147

  244 close_block: "end of code block" .

    $default  reduce using rule 244 (close_block)


State 148

  653 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 653 (alias_declaration)


State 149

  652 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  655 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 655 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 187

    $default  reduce using rule 22 (optional_not_required)

    optional_not_required  go to state 188


State 154

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 826 ($@86)

    $@86  go to state 189


State 155

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 816 ($@78)

    $@78  go to state 190


State 156

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 821 ($@82)

    $@82  go to state 191


State 157

  296 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 296 (name_in_namespace)


State 158

   40 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 40 (reader_character_sequence)


State 159

   41 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   43 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 192

    $default  reduce using rule 43 (expr_reader)


State 160

  128 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 128 (annotation_declaration)


State 161

  113 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  122 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 193


State 162

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  125                       | annotation_declaration "&&" annotation_declaration .
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 125 (annotation_declaration)


State 163

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  126                       | annotation_declaration "||" annotation_declaration .
  127                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 126 (annotation_declaration)


State 164

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration
  127                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 127 (annotation_declaration)


State 165

  125 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  126                       | annotation_declaration . "||" annotation_declaration
  127                       | annotation_declaration . "^^" annotation_declaration
  131 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 131 (annotation_list)


State 166

  241 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 224


State 167

  659 enum_name: "name" .

    $default  reduce using rule 659 (enum_name)


State 168

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  665                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 225

    open_block  go to state 226


State 169

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 227

    $default  reduce using rule 668 (optional_sealed)

    optional_sealed  go to state 228
    structure_name   go to state 229


State 170

  639 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 630 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 230


State 171

  641 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 234


State 172

   25 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 173

   26 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 174

   30 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 30 (string_constant)


State 175

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   29 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236
    "end of the string"   shift, and go to state 237


State 176

   97 annotation_argument_value: "true" .

    $default  reduce using rule 97 (annotation_argument_value)


State 177

   98 annotation_argument_value: "false" .

    $default  reduce using rule 98 (annotation_argument_value)


State 178

   95 annotation_argument_value: "integer constant" .

    $default  reduce using rule 95 (annotation_argument_value)


State 179

   96 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 96 (annotation_argument_value)


State 180

   94 annotation_argument_value: "name" .

    $default  reduce using rule 94 (annotation_argument_value)


State 181

   93 annotation_argument_value: string_constant .

    $default  reduce using rule 93 (annotation_argument_value)


State 182

   99 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 99 (annotation_argument_value_list)


State 183

  100 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  111 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 239


State 184

   54 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 54 (require_module)


State 185

  650 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 240


State 186

  652 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 652 (alias_list)


State 187

   23 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 241


State 188

   24 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 24 (module_declaration)


State 189

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block

    ':'  shift, and go to state 242

    $default  reduce using rule 733 (bitfield_basic_type_declaration)

    bitfield_basic_type_declaration  go to state 243


State 190

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 244


State 191

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 245


State 192

   41 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 41 (reader_character_sequence)


State 193

  122 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 122 (annotation_declaration_basic)


State 194

  140 function_name: "operator" . '!'
  141              | "operator" . '~'
  142              | "operator" . "+="
  143              | "operator" . "-="
  144              | "operator" . "*="
  145              | "operator" . "/="
  146              | "operator" . "%="
  147              | "operator" . "&="
  148              | "operator" . "|="
  149              | "operator" . "^="
  150              | "operator" . "&&="
  151              | "operator" . "||="
  152              | "operator" . "^^="
  153              | "operator" . "&&"
  154              | "operator" . "||"
  155              | "operator" . "^^"
  156              | "operator" . '+'
  157              | "operator" . '-'
  158              | "operator" . '*'
  159              | "operator" . '/'
  160              | "operator" . '%'
  161              | "operator" . '<'
  162              | "operator" . '>'
  163              | "operator" . ".."
  164              | "operator" . "=="
  165              | "operator" . "!="
  166              | "operator" . "<="
  167              | "operator" . ">="
  168              | "operator" . '&'
  169              | "operator" . '|'
  170              | "operator" . '^'
  173              | "operator" . "++"
  174              | "operator" . "--"
  175              | "operator" . "<<"
  176              | "operator" . ">>"
  177              | "operator" . "<<="
  178              | "operator" . ">>="
  179              | "operator" . "<<<"
  180              | "operator" . ">>>"
  181              | "operator" . "<<<="
  182              | "operator" . ">>>="
  183              | "operator" . '[' ']'
  184              | "operator" . "?[" ']'
  185              | "operator" . '.'
  186              | "operator" . "?."
  187              | "operator" . '.' "name"
  188              | "operator" . '.' "name" ":="
  189              | "operator" . '.' "name" "+="
  190              | "operator" . '.' "name" "-="
  191              | "operator" . '.' "name" "*="
  192              | "operator" . '.' "name" "/="
  193              | "operator" . '.' "name" "%="
  194              | "operator" . '.' "name" "&="
  195              | "operator" . '.' "name" "|="
  196              | "operator" . '.' "name" "^="
  197              | "operator" . '.' "name" "&&="
  198              | "operator" . '.' "name" "||="
  199              | "operator" . '.' "name" "^^="
  200              | "operator" . "?." "name"
  201              | "operator" . ":="
  202              | "operator" . "delete"
  203              | "operator" . "??"
  204              | "operator" . "is"
  205              | "operator" . "as"
  206              | "operator" . "is" "name"
  207              | "operator" . "as" "name"
  208              | "operator" . '?' "as"
  209              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 246
    "as"      shift, and go to state 247
    "delete"  shift, and go to state 248
    "+="      shift, and go to state 249
    "-="      shift, and go to state 250
    "/="      shift, and go to state 251
    "*="      shift, and go to state 252
    "%="      shift, and go to state 253
    "&="      shift, and go to state 254
    "|="      shift, and go to state 255
    "^="      shift, and go to state 256
    "<<"      shift, and go to state 257
    ">>"      shift, and go to state 258
    "++"      shift, and go to state 259
    "--"      shift, and go to state 260
    "<="      shift, and go to state 261
    "<<="     shift, and go to state 262
    ">>="     shift, and go to state 263
    ">="      shift, and go to state 264
    "=="      shift, and go to state 265
    "!="      shift, and go to state 266
    "??"      shift, and go to state 267
    "?."      shift, and go to state 268
    "?["      shift, and go to state 269
    ":="      shift, and go to state 270
    "<<<"     shift, and go to state 271
    ">>>"     shift, and go to state 272
    "<<<="    shift, and go to state 273
    ">>>="    shift, and go to state 274
    "&&"      shift, and go to state 275
    "||"      shift, and go to state 276
    "^^"      shift, and go to state 277
    "&&="     shift, and go to state 278
    "||="     shift, and go to state 279
    "^^="     shift, and go to state 280
    ".."      shift, and go to state 281
    '?'       shift, and go to state 282
    '|'       shift, and go to state 283
    '^'       shift, and go to state 284
    '&'       shift, and go to state 285
    '<'       shift, and go to state 286
    '>'       shift, and go to state 287
    '-'       shift, and go to state 288
    '+'       shift, and go to state 289
    '*'       shift, and go to state 290
    '/'       shift, and go to state 291
    '%'       shift, and go to state 292
    '~'       shift, and go to state 293
    '!'       shift, and go to state 294
    '.'       shift, and go to state 295
    '['       shift, and go to state 296


State 195

  210 function_name: "bool" .

    $default  reduce using rule 210 (function_name)


State 196

  211 function_name: "string" .

    $default  reduce using rule 211 (function_name)


State 197

  212 function_name: "int" .

    $default  reduce using rule 212 (function_name)


State 198

  213 function_name: "int2" .

    $default  reduce using rule 213 (function_name)


State 199

  214 function_name: "int3" .

    $default  reduce using rule 214 (function_name)


State 200

  215 function_name: "int4" .

    $default  reduce using rule 215 (function_name)


State 201

  216 function_name: "uint" .

    $default  reduce using rule 216 (function_name)


State 202

  217 function_name: "uint2" .

    $default  reduce using rule 217 (function_name)


State 203

  218 function_name: "uint3" .

    $default  reduce using rule 218 (function_name)


State 204

  219 function_name: "uint4" .

    $default  reduce using rule 219 (function_name)


State 205

  220 function_name: "float" .

    $default  reduce using rule 220 (function_name)


State 206

  221 function_name: "float2" .

    $default  reduce using rule 221 (function_name)


State 207

  222 function_name: "float3" .

    $default  reduce using rule 222 (function_name)


State 208

  223 function_name: "float4" .

    $default  reduce using rule 223 (function_name)


State 209

  224 function_name: "range" .

    $default  reduce using rule 224 (function_name)


State 210

  225 function_name: "urange" .

    $default  reduce using rule 225 (function_name)


State 211

  226 function_name: "range64" .

    $default  reduce using rule 226 (function_name)


State 212

  227 function_name: "urange64" .

    $default  reduce using rule 227 (function_name)


State 213

  228 function_name: "int64" .

    $default  reduce using rule 228 (function_name)


State 214

  229 function_name: "uint64" .

    $default  reduce using rule 229 (function_name)


State 215

  230 function_name: "double" .

    $default  reduce using rule 230 (function_name)


State 216

  231 function_name: "int8" .

    $default  reduce using rule 231 (function_name)


State 217

  232 function_name: "uint8" .

    $default  reduce using rule 232 (function_name)


State 218

  233 function_name: "int16" .

    $default  reduce using rule 233 (function_name)


State 219

  234 function_name: "uint16" .

    $default  reduce using rule 234 (function_name)


State 220

  171 function_name: "++" . "operator"

    "operator"  shift, and go to state 297


State 221

  172 function_name: "--" . "operator"

    "operator"  shift, and go to state 298


State 222

  139 function_name: "name" .

    $default  reduce using rule 139 (function_name)


State 223

  239 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 300


State 224

  241 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 302


State 225

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 303
    "uint"    shift, and go to state 304
    "int64"   shift, and go to state 305
    "uint64"  shift, and go to state 306
    "int8"    shift, and go to state 307
    "uint8"   shift, and go to state 308
    "int16"   shift, and go to state 309
    "uint16"  shift, and go to state 310

    enum_basic_type_declaration  go to state 311


State 226

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 660 ($@42)

    $@42  go to state 312


State 227

  669 optional_sealed: "sealed" .

    $default  reduce using rule 669 (optional_sealed)


State 228

  670 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 313


State 229

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 681 ($@47)

    $@47  go to state 314


State 230

  631 global_variable_declaration_list: global_variable_declaration_list . "end of line"
  633                                 | global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  639 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 315
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 632 ($@38)

    close_block  go to state 316
    $@38         go to state 317


State 231

  563 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 318


State 232

  114 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 319


State 233

  115 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  116                       | metadata_argument_list . semicolon
  564 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 320

    $default  reduce using rule 564 (optional_field_annotation)

    semicolon  go to state 321


State 234

  641 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 325


State 235

   27 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 236

   28 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 237

   29 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 29 (string_constant)


State 238

  100 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 326


State 239

  111 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 111 (annotation_argument)


State 240

  650 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 374


State 241

   23 optional_not_required: '!' "inscope" .

    $default  reduce using rule 23 (optional_not_required)


State 242

  734 bitfield_basic_type_declaration: ':' . "uint8"
  735                                | ':' . "uint16"
  736                                | ':' . "uint"
  737                                | ':' . "uint64"

    "uint"    shift, and go to state 375
    "uint64"  shift, and go to state 376
    "uint8"   shift, and go to state 377
    "uint16"  shift, and go to state 378


State 243

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 379


State 244

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 817 ($@79)

    $@79  go to state 380


State 245

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 822 ($@83)

    $@83  go to state 381


State 246

  204 function_name: "operator" "is" .
  206              | "operator" "is" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 204 (function_name)


State 247

  205 function_name: "operator" "as" .
  207              | "operator" "as" . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 205 (function_name)


State 248

  202 function_name: "operator" "delete" .

    $default  reduce using rule 202 (function_name)


State 249

  142 function_name: "operator" "+=" .

    $default  reduce using rule 142 (function_name)


State 250

  143 function_name: "operator" "-=" .

    $default  reduce using rule 143 (function_name)


State 251

  145 function_name: "operator" "/=" .

    $default  reduce using rule 145 (function_name)


State 252

  144 function_name: "operator" "*=" .

    $default  reduce using rule 144 (function_name)


State 253

  146 function_name: "operator" "%=" .

    $default  reduce using rule 146 (function_name)


State 254

  147 function_name: "operator" "&=" .

    $default  reduce using rule 147 (function_name)


State 255

  148 function_name: "operator" "|=" .

    $default  reduce using rule 148 (function_name)


State 256

  149 function_name: "operator" "^=" .

    $default  reduce using rule 149 (function_name)


State 257

  175 function_name: "operator" "<<" .

    $default  reduce using rule 175 (function_name)


State 258

  176 function_name: "operator" ">>" .

    $default  reduce using rule 176 (function_name)


State 259

  173 function_name: "operator" "++" .

    $default  reduce using rule 173 (function_name)


State 260

  174 function_name: "operator" "--" .

    $default  reduce using rule 174 (function_name)


State 261

  166 function_name: "operator" "<=" .

    $default  reduce using rule 166 (function_name)


State 262

  177 function_name: "operator" "<<=" .

    $default  reduce using rule 177 (function_name)


State 263

  178 function_name: "operator" ">>=" .

    $default  reduce using rule 178 (function_name)


State 264

  167 function_name: "operator" ">=" .

    $default  reduce using rule 167 (function_name)


State 265

  164 function_name: "operator" "==" .

    $default  reduce using rule 164 (function_name)


State 266

  165 function_name: "operator" "!=" .

    $default  reduce using rule 165 (function_name)


State 267

  203 function_name: "operator" "??" .

    $default  reduce using rule 203 (function_name)


State 268

  186 function_name: "operator" "?." .
  200              | "operator" "?." . "name"

    "name"  shift, and go to state 384

    $default  reduce using rule 186 (function_name)


State 269

  184 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 385


State 270

  201 function_name: "operator" ":=" .

    $default  reduce using rule 201 (function_name)


State 271

  179 function_name: "operator" "<<<" .

    $default  reduce using rule 179 (function_name)


State 272

  180 function_name: "operator" ">>>" .

    $default  reduce using rule 180 (function_name)


State 273

  181 function_name: "operator" "<<<=" .

    $default  reduce using rule 181 (function_name)


State 274

  182 function_name: "operator" ">>>=" .

    $default  reduce using rule 182 (function_name)


State 275

  153 function_name: "operator" "&&" .

    $default  reduce using rule 153 (function_name)


State 276

  154 function_name: "operator" "||" .

    $default  reduce using rule 154 (function_name)


State 277

  155 function_name: "operator" "^^" .

    $default  reduce using rule 155 (function_name)


State 278

  150 function_name: "operator" "&&=" .

    $default  reduce using rule 150 (function_name)


State 279

  151 function_name: "operator" "||=" .

    $default  reduce using rule 151 (function_name)


State 280

  152 function_name: "operator" "^^=" .

    $default  reduce using rule 152 (function_name)


State 281

  163 function_name: "operator" ".." .

    $default  reduce using rule 163 (function_name)


State 282

  208 function_name: "operator" '?' . "as"
  209              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 386


State 283

  169 function_name: "operator" '|' .

    $default  reduce using rule 169 (function_name)


State 284

  170 function_name: "operator" '^' .

    $default  reduce using rule 170 (function_name)


State 285

  168 function_name: "operator" '&' .

    $default  reduce using rule 168 (function_name)


State 286

  161 function_name: "operator" '<' .

    $default  reduce using rule 161 (function_name)


State 287

  162 function_name: "operator" '>' .

    $default  reduce using rule 162 (function_name)


State 288

  157 function_name: "operator" '-' .

    $default  reduce using rule 157 (function_name)


State 289

  156 function_name: "operator" '+' .

    $default  reduce using rule 156 (function_name)


State 290

  158 function_name: "operator" '*' .

    $default  reduce using rule 158 (function_name)


State 291

  159 function_name: "operator" '/' .

    $default  reduce using rule 159 (function_name)


State 292

  160 function_name: "operator" '%' .

    $default  reduce using rule 160 (function_name)


State 293

  141 function_name: "operator" '~' .

    $default  reduce using rule 141 (function_name)


State 294

  140 function_name: "operator" '!' .

    $default  reduce using rule 140 (function_name)


State 295

  185 function_name: "operator" '.' .
  187              | "operator" '.' . "name"
  188              | "operator" '.' . "name" ":="
  189              | "operator" '.' . "name" "+="
  190              | "operator" '.' . "name" "-="
  191              | "operator" '.' . "name" "*="
  192              | "operator" '.' . "name" "/="
  193              | "operator" '.' . "name" "%="
  194              | "operator" '.' . "name" "&="
  195              | "operator" '.' . "name" "|="
  196              | "operator" '.' . "name" "^="
  197              | "operator" '.' . "name" "&&="
  198              | "operator" '.' . "name" "||="
  199              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 387

    $default  reduce using rule 185 (function_name)


State 296

  183 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 388


State 297

  171 function_name: "++" "operator" .

    $default  reduce using rule 171 (function_name)


State 298

  172 function_name: "--" "operator" .

    $default  reduce using rule 172 (function_name)


State 299

  135 optional_function_argument_list: '(' . ')'
  136                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    ')'   shift, and go to state 390
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 394


State 300

  239 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 396


State 301

  246 expression_block: open_block . expressions close_block
  247                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 272 (expressions)

    expressions  go to state 397


State 302

  241 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 241 (function_declaration)


State 303

  715 enum_basic_type_declaration: "int" .

    $default  reduce using rule 715 (enum_basic_type_declaration)


State 304

  718 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 718 (enum_basic_type_declaration)


State 305

  721 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 721 (enum_basic_type_declaration)


State 306

  722 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 722 (enum_basic_type_declaration)


State 307

  716 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 716 (enum_basic_type_declaration)


State 308

  719 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 719 (enum_basic_type_declaration)


State 309

  717 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 717 (enum_basic_type_declaration)


State 310

  720 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 720 (enum_basic_type_declaration)


State 311

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 398


State 312

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 642 (enum_list)

    enum_list  go to state 399


State 313

  670 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 400

    $default  reduce using rule 666 (optional_structure_parent)

    optional_structure_parent  go to state 401


State 314

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 678 (optional_struct_variable_declaration_list)

    open_block                                 go to state 402
    optional_struct_variable_declaration_list  go to state 403


State 315

  631 global_variable_declaration_list: global_variable_declaration_list "end of line" .

    $default  reduce using rule 631 (global_variable_declaration_list)


State 316

  639 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 639 (global_let)


State 317

  633 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list     go to state 233
    optional_field_annotation  go to state 404


State 318

  113 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  563 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 405


State 319

  114 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 114 (metadata_argument_list)


State 320

  115 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 406


State 321

  116 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 116 (metadata_argument_list)


State 322

  621 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 407


State 323

  620 let_variable_name_with_pos_list: "name" .
  622                                | "name" . "aka" "name"

    "aka"  shift, and go to state 408

    $default  reduce using rule 620 (let_variable_name_with_pos_list)


State 324

  623 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  624                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  625 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  626                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  627                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  628                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  629                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 409
    ':'  shift, and go to state 410
    '&'  shift, and go to state 411

    $default  reduce using rule 618 (optional_ref)

    optional_ref  go to state 412


State 325

  641 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 641 (global_let)


State 326

  100 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 100 (annotation_argument_value_list)


State 327

  755 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 413


State 328

  778 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 414


State 329

  781 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 415


State 330

  756 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 416


State 331

  784 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 417


State 332

  774 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 418


State 333

  688 basic_type_declaration: "bool" .

    $default  reduce using rule 688 (basic_type_declaration)


State 334

  708 basic_type_declaration: "void" .

    $default  reduce using rule 708 (basic_type_declaration)


State 335

  689 basic_type_declaration: "string" .

    $default  reduce using rule 689 (basic_type_declaration)


State 336

  724 auto_type_declaration: "auto" .
  725                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 419

    '('       [reduce using rule 724 (auto_type_declaration)]
    $default  reduce using rule 724 (auto_type_declaration)


State 337

  690 basic_type_declaration: "int" .

    $default  reduce using rule 690 (basic_type_declaration)


State 338

  694 basic_type_declaration: "int2" .

    $default  reduce using rule 694 (basic_type_declaration)


State 339

  695 basic_type_declaration: "int3" .

    $default  reduce using rule 695 (basic_type_declaration)


State 340

  696 basic_type_declaration: "int4" .

    $default  reduce using rule 696 (basic_type_declaration)


State 341

  697 basic_type_declaration: "uint" .

    $default  reduce using rule 697 (basic_type_declaration)


State 342

  714 basic_type_declaration: "bitfield" .
  740 bitfield_type_declaration: "bitfield" . bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49

    ':'  shift, and go to state 242

    '<'       reduce using rule 733 (bitfield_basic_type_declaration)
    $default  reduce using rule 714 (basic_type_declaration)

    bitfield_basic_type_declaration  go to state 420


State 343

  701 basic_type_declaration: "uint2" .

    $default  reduce using rule 701 (basic_type_declaration)


State 344

  702 basic_type_declaration: "uint3" .

    $default  reduce using rule 702 (basic_type_declaration)


State 345

  703 basic_type_declaration: "uint4" .

    $default  reduce using rule 703 (basic_type_declaration)


State 346

  704 basic_type_declaration: "float" .

    $default  reduce using rule 704 (basic_type_declaration)


State 347

  705 basic_type_declaration: "float2" .

    $default  reduce using rule 705 (basic_type_declaration)


State 348

  706 basic_type_declaration: "float3" .

    $default  reduce using rule 706 (basic_type_declaration)


State 349

  707 basic_type_declaration: "float4" .

    $default  reduce using rule 707 (basic_type_declaration)


State 350

  709 basic_type_declaration: "range" .

    $default  reduce using rule 709 (basic_type_declaration)


State 351

  710 basic_type_declaration: "urange" .

    $default  reduce using rule 710 (basic_type_declaration)


State 352

  711 basic_type_declaration: "range64" .

    $default  reduce using rule 711 (basic_type_declaration)


State 353

  712 basic_type_declaration: "urange64" .

    $default  reduce using rule 712 (basic_type_declaration)


State 354

  785 type_declaration_no_options: "block" .
  788                            | "block" . '<' $@61 type_declaration '>' $@62
  791                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 421

    $default  reduce using rule 785 (type_declaration_no_options)


State 355

  693 basic_type_declaration: "int64" .

    $default  reduce using rule 693 (basic_type_declaration)


State 356

  700 basic_type_declaration: "uint64" .

    $default  reduce using rule 700 (basic_type_declaration)


State 357

  713 basic_type_declaration: "double" .

    $default  reduce using rule 713 (basic_type_declaration)


State 358

  792 type_declaration_no_options: "function" .
  795                            | "function" . '<' $@65 type_declaration '>' $@66
  798                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 422

    $default  reduce using rule 792 (type_declaration_no_options)


State 359

  799 type_declaration_no_options: "lambda" .
  802                            | "lambda" . '<' $@69 type_declaration '>' $@70
  805                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 423

    $default  reduce using rule 799 (type_declaration_no_options)


State 360

  691 basic_type_declaration: "int8" .

    $default  reduce using rule 691 (basic_type_declaration)


State 361

  698 basic_type_declaration: "uint8" .

    $default  reduce using rule 698 (basic_type_declaration)


State 362

  692 basic_type_declaration: "int16" .

    $default  reduce using rule 692 (basic_type_declaration)


State 363

  699 basic_type_declaration: "uint16" .

    $default  reduce using rule 699 (basic_type_declaration)


State 364

  808 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 424


State 365

  811 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 425


State 366

  726 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 426


State 367

  757 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  759                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 427


State 368

  723 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 723 (structure_type_declaration)


State 369

  747 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 747 (type_declaration_no_options)


State 370

  750 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 750 (type_declaration_no_options)


State 371

  748 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 748 (type_declaration_no_options)


State 372

  749 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 749 (type_declaration_no_options)


State 373

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  812 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    '-'       [reduce using rule 812 (type_declaration)]
    '['       [reduce using rule 812 (type_declaration)]
    $default  reduce using rule 812 (type_declaration)

    dim_list  go to state 438


State 374

  650 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 650 (single_alias)


State 375

  736 bitfield_basic_type_declaration: ':' "uint" .

    $default  reduce using rule 736 (bitfield_basic_type_declaration)


State 376

  737 bitfield_basic_type_declaration: ':' "uint64" .

    $default  reduce using rule 737 (bitfield_basic_type_declaration)


State 377

  734 bitfield_basic_type_declaration: ':' "uint8" .

    $default  reduce using rule 734 (bitfield_basic_type_declaration)


State 378

  735 bitfield_basic_type_declaration: ':' "uint16" .

    $default  reduce using rule 735 (bitfield_basic_type_declaration)


State 379

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 827 ($@87)

    $@87  go to state 440


State 380

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 597 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 441


State 381

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 603 (variant_alias_type_list)

    variant_alias_type_list  go to state 442


State 382

  206 function_name: "operator" "is" "name" .

    $default  reduce using rule 206 (function_name)


State 383

  207 function_name: "operator" "as" "name" .

    $default  reduce using rule 207 (function_name)


State 384

  200 function_name: "operator" "?." "name" .

    $default  reduce using rule 200 (function_name)


State 385

  184 function_name: "operator" "?[" ']' .

    $default  reduce using rule 184 (function_name)


State 386

  208 function_name: "operator" '?' "as" .
  209              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 443

    $default  reduce using rule 208 (function_name)


State 387

  187 function_name: "operator" '.' "name" .
  188              | "operator" '.' "name" . ":="
  189              | "operator" '.' "name" . "+="
  190              | "operator" '.' "name" . "-="
  191              | "operator" '.' "name" . "*="
  192              | "operator" '.' "name" . "/="
  193              | "operator" '.' "name" . "%="
  194              | "operator" '.' "name" . "&="
  195              | "operator" '.' "name" . "|="
  196              | "operator" '.' "name" . "^="
  197              | "operator" '.' "name" . "&&="
  198              | "operator" '.' "name" . "||="
  199              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 444
    "-="   shift, and go to state 445
    "/="   shift, and go to state 446
    "*="   shift, and go to state 447
    "%="   shift, and go to state 448
    "&="   shift, and go to state 449
    "|="   shift, and go to state 450
    "^="   shift, and go to state 451
    ":="   shift, and go to state 452
    "&&="  shift, and go to state 453
    "||="  shift, and go to state 454
    "^^="  shift, and go to state 455

    $default  reduce using rule 187 (function_name)


State 388

  183 function_name: "operator" '[' ']' .

    $default  reduce using rule 183 (function_name)


State 389

  587 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 456


State 390

  135 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 135 (optional_function_argument_list)


State 391

  585 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  586 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 457
    "var"  shift, and go to state 458

    $default  reduce using rule 326 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 459


State 392

  588 function_argument_list: function_argument_declaration_no_type .
  590                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 588 (function_argument_list)

    semicolon  go to state 460


State 393

  589 function_argument_list: function_argument_declaration_type .
  591                       | function_argument_declaration_type . semicolon function_argument_list
  592                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 461

    $default  reduce using rule 589 (function_argument_list)

    semicolon  go to state 462


State 394

  136 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 463


State 395

  138 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 464


State 396

  239 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 239 (function_declaration_header)


State 397

  246 expression_block: open_block expressions . close_block
  247                 | open_block expressions . close_block "finally" open_block expressions close_block
  273 expressions: expressions . expression_any
  274            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "with"                            shift, and go to state 485
    "assume"                          shift, and go to state 486
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "pass"                            shift, and go to state 491
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 493
    "goto"                            shift, and go to state 494
    "unsafe"                          shift, and go to state 495
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "yield"                           shift, and go to state 502
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 525
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_label           go to state 540
    expression_goto            go to state 541
    semicolon                  go to state 542
    if_or_static_if            go to state 543
    expression_if_one_liner    go to state 544
    expression_if_then_else    go to state 545
    expression_for_loop        go to state 546
    expression_unsafe          go to state 547
    expression_while_loop      go to state 548
    expression_with            go to state 549
    expression_with_alias      go to state 550
    close_block                go to state 551
    expr_call_pipe             go to state 552
    expression_any             go to state 553
    expr_keyword               go to state 554
    expression_keyword         go to state 555
    expr_pipe                  go to state 556
    name_in_namespace          go to state 557
    expression_delete          go to state 558
    expr_new                   go to state 559
    expression_break           go to state 560
    expression_continue        go to state 561
    expression_return_no_pipe  go to state 562
    expression_return          go to state 563
    expression_yield_no_pipe   go to state 564
    expression_yield           go to state 565
    expression_try_catch       go to state 566
    kwd_let                    go to state 567
    expression_let             go to state 568
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_assign                go to state 575
    expr_assign_pipe           go to state 576
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 582
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 398

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 663 ($@44)

    $@44  go to state 591


State 399

  643 enum_list: enum_list . semicolon
  644          | enum_list . "name" semicolon
  645          | enum_list . "name" '=' expr semicolon
  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 592
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 661 ($@43)

    semicolon  go to state 593
    $@43       go to state 594


State 400

  667 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 595


State 401

  670 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 670 (structure_name)


State 402

  679 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 576 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 596


State 403

  682 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 682 (structure_declaration)


State 404

  633 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 322
    "name"  shift, and go to state 323

    let_variable_name_with_pos_list  go to state 324
    let_variable_declaration         go to state 597


State 405

  563 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 598


State 406

  115 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 115 (metadata_argument_list)


State 407

  621 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 603
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 408

  622 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 604


State 409

  623 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  624                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 605


State 410

  625 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  626                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  627                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 606


State 411

  619 optional_ref: '&' .

    $default  reduce using rule 619 (optional_ref)


State 412

  628 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  629                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 610


State 413

  755 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 753 ($@50)

    $@50  go to state 611


State 414

  778 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 776 ($@55)

    $@55  go to state 612


State 415

  781 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 779 ($@57)

    $@57  go to state 613


State 416

  756 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 614
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 417

  784 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 782 ($@59)

    $@59  go to state 615


State 418

  774 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 772 ($@53)

    $@53  go to state 616


State 419

  725 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 617


State 420

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 618


State 421

  788 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  791                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 789 ($@63)
    '>'       reduce using rule 789 ($@63)
    '('       reduce using rule 789 ($@63)
    $default  reduce using rule 786 ($@61)

    $@61  go to state 619
    $@63  go to state 620


State 422

  795 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  798                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 796 ($@67)
    '>'       reduce using rule 796 ($@67)
    '('       reduce using rule 796 ($@67)
    $default  reduce using rule 793 ($@65)

    $@65  go to state 621
    $@67  go to state 622


State 423

  802 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  805                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 803 ($@71)
    '>'       reduce using rule 803 ($@71)
    '('       reduce using rule 803 ($@71)
    $default  reduce using rule 800 ($@69)

    $@69  go to state 623
    $@71  go to state 624


State 424

  808 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 806 ($@73)

    $@73  go to state 625


State 425

  811 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 809 ($@75)

    $@75  go to state 626


State 426

  726 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 627
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 427

  757 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  759                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 628
    '('  shift, and go to state 629


State 428

  762 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 762 (type_declaration_no_options)


State 429

  767 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 767 (type_declaration_no_options)


State 430

  761 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 761 (type_declaration_no_options)


State 431

  769 type_declaration_no_options: type_declaration_no_options "==" . "const"
  770                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 630
    '&'      shift, and go to state 631


State 432

  775 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 775 (type_declaration_no_options)


State 433

  771 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 771 (type_declaration_no_options)


State 434

  764 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 764 (type_declaration_no_options)


State 435

  760 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  763                            | type_declaration_no_options '-' . "const"
  765                            | type_declaration_no_options '-' . '&'
  768                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 632
    '&'      shift, and go to state 633
    '['      shift, and go to state 634
    '#'      shift, and go to state 635


State 436

  745 dim_list: '[' . expr ']'
  752 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 636
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 637
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 437

  766 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 766 (type_declaration_no_options)


State 438

  746 dim_list: dim_list . '[' expr ']'
  751 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 638

    '['       [reduce using rule 751 (type_declaration_no_options)]
    $default  reduce using rule 751 (type_declaration_no_options)


State 439

  813 type_declaration: type_declaration '|' . type_declaration_no_options
  814                 | type_declaration '|' . '#'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367
    '#'          shift, and go to state 639

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 640


State 440

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 729 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 641


State 441

  598 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  599                      | tuple_alias_type_list . tuple_type c_or_s
  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 327
    "array"              shift, and go to state 328
    "table"              shift, and go to state 329
    "typedecl"           shift, and go to state 330
    "iterator"           shift, and go to state 331
    "smart_ptr"          shift, and go to state 332
    "bool"               shift, and go to state 333
    "void"               shift, and go to state 334
    "string"             shift, and go to state 335
    "auto"               shift, and go to state 336
    "int"                shift, and go to state 337
    "int2"               shift, and go to state 338
    "int3"               shift, and go to state 339
    "int4"               shift, and go to state 340
    "uint"               shift, and go to state 341
    "bitfield"           shift, and go to state 342
    "uint2"              shift, and go to state 343
    "uint3"              shift, and go to state 344
    "uint4"              shift, and go to state 345
    "float"              shift, and go to state 346
    "float2"             shift, and go to state 347
    "float3"             shift, and go to state 348
    "float4"             shift, and go to state 349
    "range"              shift, and go to state 350
    "urange"             shift, and go to state 351
    "range64"            shift, and go to state 352
    "urange64"           shift, and go to state 353
    "block"              shift, and go to state 354
    "int64"              shift, and go to state 355
    "uint64"             shift, and go to state 356
    "double"             shift, and go to state 357
    "function"           shift, and go to state 358
    "lambda"             shift, and go to state 359
    "int8"               shift, and go to state 360
    "uint8"              shift, and go to state 361
    "int16"              shift, and go to state 362
    "uint16"             shift, and go to state 363
    "tuple"              shift, and go to state 364
    "variant"            shift, and go to state 365
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 366
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 642
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '$'                  shift, and go to state 367

    $default  reduce using rule 818 ($@80)

    semicolon                    go to state 644
    name_in_namespace            go to state 368
    tuple_type                   go to state 645
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    c_or_s                       go to state 646
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647
    $@80                         go to state 648


State 442

  604 variant_alias_type_list: variant_alias_type_list . c_or_s
  605                        | variant_alias_type_list . variant_type c_or_s
  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 649
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    $default  reduce using rule 823 ($@84)

    semicolon     go to state 644
    variant_type  go to state 650
    c_or_s        go to state 651
    $@84          go to state 652


State 443

  209 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 209 (function_name)


State 444

  189 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 189 (function_name)


State 445

  190 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 190 (function_name)


State 446

  192 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 192 (function_name)


State 447

  191 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 191 (function_name)


State 448

  193 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 193 (function_name)


State 449

  194 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 194 (function_name)


State 450

  195 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 195 (function_name)


State 451

  196 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 196 (function_name)


State 452

  188 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 188 (function_name)


State 453

  197 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 197 (function_name)


State 454

  198 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 198 (function_name)


State 455

  199 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 199 (function_name)


State 456

  587 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 653
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 457

  324 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 324 (kwd_let_var_or_nothing)


State 458

  325 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 325 (kwd_let_var_or_nothing)


State 459

  585 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  586 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_declaration_no_type  go to state 656
    variable_declaration_type     go to state 657
    variable_name_with_pos_list   go to state 658


State 460

  590 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 659


State 461

  592 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 660


State 462

  591 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 389
    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list                 go to state 233
    optional_field_annotation              go to state 391
    function_argument_declaration_no_type  go to state 392
    function_argument_declaration_type     go to state 393
    function_argument_list                 go to state 661


State 463

  136 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 136 (optional_function_argument_list)


State 464

  138 optional_function_type: ':' type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 138 (optional_function_type)


State 465

  274 expressions: expressions error .

    $default  reduce using rule 274 (expressions)


State 466

  878 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 662


State 467

  881 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 663


State 468

   88 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 664
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 469

   72 if_or_static_if: "if" .

    $default  reduce using rule 72 (if_or_static_if)


State 470

   73 if_or_static_if: "static_if" .

    $default  reduce using rule 73 (if_or_static_if)


State 471

   86 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 85 ($@5)

    $@5  go to state 665


State 472

  467 expr: "true" .

    $default  reduce using rule 467 (expr)


State 473

  468 expr: "false" .

    $default  reduce using rule 468 (expr)


State 474

  304 expr_new: "new" . new_type_declaration
  305         | "new" . new_type_declaration '(' use_initializer ')'
  306         | "new" . new_type_declaration '(' expr_list ')'
  307         | "new" . new_type_declaration '(' make_struct_single ')'
  308         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  309         | "new" . make_decl

    "struct"               shift, and go to state 466
    "class"                shift, and go to state 467
    "array"                shift, and go to state 477
    "table"                shift, and go to state 482
    "fixed_array"          shift, and go to state 496
    "default"              shift, and go to state 497
    "tuple"                shift, and go to state 499
    "variant"              shift, and go to state 500
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 515
    "[{"                   shift, and go to state 516
    "{{"                   shift, and go to state 517
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 528
    '<'                    shift, and go to state 666
    '['                    shift, and go to state 534

    name_in_namespace           go to state 368
    new_type_declaration        go to state 667
    structure_type_declaration  go to state 668
    make_decl                   go to state 669
    make_struct_decl            go to state 586
    make_tuple_call             go to state 587
    make_dim_decl               go to state 588
    make_table_decl             go to state 589
    array_comprehension         go to state 590


State 475

  355 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  356               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  357               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  358               | "typeinfo" . name_in_namespace '(' expr ')'
  359               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  360               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 670

    name_in_namespace  go to state 671


State 476

  354 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 672


State 477

  904 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  907              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  910              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  911              | "array" . '(' expr_list optional_comma ')'
  914              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 673
    "tuple"    shift, and go to state 674
    "variant"  shift, and go to state 675
    '<'        shift, and go to state 676
    '('        shift, and go to state 677


State 478

  312 expression_return_no_pipe: "return" .
  313                          | "return" . expr_list
  314                          | "return" . "<-" expr_list
  316 expression_return: "return" . expr_pipe
  317                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 312 (expression_return_no_pipe)

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 679
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 680
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 682
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 479

  461 expr: "null" .

    $default  reduce using rule 461 (expr)


State 480

  310 expression_break: "break" .

    $default  reduce using rule 310 (expression_break)


State 481

  323 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 683


State 482

  925 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  926                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  927                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 684
    '('  shift, and go to state 685


State 483

  298 expression_delete: "delete" . expr
  299                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "explicit"                        shift, and go to state 686
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 687
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 484

  512 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 688


State 485

   89 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 689
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 486

   91 expression_with_alias: "assume" . "name" '=' $@6 expr
   92                      | "assume" . "type" "name" '=' type_declaration

    "type"  shift, and go to state 690
    "name"  shift, and go to state 691


State 487

  345 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 692


State 488

  348 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 693


State 489

  513 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 694


State 490

  311 expression_continue: "continue" .

    $default  reduce using rule 311 (expression_continue)


State 491

  271 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 695


State 492

  351 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 696


State 493

   62 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 697


State 494

   63 expression_goto: "goto" . "label" "integer constant"
   64                | "goto" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 698
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 699
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 495

   87 expression_unsafe: "unsafe" . expression_block
  544 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 700

    open_block        go to state 301
    expression_block  go to state 701


State 496

  915 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  918              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 702
    '('  shift, and go to state 703


State 497

  887 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 704


State 498

  714 basic_type_declaration: "bitfield" .

    $default  reduce using rule 714 (basic_type_declaration)


State 499

  893 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  896                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 705
    '('  shift, and go to state 706


State 500

  884 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 707


State 501

  250 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  514 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  515     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 708


State 502

  318 expression_yield_no_pipe: "yield" . expr
  319                         | "yield" . "<-" expr
  321 expression_yield: "yield" . expr_pipe
  322                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 709
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 710
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 711
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 503

  497 expr: "++" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 712
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 504

  498 expr: "--" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 713
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 505

  293 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 717


State 506

  291 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 718


State 507

  292 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 719


State 508

  546 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 720


State 509

  547 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 721


State 510

  548 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 722


State 511

  549 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 723


State 512

  550 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 724


State 513

  552 expr_mtag: "$c" . '(' expr ')' '(' ')'
  553          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 725


State 514

  551 expr_mtag: "..." .

    $default  reduce using rule 551 (expr_mtag)


State 515

  870 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  873                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  900 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  934 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 726
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 727


State 516

  874 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  875                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  901 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  935 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 728
    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 729


State 517

  924 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  937 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 730
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 732
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table              go to state 733
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 518

  384 expr_numeric_const: "integer constant" .

    $default  reduce using rule 384 (expr_numeric_const)


State 519

  386 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 386 (expr_numeric_const)


State 520

  385 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 385 (expr_numeric_const)


State 521

  387 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 387 (expr_numeric_const)


State 522

  388 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 388 (expr_numeric_const)


State 523

  389 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 389 (expr_numeric_const)


State 524

  390 expr_numeric_const: "double constant" .

    $default  reduce using rule 390 (expr_numeric_const)


State 525

  275 expr_keyword: "keyword" . expr expression_block
  286 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '<'                               shift, and go to state 734
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 735
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 526

  289 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 736


State 527

   39 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 36 (string_builder_body)

    string_builder_body  go to state 737


State 528

  923 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  936 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 738
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 739
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 731
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 740
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 741
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 529

  474 expr: '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 742
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 530

  473 expr: '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 743
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 531

  511 expr: '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 744
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 532

  472 expr: '~' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 745
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 533

  471 expr: '!' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 746
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 534

  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 535

  501 expr: '(' . expr_list optional_comma ')'
  502     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 754
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 755
    make_struct_single      go to state 756
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 536

  366 block_or_lambda: '$' .

    $default  reduce using rule 366 (block_or_lambda)


State 537

  367 block_or_lambda: '@' .
  368                | '@' . '@'
  437 func_addr_expr: '@' . '@' func_addr_name
  440               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  443               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  561 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 757

    $default  reduce using rule 367 (block_or_lambda)


State 538

  465 expr: string_builder .

    $default  reduce using rule 465 (expr)


State 539

  464 expr: expr_reader .

    $default  reduce using rule 464 (expr)


State 540

  269 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 758


State 541

  270 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 759


State 542

  251 expression_any: semicolon .

    $default  reduce using rule 251 (expression_any)


State 543

   82 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 760
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 544

   84 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 761


State 545

  267 expression_any: expression_if_then_else .

    $default  reduce using rule 267 (expression_any)


State 546

  262 expression_any: expression_for_loop .

    $default  reduce using rule 262 (expression_any)


State 547

  259 expression_any: expression_unsafe .

    $default  reduce using rule 259 (expression_any)


State 548

  258 expression_any: expression_while_loop .

    $default  reduce using rule 258 (expression_any)


State 549

  260 expression_any: expression_with .

    $default  reduce using rule 260 (expression_any)


State 550

  261 expression_any: expression_with_alias .

    $default  reduce using rule 261 (expression_any)


State 551

  246 expression_block: open_block expressions close_block .
  247                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 762

    $default  reduce using rule 246 (expression_block)


State 552

  294 expr_pipe: expr_call_pipe .

    $default  reduce using rule 294 (expr_pipe)


State 553

  273 expressions: expressions expression_any .

    $default  reduce using rule 273 (expressions)


State 554

  253 expression_any: expr_keyword .

    $default  reduce using rule 253 (expression_any)


State 555

  249 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  545 expr: expression_keyword .

    '$'  shift, and go to state 536
    '@'  shift, and go to state 714

    '$'       [reduce using rule 545 (expr)]
    '@'       [reduce using rule 545 (expr)]
    $default  reduce using rule 545 (expr)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 764


State 556

  252 expression_any: expr_pipe .

    $default  reduce using rule 252 (expression_any)


State 557

  431 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  432                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  454 expr_call: name_in_namespace . '(' ')'
  455          | name_in_namespace . '(' "uninitialized" ')'
  456          | name_in_namespace . '(' make_struct_single ')'
  457          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  458          | name_in_namespace . '(' expr_list ')'
  462 expr: name_in_namespace .
  543     | name_in_namespace . "name"

    "name"  shift, and go to state 765
    '('     shift, and go to state 766

    "name"    [reduce using rule 462 (expr)]
    '('       [reduce using rule 462 (expr)]
    $default  reduce using rule 462 (expr)


State 558

  256 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 767


State 559

  536 expr: expr_new .

    $default  reduce using rule 536 (expr)


State 560

   80 expression_if_one_liner: expression_break .
  263 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 80 (expression_if_one_liner)

    semicolon  go to state 768


State 561

   81 expression_if_one_liner: expression_continue .
  264 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 81 (expression_if_one_liner)

    semicolon  go to state 769


State 562

   78 expression_if_one_liner: expression_return_no_pipe .
  315 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 770


State 563

  265 expression_any: expression_return .

    $default  reduce using rule 265 (expression_any)


State 564

   79 expression_if_one_liner: expression_yield_no_pipe .
  320 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 771


State 565

  266 expression_any: expression_yield .

    $default  reduce using rule 266 (expression_any)


State 566

  268 expression_any: expression_try_catch .

    $default  reduce using rule 268 (expression_any)


State 567

  341 expression_let: kwd_let . optional_in_scope let_variable_declaration
  342               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 772

    $default  reduce using rule 330 (optional_in_scope)

    optional_in_scope  go to state 773


State 568

  257 expression_any: expression_let .

    $default  reduce using rule 257 (expression_any)


State 569

  535 expr: expr_cast .

    $default  reduce using rule 535 (expr)


State 570

  534 expr: expr_type_decl .

    $default  reduce using rule 534 (expr)


State 571

  533 expr: expr_type_info .

    $default  reduce using rule 533 (expr)


State 572

  381 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 132 (optional_annotation_list)

    optional_annotation_list  go to state 774


State 573

  539 expr: expr_full_block .

    $default  reduce using rule 539 (expr)


State 574

  463 expr: expr_numeric_const .

    $default  reduce using rule 463 (expr)


State 575

  255 expression_any: expr_assign . semicolon
  290 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 775
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 776


State 576

  254 expression_any: expr_assign_pipe .

    $default  reduce using rule 254 (expression_any)


State 577

  538 expr: expr_named_call .

    $default  reduce using rule 538 (expr)


State 578

  537 expr: expr_method_call .

    $default  reduce using rule 537 (expr)


State 579

  509 expr: func_addr_expr .

    $default  reduce using rule 509 (expr)


State 580

  469 expr: expr_field .

    $default  reduce using rule 469 (expr)


State 581

  510 expr: expr_call .

    $default  reduce using rule 510 (expr)


State 582

   77 expression_if_one_liner: expr .
  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  414 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  415                 | expr . "<-" expr_assign_pipe_right
  416                 | expr . "&=" expr_assign_pipe_right
  417                 | expr . "|=" expr_assign_pipe_right
  418                 | expr . "^=" expr_assign_pipe_right
  419                 | expr . "&&=" expr_assign_pipe_right
  420                 | expr . "||=" expr_assign_pipe_right
  421                 | expr . "^^=" expr_assign_pipe_right
  422                 | expr . "+=" expr_assign_pipe_right
  423                 | expr . "-=" expr_assign_pipe_right
  424                 | expr . "*=" expr_assign_pipe_right
  425                 | expr . "/=" expr_assign_pipe_right
  426                 | expr . "%=" expr_assign_pipe_right
  427                 | expr . "<<=" expr_assign_pipe_right
  428                 | expr . ">>=" expr_assign_pipe_right
  429                 | expr . "<<<=" expr_assign_pipe_right
  430                 | expr . ">>>=" expr_assign_pipe_right
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 777
    "as"    shift, and go to state 778
    "+="    shift, and go to state 779
    "-="    shift, and go to state 780
    "/="    shift, and go to state 781
    "*="    shift, and go to state 782
    "%="    shift, and go to state 783
    "&="    shift, and go to state 784
    "|="    shift, and go to state 785
    "^="    shift, and go to state 786
    "<<"    shift, and go to state 787
    ">>"    shift, and go to state 788
    "++"    shift, and go to state 789
    "--"    shift, and go to state 790
    "<="    shift, and go to state 791
    "<<="   shift, and go to state 792
    ">>="   shift, and go to state 793
    ">="    shift, and go to state 794
    "=="    shift, and go to state 795
    "!="    shift, and go to state 796
    "->"    shift, and go to state 797
    "<-"    shift, and go to state 798
    "??"    shift, and go to state 799
    "?."    shift, and go to state 800
    "?["    shift, and go to state 801
    "<|"    shift, and go to state 802
    "|>"    shift, and go to state 803
    ":="    shift, and go to state 804
    "<<<"   shift, and go to state 805
    ">>>"   shift, and go to state 806
    "<<<="  shift, and go to state 807
    ">>>="  shift, and go to state 808
    "&&"    shift, and go to state 809
    "||"    shift, and go to state 810
    "^^"    shift, and go to state 811
    "&&="   shift, and go to state 812
    "||="   shift, and go to state 813
    "^^="   shift, and go to state 814
    ".."    shift, and go to state 815
    '='     shift, and go to state 816
    '?'     shift, and go to state 817
    '|'     shift, and go to state 818
    '^'     shift, and go to state 819
    '&'     shift, and go to state 820
    '<'     shift, and go to state 821
    '>'     shift, and go to state 822
    '-'     shift, and go to state 823
    '+'     shift, and go to state 824
    '*'     shift, and go to state 825
    '/'     shift, and go to state 826
    '%'     shift, and go to state 827
    '.'     shift, and go to state 828
    '['     shift, and go to state 829
    '$'     shift, and go to state 536
    '@'     shift, and go to state 714

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 391 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 583

  470 expr: expr_mtag .

    $default  reduce using rule 470 (expr)


State 584

  459 expr_call: basic_type_declaration . '(' ')'
  460          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 831


State 585

  466 expr: make_decl .

    $default  reduce using rule 466 (expr)


State 586

  830 make_decl: make_struct_decl .

    $default  reduce using rule 830 (make_decl)


State 587

  834 make_decl: make_tuple_call .

    $default  reduce using rule 834 (make_decl)


State 588

  831 make_decl: make_dim_decl .

    $default  reduce using rule 831 (make_decl)


State 589

  832 make_decl: make_table_decl .

    $default  reduce using rule 832 (make_decl)


State 590

  833 make_decl: array_comprehension .

    $default  reduce using rule 833 (make_decl)


State 591

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 642 (enum_list)

    enum_list  go to state 832


State 592

  644 enum_list: enum_list "name" . semicolon
  645          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 833

    semicolon  go to state 834


State 593

  643 enum_list: enum_list semicolon .

    $default  reduce using rule 643 (enum_list)


State 594

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 835


State 595

  667 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 667 (optional_structure_parent)


State 596

  577 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  579                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  581                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  583                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  584                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  679 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 836

    "def"     reduce using rule 132 (optional_annotation_list)
    $default  reduce using rule 578 ($@35)

    semicolon                 go to state 837
    optional_annotation_list  go to state 838
    close_block               go to state 839
    $@35                      go to state 840


State 597

  633 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 633 (global_variable_declaration_list)


State 598

  563 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 563 (optional_field_annotation)


State 599

  544 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 700


State 600

  514 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  515     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 841


State 601

  286 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 734


State 602

  545 expr: expression_keyword .

    $default  reduce using rule 545 (expr)


State 603

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  621 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 842


State 604

  622 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 622 (let_variable_name_with_pos_list)


State 605

  623 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  624                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 843

    $default  reduce using rule 623 (let_variable_name_with_pos_list)


State 606

  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  626                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  627                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "<-"                 shift, and go to state 607
    "??"                 shift, and go to state 432
    ":="                 shift, and go to state 608
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 609
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon              go to state 844
    copy_or_move_or_clone  go to state 845
    dim_list               go to state 438


State 607

  616 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 616 (copy_or_move_or_clone)


State 608

  617 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 617 (copy_or_move_or_clone)


State 609

  615 copy_or_move_or_clone: '=' .

    $default  reduce using rule 615 (copy_or_move_or_clone)


State 610

  628 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  629                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 846
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 847
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 611

  755 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 848


State 612

  778 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 849


State 613

  781 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    table_type_pair              go to state 850
    type_declaration_no_options  go to state 373
    type_declaration             go to state 851


State 614

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  756 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 852


State 615

  784 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 853


State 616

  774 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 854


State 617

  725 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 855


State 618

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 738 ($@48)

    $@48  go to state 856


State 619

  788 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 857


State 620

  791 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 858


State 621

  795 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 859


State 622

  798 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 860


State 623

  802 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 861


State 624

  805 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 862


State 625

  808 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 863
    tuple_type_list              go to state 864
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 626

  811 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 649

    variant_type       go to state 865
    variant_type_list  go to state 866


State 627

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  726 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 867


State 628

  759 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 758 ($@52)

    $@52  go to state 868


State 629

  757 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 869
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 630

  769 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 769 (type_declaration_no_options)


State 631

  770 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 770 (type_declaration_no_options)


State 632

  763 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 763 (type_declaration_no_options)


State 633

  765 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 765 (type_declaration_no_options)


State 634

  760 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 870


State 635

  768 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 768 (type_declaration_no_options)


State 636

  752 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 752 (type_declaration_no_options)


State 637

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  745 dim_list: '[' expr . ']'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 871


State 638

  746 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 872
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 639

  814 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 814 (type_declaration)


State 640

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  813 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    $default  reduce using rule 813 (type_declaration)

    dim_list  go to state 438


State 641

  730 bitfield_alias_bits: bitfield_alias_bits . semicolon
  731                    | bitfield_alias_bits . "name" semicolon
  732                    | bitfield_alias_bits . "name" '=' expr semicolon
  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 873
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 828 ($@88)

    semicolon  go to state 874
    $@88       go to state 875


State 642

  295 name_in_namespace: "name" .
  296                  | "name" . "::" "name"
  594 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 876

    $default  reduce using rule 295 (name_in_namespace)


State 643

  741 c_or_s: ',' .

    $default  reduce using rule 741 (c_or_s)


State 644

  742 c_or_s: semicolon .

    $default  reduce using rule 742 (c_or_s)


State 645

  599 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    semicolon  go to state 644
    c_or_s     go to state 877


State 646

  598 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 598 (tuple_alias_type_list)


State 647

  593 tuple_type: type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 593 (tuple_type)


State 648

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 878


State 649

  600 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 879


State 650

  605 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643

    semicolon  go to state 644
    c_or_s     go to state 880


State 651

  604 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 604 (variant_alias_type_list)


State 652

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 881


State 653

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  587 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 882


State 654

  684 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 883


State 655

  683 variable_name_with_pos_list: "name" .
  685                            | "name" . "aka" "name"

    "aka"  shift, and go to state 884

    $default  reduce using rule 683 (variable_name_with_pos_list)


State 656

  585 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 585 (function_argument_declaration_no_type)


State 657

  586 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 586 (function_argument_declaration_type)


State 658

  608 variable_declaration_no_type: variable_name_with_pos_list .
  609                             | variable_name_with_pos_list . '&'
  610                             | variable_name_with_pos_list . copy_or_move expr
  611 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  612                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 885
    ','   shift, and go to state 886
    '='   shift, and go to state 887
    ':'   shift, and go to state 888
    '&'   shift, and go to state 889

    $default  reduce using rule 608 (variable_declaration_no_type)

    copy_or_move  go to state 890


State 659

  590 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 590 (function_argument_list)


State 660

  592 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 592 (function_argument_list)


State 661

  591 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 591 (function_argument_list)


State 662

  878 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 876 ($@89)

    $@89  go to state 891


State 663

  881 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 879 ($@91)

    $@91  go to state 892


State 664

   88 expression_while_loop: "while" expr . expression_block
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 777
    "as"                   shift, and go to state 778
    "<<"                   shift, and go to state 787
    ">>"                   shift, and go to state 788
    "++"                   shift, and go to state 789
    "--"                   shift, and go to state 790
    "<="                   shift, and go to state 791
    ">="                   shift, and go to state 794
    "=="                   shift, and go to state 795
    "!="                   shift, and go to state 796
    "->"                   shift, and go to state 797
    "??"                   shift, and go to state 799
    "?."                   shift, and go to state 800
    "?["                   shift, and go to state 801
    "<|"                   shift, and go to state 802
    "|>"                   shift, and go to state 803
    "<<<"                  shift, and go to state 805
    ">>>"                  shift, and go to state 806
    "&&"                   shift, and go to state 809
    "||"                   shift, and go to state 810
    "^^"                   shift, and go to state 811
    ".."                   shift, and go to state 815
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 817
    '|'                    shift, and go to state 818
    '^'                    shift, and go to state 819
    '&'                    shift, and go to state 820
    '<'                    shift, and go to state 821
    '>'                    shift, and go to state 822
    '-'                    shift, and go to state 823
    '+'                    shift, and go to state 824
    '*'                    shift, and go to state 825
    '/'                    shift, and go to state 826
    '%'                    shift, and go to state 827
    '.'                    shift, and go to state 828
    '['                    shift, and go to state 829

    open_block        go to state 301
    expression_block  go to state 893


State 665

   86 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 894


State 666

  302 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 300 ($@12)

    $@12  go to state 895


State 667

  304 expr_new: "new" new_type_declaration .
  305         | "new" new_type_declaration . '(' use_initializer ')'
  306         | "new" new_type_declaration . '(' expr_list ')'
  307         | "new" new_type_declaration . '(' make_struct_single ')'
  308         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 896

    '('       [reduce using rule 304 (expr_new)]
    $default  reduce using rule 304 (expr_new)


State 668

  303 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 303 (new_type_declaration)


State 669

  309 expr_new: "new" make_decl .

    $default  reduce using rule 309 (expr_new)


State 670

  355 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  356               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  357               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 897


State 671

  358 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  359               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  360               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 898
    '('  shift, and go to state 899


State 672

  354 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 352 ($@20)

    $@20  go to state 900


State 673

  904 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 901


State 674

  907 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 902


State 675

  910 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 903


State 676

  914 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 912 ($@105)

    $@105  go to state 904


State 677

  911 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 905
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 678

  314 expression_return_no_pipe: "return" "<-" . expr_list
  317 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 906
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 907
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 682
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 679

  316 expression_return: "return" expr_pipe .

    $default  reduce using rule 316 (expression_return)


State 680

  313 expression_return_no_pipe: "return" expr_list .
  362 expr_list: expr_list . ',' expr

    ','  shift, and go to state 908

    $default  reduce using rule 313 (expression_return_no_pipe)


State 681

  290 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 775


State 682

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_list: expr .
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 777
    "as"    shift, and go to state 778
    "+="    shift, and go to state 909
    "-="    shift, and go to state 910
    "/="    shift, and go to state 911
    "*="    shift, and go to state 912
    "%="    shift, and go to state 913
    "&="    shift, and go to state 914
    "|="    shift, and go to state 915
    "^="    shift, and go to state 916
    "<<"    shift, and go to state 787
    ">>"    shift, and go to state 788
    "++"    shift, and go to state 789
    "--"    shift, and go to state 790
    "<="    shift, and go to state 791
    "<<="   shift, and go to state 917
    ">>="   shift, and go to state 918
    ">="    shift, and go to state 794
    "=="    shift, and go to state 795
    "!="    shift, and go to state 796
    "->"    shift, and go to state 797
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 799
    "?."    shift, and go to state 800
    "?["    shift, and go to state 801
    "<|"    shift, and go to state 802
    "|>"    shift, and go to state 803
    ":="    shift, and go to state 804
    "<<<"   shift, and go to state 805
    ">>>"   shift, and go to state 806
    "<<<="  shift, and go to state 920
    ">>>="  shift, and go to state 921
    "&&"    shift, and go to state 809
    "||"    shift, and go to state 810
    "^^"    shift, and go to state 811
    "&&="   shift, and go to state 922
    "||="   shift, and go to state 923
    "^^="   shift, and go to state 924
    ".."    shift, and go to state 815
    '='     shift, and go to state 925
    '?'     shift, and go to state 817
    '|'     shift, and go to state 818
    '^'     shift, and go to state 819
    '&'     shift, and go to state 820
    '<'     shift, and go to state 821
    '>'     shift, and go to state 822
    '-'     shift, and go to state 823
    '+'     shift, and go to state 824
    '*'     shift, and go to state 825
    '/'     shift, and go to state 826
    '%'     shift, and go to state 827
    '.'     shift, and go to state 828
    '['     shift, and go to state 829
    '$'     shift, and go to state 536
    '@'     shift, and go to state 714

    " <|"     reduce using rule 391 (expr_assign)
    $default  reduce using rule 361 (expr_list)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 683

  323 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 926


State 684

  926 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  927                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 927


State 685

  925 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 928
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 731
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 740
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 741
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 686

  299 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 929
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 687

  298 expression_delete: "delete" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 298 (expression_delete)


State 688

  512 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 930
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 689

   89 expression_with: "with" expr . expression_block
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 777
    "as"                   shift, and go to state 778
    "<<"                   shift, and go to state 787
    ">>"                   shift, and go to state 788
    "++"                   shift, and go to state 789
    "--"                   shift, and go to state 790
    "<="                   shift, and go to state 791
    ">="                   shift, and go to state 794
    "=="                   shift, and go to state 795
    "!="                   shift, and go to state 796
    "->"                   shift, and go to state 797
    "??"                   shift, and go to state 799
    "?."                   shift, and go to state 800
    "?["                   shift, and go to state 801
    "<|"                   shift, and go to state 802
    "|>"                   shift, and go to state 803
    "<<<"                  shift, and go to state 805
    ">>>"                  shift, and go to state 806
    "&&"                   shift, and go to state 809
    "||"                   shift, and go to state 810
    "^^"                   shift, and go to state 811
    ".."                   shift, and go to state 815
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 817
    '|'                    shift, and go to state 818
    '^'                    shift, and go to state 819
    '&'                    shift, and go to state 820
    '<'                    shift, and go to state 821
    '>'                    shift, and go to state 822
    '-'                    shift, and go to state 823
    '+'                    shift, and go to state 824
    '*'                    shift, and go to state 825
    '/'                    shift, and go to state 826
    '%'                    shift, and go to state 827
    '.'                    shift, and go to state 828
    '['                    shift, and go to state 829

    open_block        go to state 301
    expression_block  go to state 931


State 690

   92 expression_with_alias: "assume" "type" . "name" '=' type_declaration

    "name"  shift, and go to state 932


State 691

   91 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 933


State 692

  345 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 343 ($@14)

    $@14  go to state 934


State 693

  348 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 346 ($@16)

    $@16  go to state 935


State 694

  513 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 936
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 695

  271 expression_any: "pass" semicolon .

    $default  reduce using rule 271 (expression_any)


State 696

  351 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 349 ($@18)

    $@18  go to state 937


State 697

   62 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 938


State 698

   63 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 939


State 699

   64 expression_goto: "goto" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 64 (expression_goto)


State 700

  544 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 940
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 701

   87 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 87 (expression_unsafe)


State 702

  918 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 916 ($@107)

    $@107  go to state 941


State 703

  915 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 942
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 704

  887 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 885 ($@95)

    $@95  go to state 943


State 705

  896 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 894 ($@97)

    $@97  go to state 944


State 706

  893 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 945
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 707

  884 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 882 ($@93)

    $@93  go to state 946


State 708

  250 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  514 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  515     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 947


State 709

  319 expression_yield_no_pipe: "yield" "<-" . expr
  322 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 948
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 949
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 710

  321 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 321 (expression_yield)


State 711

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  318 expression_yield_no_pipe: "yield" expr .
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 777
    "as"    shift, and go to state 778
    "+="    shift, and go to state 909
    "-="    shift, and go to state 910
    "/="    shift, and go to state 911
    "*="    shift, and go to state 912
    "%="    shift, and go to state 913
    "&="    shift, and go to state 914
    "|="    shift, and go to state 915
    "^="    shift, and go to state 916
    "<<"    shift, and go to state 787
    ">>"    shift, and go to state 788
    "++"    shift, and go to state 789
    "--"    shift, and go to state 790
    "<="    shift, and go to state 791
    "<<="   shift, and go to state 917
    ">>="   shift, and go to state 918
    ">="    shift, and go to state 794
    "=="    shift, and go to state 795
    "!="    shift, and go to state 796
    "->"    shift, and go to state 797
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 799
    "?."    shift, and go to state 800
    "?["    shift, and go to state 801
    "<|"    shift, and go to state 802
    "|>"    shift, and go to state 803
    ":="    shift, and go to state 804
    "<<<"   shift, and go to state 805
    ">>>"   shift, and go to state 806
    "<<<="  shift, and go to state 920
    ">>>="  shift, and go to state 921
    "&&"    shift, and go to state 809
    "||"    shift, and go to state 810
    "^^"    shift, and go to state 811
    "&&="   shift, and go to state 922
    "||="   shift, and go to state 923
    "^^="   shift, and go to state 924
    ".."    shift, and go to state 815
    '='     shift, and go to state 925
    '?'     shift, and go to state 817
    '|'     shift, and go to state 818
    '^'     shift, and go to state 819
    '&'     shift, and go to state 820
    '<'     shift, and go to state 821
    '>'     shift, and go to state 822
    '-'     shift, and go to state 823
    '+'     shift, and go to state 824
    '*'     shift, and go to state 825
    '/'     shift, and go to state 826
    '%'     shift, and go to state 827
    '.'     shift, and go to state 828
    '['     shift, and go to state 829
    '$'     shift, and go to state 536
    '@'     shift, and go to state 714

    " <|"     reduce using rule 391 (expr_assign)
    $default  reduce using rule 318 (expression_yield_no_pipe)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 712

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  497     | "++" expr .
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 497 (expr)


State 713

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  498     | "--" expr .
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 498 (expr)


State 714

  367 block_or_lambda: '@' .
  368                | '@' . '@'

    '@'  shift, and go to state 950

    $default  reduce using rule 367 (block_or_lambda)


State 715

  379 expr_block: expression_block .

    $default  reduce using rule 379 (expr_block)


State 716

  380 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 132 (optional_annotation_list)

    optional_annotation_list  go to state 951


State 717

  293 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 293 (expr_pipe)


State 718

  291 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 291 (expr_pipe)


State 719

  292 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 292 (expr_pipe)


State 720

  546 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 952
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 721

  547 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 953
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 722

  548 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 954
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 723

  549 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 955
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 724

  550 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 956
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 725

  552 expr_mtag: "$c" '(' . expr ')' '(' ')'
  553          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 957
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 726

  934 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 958


State 727

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  870 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  871                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  872                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  873                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  900 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "where"                           shift, and go to state 959
    "reinterpret"                     shift, and go to state 492
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 960
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 961
    '('                               shift, and go to state 962
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 437

    $default  reduce using rule 854 (optional_block)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 963
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    dim_list                go to state 438
    make_decl               go to state 585
    make_struct_fields      go to state 964
    make_struct_dim         go to state 965
    optional_block          go to state 966
    make_struct_decl        go to state 586
    make_tuple              go to state 967
    make_tuple_call         go to state 587
    make_dim                go to state 968
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 728

  935 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 969


State 729

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  874 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  875                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  901 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 428
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "implicit"                        shift, and go to state 429
    "explicit"                        shift, and go to state 430
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "=="                              shift, and go to state 431
    "??"                              shift, and go to state 432
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '?'                               shift, and go to state 433
    '&'                               shift, and go to state 434
    '-'                               shift, and go to state 960
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 961
    '('                               shift, and go to state 970
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 437

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 963
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    dim_list                go to state 438
    make_decl               go to state 585
    make_struct_fields      go to state 964
    make_struct_dim         go to state 971
    make_struct_decl        go to state 586
    make_tuple              go to state 967
    make_tuple_call         go to state 587
    make_dim                go to state 972
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 730

  937 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 973


State 731

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  891 make_map_tuple: expr . "=>" expr
  892               | expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "=>"   shift, and go to state 974
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 892 (make_map_tuple)


State 732

  919 make_table: make_map_tuple .

    $default  reduce using rule 919 (make_table)


State 733

  920 make_table: make_table . "end of expression" make_map_tuple
  924 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 975
    "end of expression"  shift, and go to state 976
    ";}}"                shift, and go to state 977

    optional_trailing_semicolon_cur_cur  go to state 978


State 734

  286 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 284 ($@8)

    $@8  go to state 979


State 735

  275 expr_keyword: "keyword" expr . expression_block
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 777
    "as"                   shift, and go to state 778
    "<<"                   shift, and go to state 787
    ">>"                   shift, and go to state 788
    "++"                   shift, and go to state 789
    "--"                   shift, and go to state 790
    "<="                   shift, and go to state 791
    ">="                   shift, and go to state 794
    "=="                   shift, and go to state 795
    "!="                   shift, and go to state 796
    "->"                   shift, and go to state 797
    "??"                   shift, and go to state 799
    "?."                   shift, and go to state 800
    "?["                   shift, and go to state 801
    "<|"                   shift, and go to state 802
    "|>"                   shift, and go to state 803
    "<<<"                  shift, and go to state 805
    ">>>"                  shift, and go to state 806
    "&&"                   shift, and go to state 809
    "||"                   shift, and go to state 810
    "^^"                   shift, and go to state 811
    ".."                   shift, and go to state 815
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 817
    '|'                    shift, and go to state 818
    '^'                    shift, and go to state 819
    '&'                    shift, and go to state 820
    '<'                    shift, and go to state 821
    '>'                    shift, and go to state 822
    '-'                    shift, and go to state 823
    '+'                    shift, and go to state 824
    '*'                    shift, and go to state 825
    '/'                    shift, and go to state 826
    '%'                    shift, and go to state 827
    '.'                    shift, and go to state 828
    '['                    shift, and go to state 829

    open_block        go to state 301
    expression_block  go to state 980


State 736

  289 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 287 ($@10)

    $@10  go to state 981


State 737

   37 string_builder_body: string_builder_body . character_sequence
   38                    | string_builder_body . "{" expr optional_format_string "}"
   39 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 982
    "{"                   shift, and go to state 983

    character_sequence  go to state 984


State 738

  936 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 985


State 739

  923 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 986


State 740

  921 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 921 (expr_map_tuple_list)


State 741

  281 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  922 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 987

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 988


State 742

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  474 expr: '-' expr .
  475     | expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 474 (expr)


State 743

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  473 expr: '+' expr .
  475     | expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 473 (expr)


State 744

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  511     | '*' expr .
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 511 (expr)


State 745

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  472 expr: '~' expr .
  475     | expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 472 (expr)


State 746

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  471 expr: '!' expr .
  475     | expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 471 (expr)


State 747

  932 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 989


State 748

  933 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 990


State 749

  899 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 991


State 750

  277 optional_expr_list: expr_list . optional_comma
  362 expr_list: expr_list . ',' expr

    ','  shift, and go to state 992

    ','       [reduce using rule 930 (optional_comma)]
    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 993


State 751

  361 expr_list: expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 361 (expr_list)


State 752

  839 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  840                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 994


State 753

  295 name_in_namespace: "name" .
  296                  | "name" . "::" "name"
  835 make_struct_fields: "name" . copy_or_move expr
  836                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 995
    "::"  shift, and go to state 104
    '='   shift, and go to state 887

    $default  reduce using rule 295 (name_in_namespace)

    copy_or_move  go to state 996


State 754

  362 expr_list: expr_list . ',' expr
  501 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 992

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 997


State 755

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  845 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 998

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 999


State 756

  502 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 1000


State 757

  368 block_or_lambda: '@' '@' .
  437 func_addr_expr: '@' '@' . func_addr_name
  440               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  443               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  561 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1001
    "$c"    shift, and go to state 1002
    "name"  shift, and go to state 63
    '<'     shift, and go to state 1003

    $default  reduce using rule 368 (block_or_lambda)

    name_in_namespace  go to state 1004
    func_addr_name     go to state 1005


State 758

  269 expression_any: expression_label semicolon .

    $default  reduce using rule 269 (expression_any)


State 759

  270 expression_any: expression_goto semicolon .

    $default  reduce using rule 270 (expression_any)


State 760

   82 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 777
    "as"                   shift, and go to state 778
    "<<"                   shift, and go to state 787
    ">>"                   shift, and go to state 788
    "++"                   shift, and go to state 789
    "--"                   shift, and go to state 790
    "<="                   shift, and go to state 791
    ">="                   shift, and go to state 794
    "=="                   shift, and go to state 795
    "!="                   shift, and go to state 796
    "->"                   shift, and go to state 797
    "??"                   shift, and go to state 799
    "?."                   shift, and go to state 800
    "?["                   shift, and go to state 801
    "<|"                   shift, and go to state 802
    "|>"                   shift, and go to state 803
    "<<<"                  shift, and go to state 805
    ">>>"                  shift, and go to state 806
    "&&"                   shift, and go to state 809
    "||"                   shift, and go to state 810
    "^^"                   shift, and go to state 811
    ".."                   shift, and go to state 815
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 817
    '|'                    shift, and go to state 818
    '^'                    shift, and go to state 819
    '&'                    shift, and go to state 820
    '<'                    shift, and go to state 821
    '>'                    shift, and go to state 822
    '-'                    shift, and go to state 823
    '+'                    shift, and go to state 824
    '*'                    shift, and go to state 825
    '/'                    shift, and go to state 826
    '%'                    shift, and go to state 827
    '.'                    shift, and go to state 828
    '['                    shift, and go to state 829

    open_block        go to state 301
    expression_block  go to state 1006


State 761

   84 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 83 ($@4)

    $@4  go to state 1007


State 762

  247 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 1008


State 763

  383 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 382 ($@22)

    $@22  go to state 1009


State 764

  249 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 249 (expr_call_pipe)


State 765

  543 expr: name_in_namespace "name" .

    $default  reduce using rule 543 (expr)


State 766

  431 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  432                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  454 expr_call: name_in_namespace '(' . ')'
  455          | name_in_namespace '(' . "uninitialized" ')'
  456          | name_in_namespace '(' . make_struct_single ')'
  457          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  458          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "uninitialized"                   shift, and go to state 1010
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1011
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1012
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1013
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 755
    make_struct_single      go to state 1014
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 767

  256 expression_any: expression_delete semicolon .

    $default  reduce using rule 256 (expression_any)


State 768

  263 expression_any: expression_break semicolon .

    $default  reduce using rule 263 (expression_any)


State 769

  264 expression_any: expression_continue semicolon .

    $default  reduce using rule 264 (expression_any)


State 770

  315 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 315 (expression_return)


State 771

  320 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 320 (expression_yield)


State 772

  329 optional_in_scope: "inscope" .

    $default  reduce using rule 329 (optional_in_scope)


State 773

  341 expression_let: kwd_let optional_in_scope . let_variable_declaration
  342               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 322
    "[["    shift, and go to state 1015
    "name"  shift, and go to state 323
    '('     shift, and go to state 1016

    tuple_expansion_variable_declaration  go to state 1017
    let_variable_name_with_pos_list       go to state 324
    let_variable_declaration              go to state 1018


State 774

  381 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1019
    "[["       shift, and go to state 1020

    $default  reduce using rule 376 (optional_capture_list)

    optional_capture_list  go to state 1021


State 775

  290 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 1022


State 776

  255 expression_any: expr_assign semicolon .

    $default  reduce using rule 255 (expression_any)


State 777

  520 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr "is" . basic_type_declaration
  522     | expr "is" . "name"
  560 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1023
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1024
    "name"      shift, and go to state 1025

    basic_type_declaration  go to state 1026


State 778

  523 expr: expr "as" . "name"
  526     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  527     | expr "as" . basic_type_declaration
  558 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1027
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1028
    "name"      shift, and go to state 1029

    basic_type_declaration  go to state 1030


State 779

  401 expr_assign: expr "+=" . expr
  422 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1036
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 780

  402 expr_assign: expr "-=" . expr
  423 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1037
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1038
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 781

  404 expr_assign: expr "/=" . expr
  425 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1040
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 782

  403 expr_assign: expr "*=" . expr
  424 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1042
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 783

  405 expr_assign: expr "%=" . expr
  426 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1043
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1044
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 784

  395 expr_assign: expr "&=" . expr
  416 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1045
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1046
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 785

  396 expr_assign: expr "|=" . expr
  417 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1047
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1048
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 786

  397 expr_assign: expr "^=" . expr
  418 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1049
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1050
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 787

  475 expr: expr "<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1051
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 788

  476 expr: expr ">>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1052
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 789

  499 expr: expr "++" .

    $default  reduce using rule 499 (expr)


State 790

  500 expr: expr "--" .

    $default  reduce using rule 500 (expr)


State 791

  488 expr: expr "<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1053
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 792

  406 expr_assign: expr "<<=" . expr
  427 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1054
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1055
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 793

  407 expr_assign: expr ">>=" . expr
  428 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1056
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1057
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 794

  489 expr: expr ">=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1058
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 795

  486 expr: expr "==" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1059
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 796

  487 expr: expr "!=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1060
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 797

  433 expr_method_call: expr "->" . "name" '(' ')'
  434                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1061


State 798

  393 expr_assign: expr "<-" . expr
  415 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1062
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1063
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 799

  516 expr: expr "??" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1064
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 800

  507 expr: expr "?." . "name"
  555 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1065
    "name"  shift, and go to state 1066


State 801

  505 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1067
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 802

  540 expr: expr "<|" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1068
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 803

  541 expr: expr "|>" . expr
  542     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1069
    expr_mtag               go to state 583
    basic_type_declaration  go to state 1070
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 804

  394 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1071
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 805

  477 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1072
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 806

  478 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1073
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 807

  408 expr_assign: expr "<<<=" . expr
  429 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1074
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1075
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 808

  409 expr_assign: expr ">>>=" . expr
  430 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1076
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1077
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 809

  493 expr: expr "&&" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1078
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 810

  494 expr: expr "||" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1079
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 811

  495 expr: expr "^^" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1080
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 812

  398 expr_assign: expr "&&=" . expr
  419 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1081
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1082
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 813

  399 expr_assign: expr "||=" . expr
  420 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1083
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1084
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 814

  400 expr_assign: expr "^^=" . expr
  421 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1085
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1086
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 815

  496 expr: expr ".." . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1087
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 816

  392 expr_assign: expr '=' . expr
  414 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 1031
    "@ <|"                            shift, and go to state 1032
    "@@ <|"                           shift, and go to state 1033
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 1034
    expression_keyword      go to state 555
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign_pipe_right  go to state 1088
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1089
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 817

  517 expr: expr '?' . expr ':' expr
  528     | expr '?' . "as" "name"
  531     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr '?' . "as" basic_type_declaration
  559 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "as"                              shift, and go to state 1090
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1091
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 818

  491 expr: expr '|' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1092
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 819

  492 expr: expr '^' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1093
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 820

  490 expr: expr '&' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1094
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 821

  484 expr: expr '<' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1095
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 822

  485 expr: expr '>' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1096
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 823

  480 expr: expr '-' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1097
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 824

  479 expr: expr '+' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1098
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 825

  481 expr: expr '*' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1099
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 826

  482 expr: expr '/' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1100
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 827

  483 expr: expr '%' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1101
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 828

  444 expr_field: expr '.' . "name"
  445           | expr '.' . '.' "name"
  446           | expr '.' . "name" '(' ')'
  447           | expr '.' . "name" '(' expr_list ')'
  448           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  449           | expr '.' . basic_type_declaration '(' ')'
  450           | expr '.' . basic_type_declaration '(' expr_list ')'
  453           | expr '.' . $@27 error $@28
  504 expr: expr '.' . '[' expr ']'
  506     | expr '.' . "?[" expr ']'
  508     | expr '.' . "?." "name"
  554 expr_mtag: expr '.' . "$f" '(' expr ')'
  556          | expr '.' . '.' "$f" '(' expr ')'
  557          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "?."        shift, and go to state 1102
    "?["        shift, and go to state 1103
    "$f"        shift, and go to state 1104
    "name"      shift, and go to state 1105
    '.'         shift, and go to state 1106
    '['         shift, and go to state 1107

    $default  reduce using rule 451 ($@27)

    $@27                    go to state 1108
    basic_type_declaration  go to state 1109


State 829

  503 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1110
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 830

  248 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 248 (expr_call_pipe)


State 831

  459 expr_call: basic_type_declaration '(' . ')'
  460          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1111
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1112
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 832

  643 enum_list: enum_list . semicolon
  644          | enum_list . "name" semicolon
  645          | enum_list . "name" '=' expr semicolon
  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 592
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 664 ($@45)

    semicolon  go to state 593
    $@45       go to state 1113


State 833

  645 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1114
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 834

  644 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 644 (enum_list)


State 835

  662 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 662 (enum_declaration)


State 836

  133 optional_annotation_list: '[' . annotation_list ']'
  584 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1115
    name_in_namespace             go to state 75


State 837

  577 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 577 (struct_variable_declaration_list)


State 838

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  583                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1116


State 839

  679 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 679 (optional_struct_variable_declaration_list)


State 840

  579 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 231
    '@'   shift, and go to state 232

    $default  reduce using rule 562 (optional_field_annotation)

    metadata_argument_list          go to state 233
    optional_field_annotation       go to state 1117
    structure_variable_declaration  go to state 1118


State 841

  514 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  515     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1119


State 842

  621 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 621 (let_variable_name_with_pos_list)


State 843

  624 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1120


State 844

  625 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 625 (let_variable_declaration)


State 845

  626 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  627                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1121
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1122
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 846

  629 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 629 (let_variable_declaration)


State 847

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  628 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1123
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 848

  755 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1124


State 849

  778 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1125


State 850

  781 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1126


State 851

  743 table_type_pair: type_declaration .
  744                | type_declaration . c_or_s type_declaration
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '|'                  shift, and go to state 439

    $default  reduce using rule 743 (table_type_pair)

    semicolon  go to state 644
    c_or_s     go to state 1127


State 852

  756 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 756 (type_declaration_no_options)


State 853

  784 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1128


State 854

  774 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1129


State 855

  725 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 725 (auto_type_declaration)


State 856

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 1130

    bitfield_bits  go to state 1131


State 857

  788 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1132


State 858

  791 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1133


State 859

  795 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1134


State 860

  798 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1135


State 861

  802 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1136


State 862

  805 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1137


State 863

  595 tuple_type_list: tuple_type .

    $default  reduce using rule 595 (tuple_type_list)


State 864

  596 tuple_type_list: tuple_type_list . c_or_s tuple_type
  808 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1138

    semicolon  go to state 644
    c_or_s     go to state 1139


State 865

  601 variant_type_list: variant_type .

    $default  reduce using rule 601 (variant_type_list)


State 866

  602 variant_type_list: variant_type_list . c_or_s variant_type
  811 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1140

    semicolon  go to state 644
    c_or_s     go to state 1141


State 867

  726 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 726 (auto_type_declaration)


State 868

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1142
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1143


State 869

  757 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1144


State 870

  760 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 760 (type_declaration_no_options)


State 871

  745 dim_list: '[' expr ']' .

    $default  reduce using rule 745 (dim_list)


State 872

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  746 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 1145


State 873

  731 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon
  732                    | bitfield_alias_bits "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 1146

    semicolon  go to state 1147


State 874

  730 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 730 (bitfield_alias_bits)


State 875

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1148


State 876

  594 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1149


State 877

  599 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 599 (tuple_alias_type_list)


State 878

  819 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 819 (tuple_alias_declaration)


State 879

  600 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1150


State 880

  605 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 605 (variant_alias_type_list)


State 881

  824 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 824 (variant_alias_declaration)


State 882

  587 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 587 (function_argument_declaration_type)


State 883

  684 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1151
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 884

  685 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1152


State 885

  607 copy_or_move: "<-" .

    $default  reduce using rule 607 (copy_or_move)


State 886

  686 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  687                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1153


State 887

  606 copy_or_move: '=' .

    $default  reduce using rule 606 (copy_or_move)


State 888

  611 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  612                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1154


State 889

  609 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 609 (variable_declaration_no_type)


State 890

  610 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1155
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 891

  878 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1156


State 892

  881 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1157


State 893

   88 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 894

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1158
    ','   shift, and go to state 886


State 895

  302 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1159


State 896

  305 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  306         | "new" new_type_declaration '(' . expr_list ')'
  307         | "new" new_type_declaration '(' . make_struct_single ')'
  308         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "uninitialized"                   shift, and go to state 1160
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 868 (use_initializer)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1161
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 755
    make_struct_single      go to state 1162
    use_initializer         go to state 1163
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 897

  355 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  356               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  357               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '<'                               shift, and go to state 1164
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1165
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 898

  359 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  360               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1166


State 899

  358 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1167
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 900

  354 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1168


State 901

  904 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 902 ($@99)

    $@99  go to state 1169


State 902

  907 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 905 ($@101)

    $@101  go to state 1170


State 903

  910 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 908 ($@103)

    $@103  go to state 1171


State 904

  914 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1172


State 905

  362 expr_list: expr_list . ',' expr
  911 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 992

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1173


State 906

  317 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 317 (expression_return)


State 907

  314 expression_return_no_pipe: "return" "<-" expr_list .
  362 expr_list: expr_list . ',' expr

    ','  shift, and go to state 908

    $default  reduce using rule 314 (expression_return_no_pipe)


State 908

  362 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1174
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 909

  401 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1175
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 910

  402 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1176
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 911

  404 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1177
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 912

  403 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1178
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 913

  405 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1179
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 914

  395 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1180
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 915

  396 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1181
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 916

  397 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1182
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 917

  406 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1183
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 918

  407 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1184
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 919

  393 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1185
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 920

  408 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1186
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 921

  409 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1187
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 922

  398 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1188
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 923

  399 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1189
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 924

  400 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1190
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 925

  392 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1191
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 926

  323 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1192


State 927

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  926 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  927                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 428
    "implicit"           shift, and go to state 429
    "explicit"           shift, and go to state 430
    "=="                 shift, and go to state 431
    "??"                 shift, and go to state 432
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '?'                  shift, and go to state 433
    '&'                  shift, and go to state 434
    '>'                  shift, and go to state 1193
    '-'                  shift, and go to state 435
    '['                  shift, and go to state 436
    '#'                  shift, and go to state 437

    semicolon  go to state 644
    c_or_s     go to state 1194
    dim_list   go to state 438


State 928

  925 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1195


State 929

  299 expression_delete: "delete" "explicit" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 299 (expression_delete)


State 930

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  512     | "deref" '(' expr . ')'
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1196


State 931

   89 expression_with: "with" expr expression_block .

    $default  reduce using rule 89 (expression_with)


State 932

   92 expression_with_alias: "assume" "type" "name" . '=' type_declaration

    '='  shift, and go to state 1197


State 933

   91 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 90 ($@6)

    $@6  go to state 1198


State 934

  345 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1199


State 935

  348 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1200


State 936

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  513     | "addr" '(' expr . ')'
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1201


State 937

  351 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1202


State 938

   62 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 62 (expression_label)


State 939

   63 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 63 (expression_goto)


State 940

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  544     | "unsafe" '(' expr . ')'
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1203


State 941

  918 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1204


State 942

  362 expr_list: expr_list . ',' expr
  915 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 992

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1205


State 943

  887 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1206


State 944

  896 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 863
    tuple_type_list              go to state 1207
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 945

  362 expr_list: expr_list . ',' expr
  893 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 992

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1208


State 946

  884 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 649

    variant_type       go to state 865
    variant_type_list  go to state 1209


State 947

  250 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  514 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  515     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1210
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 948

  322 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 322 (expression_yield)


State 949

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  319 expression_yield_no_pipe: "yield" "<-" expr .
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 777
    "as"    shift, and go to state 778
    "+="    shift, and go to state 909
    "-="    shift, and go to state 910
    "/="    shift, and go to state 911
    "*="    shift, and go to state 912
    "%="    shift, and go to state 913
    "&="    shift, and go to state 914
    "|="    shift, and go to state 915
    "^="    shift, and go to state 916
    "<<"    shift, and go to state 787
    ">>"    shift, and go to state 788
    "++"    shift, and go to state 789
    "--"    shift, and go to state 790
    "<="    shift, and go to state 791
    "<<="   shift, and go to state 917
    ">>="   shift, and go to state 918
    ">="    shift, and go to state 794
    "=="    shift, and go to state 795
    "!="    shift, and go to state 796
    "->"    shift, and go to state 797
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 799
    "?."    shift, and go to state 800
    "?["    shift, and go to state 801
    "<|"    shift, and go to state 802
    "|>"    shift, and go to state 803
    ":="    shift, and go to state 804
    "<<<"   shift, and go to state 805
    ">>>"   shift, and go to state 806
    "<<<="  shift, and go to state 920
    ">>>="  shift, and go to state 921
    "&&"    shift, and go to state 809
    "||"    shift, and go to state 810
    "^^"    shift, and go to state 811
    "&&="   shift, and go to state 922
    "||="   shift, and go to state 923
    "^^="   shift, and go to state 924
    ".."    shift, and go to state 815
    '='     shift, and go to state 925
    '?'     shift, and go to state 817
    '|'     shift, and go to state 818
    '^'     shift, and go to state 819
    '&'     shift, and go to state 820
    '<'     shift, and go to state 821
    '>'     shift, and go to state 822
    '-'     shift, and go to state 823
    '+'     shift, and go to state 824
    '*'     shift, and go to state 825
    '/'     shift, and go to state 826
    '%'     shift, and go to state 827
    '.'     shift, and go to state 828
    '['     shift, and go to state 829
    '$'     shift, and go to state 536
    '@'     shift, and go to state 714

    " <|"     reduce using rule 391 (expr_assign)
    $default  reduce using rule 319 (expression_yield_no_pipe)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 950

  368 block_or_lambda: '@' '@' .

    $default  reduce using rule 368 (block_or_lambda)


State 951

  380 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 1019
    "[["       shift, and go to state 1020

    $default  reduce using rule 376 (optional_capture_list)

    optional_capture_list  go to state 1211


State 952

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  546 expr_mtag: "$$" '(' expr . ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1212


State 953

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  547 expr_mtag: "$i" '(' expr . ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1213


State 954

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  548 expr_mtag: "$v" '(' expr . ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1214


State 955

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  549 expr_mtag: "$b" '(' expr . ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1215


State 956

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  550 expr_mtag: "$a" '(' expr . ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1216


State 957

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  552 expr_mtag: "$c" '(' expr . ')' '(' ')'
  553          | "$c" '(' expr . ')' '(' expr_list ')'
  554          | expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1217


State 958

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  934 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1218
    ','   shift, and go to state 886


State 959

  855 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 1219


State 960

  474 expr: '-' . expr
  760 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  763                            | type_declaration_no_options '-' . "const"
  765                            | type_declaration_no_options '-' . '&'
  768                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "const"                           shift, and go to state 632
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '&'                               shift, and go to state 633
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1220
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537
    '#'                               shift, and go to state 635

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 742
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 961

  745 dim_list: '[' . expr ']'
  752 type_declaration_no_options: type_declaration_no_options '[' . ']'
  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 636
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    ']'  [reduce using rule 276 (optional_expr_list)]

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1221
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 962

  501 expr: '(' . expr_list optional_comma ')'
  502     | '(' . make_struct_single ')'
  872 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  873                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1222
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 754
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 755
    make_struct_single      go to state 756
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 963

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  888 make_tuple: expr .
  889           | expr . "=>" expr

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "=>"   shift, and go to state 1223
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 888 (make_tuple)


State 964

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  846 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1224

    $default  reduce using rule 846 (make_struct_dim)


State 965

  847 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  870 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 959
    "end of expression"  shift, and go to state 1225

    $default  reduce using rule 854 (optional_block)

    optional_block  go to state 1226


State 966

  871 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1227
    ",]]"  shift, and go to state 1228
    ']'    shift, and go to state 1229

    optional_trailing_delim_sqr_sqr  go to state 1230


State 967

  890 make_tuple: make_tuple . ',' expr
  897 make_dim: make_tuple .

    ','  shift, and go to state 1231

    $default  reduce using rule 897 (make_dim)


State 968

  898 make_dim: make_dim . "end of expression" make_tuple
  900 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1232
    ";]]"                shift, and go to state 1233
    ']'                  shift, and go to state 1234

    optional_trailing_semicolon_sqr_sqr  go to state 1235


State 969

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  935 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1236
    ','   shift, and go to state 886


State 970

  501 expr: '(' . expr_list optional_comma ')'
  502     | '(' . make_struct_single ')'
  875 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1237
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 754
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 755
    make_struct_single      go to state 756
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 971

  847 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  874 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 959
    "end of expression"  shift, and go to state 1225

    $default  reduce using rule 854 (optional_block)

    optional_block  go to state 1238


State 972

  898 make_dim: make_dim . "end of expression" make_tuple
  901 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1239
    "end of expression"  shift, and go to state 1232
    ";}]"                shift, and go to state 1240

    optional_trailing_semicolon_cur_sqr  go to state 1241


State 973

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  937 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1242
    ','   shift, and go to state 886


State 974

  891 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1243
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 975

  856 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1244


State 976

  920 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1245
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 977

  857 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 857 (optional_trailing_semicolon_cur_cur)


State 978

  924 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 924 (make_table_decl)


State 979

  286 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1246
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1143


State 980

  275 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 275 (expr_keyword)


State 981

  289 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    type_declaration_no_options_list  go to state 1247
    name_in_namespace                 go to state 368
    basic_type_declaration            go to state 369
    structure_type_declaration        go to state 370
    auto_type_declaration             go to state 371
    bitfield_type_declaration         go to state 372
    type_declaration_no_options       go to state 373
    type_declaration                  go to state 1143


State 982

   39 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 39 (string_builder)


State 983

   38 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1248
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 984

   27 character_sequence: character_sequence . STRING_CHARACTER
   28                   | character_sequence . STRING_CHARACTER_ESC
   37 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 235
    STRING_CHARACTER_ESC  shift, and go to state 236

    $default  reduce using rule 37 (string_builder_body)


State 985

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1249
    ','   shift, and go to state 886


State 986

  923 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 923 (make_table_decl)


State 987

  922 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  931 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 931 (optional_comma)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1250
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 988

  281 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 281 (optional_expr_map_tuple_list)


State 989

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  932 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1251
    ','   shift, and go to state 886


State 990

  933 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_name_with_pos_list  go to state 1252


State 991

  899 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 899 (make_dim_decl)


State 992

  362 expr_list: expr_list ',' . expr
  931 optional_comma: ',' .

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 931 (optional_comma)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1174
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 993

  277 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 277 (optional_expr_list)


State 994

  839 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  840                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1253
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 995

  836 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1254
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 996

  835 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1255
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 997

  501 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1256


State 998

  837 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  838                   | make_struct_fields ',' . "name" ":=" expr
  841                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  931 optional_comma: ',' .

    "$f"    shift, and go to state 1257
    "name"  shift, and go to state 1258

    $default  reduce using rule 931 (optional_comma)


State 999

  845 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 845 (make_struct_single)


State 1000

  502 expr: '(' make_struct_single ')' .

    $default  reduce using rule 502 (expr)


State 1001

  436 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1259


State 1002

  561 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1260


State 1003

  440 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  443               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 441 ($@25)
    '>'       reduce using rule 441 ($@25)
    '('       reduce using rule 441 ($@25)
    $default  reduce using rule 438 ($@23)

    $@23  go to state 1261
    $@25  go to state 1262


State 1004

  435 func_addr_name: name_in_namespace .

    $default  reduce using rule 435 (func_addr_name)


State 1005

  437 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 437 (func_addr_expr)


State 1006

   82 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1263
    "elif"         shift, and go to state 1264
    "static_elif"  shift, and go to state 1265

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1266
    expression_else      go to state 1267


State 1007

   84 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1268
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1008

  247 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 272 (expressions)

    expressions  go to state 1269


State 1009

  383 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 132 (optional_annotation_list)

    optional_annotation_list  go to state 1270


State 1010

  455 expr_call: name_in_namespace '(' "uninitialized" . ')'
  457          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    ')'     shift, and go to state 1272

    make_struct_fields  go to state 755
    make_struct_single  go to state 1273


State 1011

  431 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1274
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1012

  454 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 454 (expr_call)


State 1013

  362 expr_list: expr_list . ',' expr
  432 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  458 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1275
    ')'  shift, and go to state 1276


State 1014

  456 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1277


State 1015

  333 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  337                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  338                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1278

    tuple_expansion  go to state 1279


State 1016

  335 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  336                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  339                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  340                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1278

    tuple_expansion  go to state 1280


State 1017

  342 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 342 (expression_let)


State 1018

  341 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 341 (expression_let)


State 1019

  378 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1281


State 1020

  377 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1282
    ":="    shift, and go to state 1283
    "name"  shift, and go to state 1284
    '='     shift, and go to state 1285
    '&'     shift, and go to state 1286

    capture_entry  go to state 1287
    capture_list   go to state 1288


State 1021

  381 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 1289


State 1022

  290 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 290 (expr_pipe)


State 1023

  520 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1290


State 1024

  560 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1291


State 1025

  522 expr: expr "is" "name" .

    $default  reduce using rule 522 (expr)


State 1026

  521 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 521 (expr)


State 1027

  526 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1292


State 1028

  558 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1293


State 1029

  523 expr: expr "as" "name" .

    $default  reduce using rule 523 (expr)


State 1030

  527 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 527 (expr)


State 1031

  412 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 1294


State 1032

  410 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 1295


State 1033

  411 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 536
    '@'                    shift, and go to state 714

    open_block        go to state 301
    expression_block  go to state 715
    block_or_lambda   go to state 716
    expr_block        go to state 1296


State 1034

  413 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 413 (expr_assign_pipe_right)


State 1035

  422 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 422 (expr_assign_pipe)


State 1036

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  401 expr_assign: expr "+=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 401 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1037

  423 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 423 (expr_assign_pipe)


State 1038

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  402 expr_assign: expr "-=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 402 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1039

  425 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 425 (expr_assign_pipe)


State 1040

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  404 expr_assign: expr "/=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 404 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1041

  424 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 424 (expr_assign_pipe)


State 1042

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  403 expr_assign: expr "*=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 403 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1043

  426 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 426 (expr_assign_pipe)


State 1044

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  405 expr_assign: expr "%=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 405 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1045

  416 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1046

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr "&=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1047

  417 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 417 (expr_assign_pipe)


State 1048

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  396 expr_assign: expr "|=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 396 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1049

  418 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 418 (expr_assign_pipe)


State 1050

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  397 expr_assign: expr "^=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 397 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1051

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  475     | expr "<<" expr .
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '-'   shift, and go to state 823
    '+'   shift, and go to state 824
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 475 (expr)


State 1052

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  476     | expr ">>" expr .
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '-'   shift, and go to state 823
    '+'   shift, and go to state 824
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 476 (expr)


State 1053

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  488     | expr "<=" expr .
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 488 (expr)


State 1054

  427 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 427 (expr_assign_pipe)


State 1055

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  406 expr_assign: expr "<<=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 406 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1056

  428 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 428 (expr_assign_pipe)


State 1057

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  407 expr_assign: expr ">>=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 407 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1058

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  489     | expr ">=" expr .
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 489 (expr)


State 1059

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  486     | expr "==" expr .
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 486 (expr)


State 1060

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  487     | expr "!=" expr .
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 487 (expr)


State 1061

  433 expr_method_call: expr "->" "name" . '(' ')'
  434                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1297


State 1062

  415 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1063

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr "<-" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1064

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  516     | expr "??" expr .
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 516 (expr)


State 1065

  555 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1298


State 1066

  507 expr: expr "?." "name" .

    $default  reduce using rule 507 (expr)


State 1067

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  505     | expr "?[" expr . ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 1299


State 1068

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  540     | expr "<|" expr .
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 540 (expr)


State 1069

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  541     | expr "|>" expr .
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 797
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 541 (expr)


State 1070

  459 expr_call: basic_type_declaration . '(' ')'
  460          | basic_type_declaration . '(' expr_list ')'
  542 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 831

    $default  reduce using rule 542 (expr)


State 1071

  394 expr_assign: expr ":=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 394 (expr_assign)


State 1072

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  477     | expr "<<<" expr .
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '-'   shift, and go to state 823
    '+'   shift, and go to state 824
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 477 (expr)


State 1073

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  478     | expr ">>>" expr .
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '-'   shift, and go to state 823
    '+'   shift, and go to state 824
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 478 (expr)


State 1074

  429 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 429 (expr_assign_pipe)


State 1075

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  408 expr_assign: expr "<<<=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 408 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1076

  430 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 430 (expr_assign_pipe)


State 1077

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  409 expr_assign: expr ">>>=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 409 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1078

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  493     | expr "&&" expr .
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 493 (expr)


State 1079

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  494     | expr "||" expr .
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "^^"   shift, and go to state 811
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 494 (expr)


State 1080

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  495     | expr "^^" expr .
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 495 (expr)


State 1081

  419 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 419 (expr_assign_pipe)


State 1082

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  398 expr_assign: expr "&&=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 398 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1083

  420 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 420 (expr_assign_pipe)


State 1084

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  399 expr_assign: expr "||=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 399 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1085

  421 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 421 (expr_assign_pipe)


State 1086

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  400 expr_assign: expr "^^=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 400 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1087

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  496     | expr ".." expr .
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    ".."  error (nonassociative)

    $default  reduce using rule 496 (expr)


State 1088

  414 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1089

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr '=' expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    '$'    shift, and go to state 536
    '@'    shift, and go to state 714

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1090

  528 expr: expr '?' "as" . "name"
  531     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  532     | expr '?' "as" . basic_type_declaration
  559 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1300
    "bool"      shift, and go to state 333
    "void"      shift, and go to state 334
    "string"    shift, and go to state 335
    "int"       shift, and go to state 337
    "int2"      shift, and go to state 338
    "int3"      shift, and go to state 339
    "int4"      shift, and go to state 340
    "uint"      shift, and go to state 341
    "bitfield"  shift, and go to state 498
    "uint2"     shift, and go to state 343
    "uint3"     shift, and go to state 344
    "uint4"     shift, and go to state 345
    "float"     shift, and go to state 346
    "float2"    shift, and go to state 347
    "float3"    shift, and go to state 348
    "float4"    shift, and go to state 349
    "range"     shift, and go to state 350
    "urange"    shift, and go to state 351
    "range64"   shift, and go to state 352
    "urange64"  shift, and go to state 353
    "int64"     shift, and go to state 355
    "uint64"    shift, and go to state 356
    "double"    shift, and go to state 357
    "int8"      shift, and go to state 360
    "uint8"     shift, and go to state 361
    "int16"     shift, and go to state 362
    "uint16"    shift, and go to state 363
    "$f"        shift, and go to state 1301
    "name"      shift, and go to state 1302

    basic_type_declaration  go to state 1303


State 1091

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  517     | expr '?' expr . ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    ':'    shift, and go to state 1304
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829


State 1092

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  491     | expr '|' expr .
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 491 (expr)


State 1093

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  492     | expr '^' expr .
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 492 (expr)


State 1094

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  490     | expr '&' expr .
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 490 (expr)


State 1095

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  484     | expr '<' expr .
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 484 (expr)


State 1096

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  485     | expr '>' expr .
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 485 (expr)


State 1097

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  480     | expr '-' expr .
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 480 (expr)


State 1098

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  479     | expr '+' expr .
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '*'   shift, and go to state 825
    '/'   shift, and go to state 826
    '%'   shift, and go to state 827
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 479 (expr)


State 1099

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  481     | expr '*' expr .
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 481 (expr)


State 1100

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  482     | expr '/' expr .
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 482 (expr)


State 1101

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  483     | expr '%' expr .
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 777
    "as"  shift, and go to state 778
    "++"  shift, and go to state 789
    "--"  shift, and go to state 790
    "->"  shift, and go to state 797
    "??"  shift, and go to state 799
    "?."  shift, and go to state 800
    "?["  shift, and go to state 801
    "<|"  shift, and go to state 802
    "|>"  shift, and go to state 803
    '.'   shift, and go to state 828
    '['   shift, and go to state 829

    $default  reduce using rule 483 (expr)


State 1102

  508 expr: expr '.' "?." . "name"
  557 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1305
    "name"  shift, and go to state 1306


State 1103

  506 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1307
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1104

  554 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1308


State 1105

  444 expr_field: expr '.' "name" .
  446           | expr '.' "name" . '(' ')'
  447           | expr '.' "name" . '(' expr_list ')'
  448           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1309

    '('       [reduce using rule 444 (expr_field)]
    $default  reduce using rule 444 (expr_field)


State 1106

  445 expr_field: expr '.' '.' . "name"
  556 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1310
    "name"  shift, and go to state 1311


State 1107

  504 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1312
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1108

  453 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1313


State 1109

  449 expr_field: expr '.' basic_type_declaration . '(' ')'
  450           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1314


State 1110

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  503     | expr '[' expr . ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 1315


State 1111

  459 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 459 (expr_call)


State 1112

  362 expr_list: expr_list . ',' expr
  460 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1316


State 1113

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1317


State 1114

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  645 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    semicolon  go to state 1318


State 1115

  131 annotation_list: annotation_list . ',' annotation_declaration
  133 optional_annotation_list: '[' annotation_list . ']'
  584 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1319


State 1116

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  583                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1320
    "private"  shift, and go to state 1321

    $default  reduce using rule 570 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1322


State 1117

  575 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1323

    $default  reduce using rule 573 (optional_static_member_variable)

    optional_static_member_variable  go to state 1324


State 1118

  579 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1325


State 1119

  514 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  515     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1326
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1120

  624 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 624 (let_variable_name_with_pos_list)


State 1121

  627 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 627 (let_variable_declaration)


State 1122

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  626 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1327
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1123

  628 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 628 (let_variable_declaration)


State 1124

  755 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 754 ($@51)

    $@51  go to state 1328


State 1125

  778 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 777 ($@56)

    $@56  go to state 1329


State 1126

  781 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 780 ($@58)

    $@58  go to state 1330


State 1127

  744 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1331


State 1128

  784 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 783 ($@60)

    $@60  go to state 1332


State 1129

  774 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 773 ($@54)

    $@54  go to state 1333


State 1130

  727 bitfield_bits: "name" .

    $default  reduce using rule 727 (bitfield_bits)


State 1131

  728 bitfield_bits: bitfield_bits . semicolon "name"
  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1334

    semicolon  go to state 1335


State 1132

  788 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 787 ($@62)

    $@62  go to state 1336


State 1133

  791 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1337


State 1134

  795 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 794 ($@66)

    $@66  go to state 1338


State 1135

  798 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1339


State 1136

  802 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 801 ($@70)

    $@70  go to state 1340


State 1137

  805 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1341


State 1138

  808 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 807 ($@74)

    $@74  go to state 1342


State 1139

  596 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 1343
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 1140

  811 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 810 ($@76)

    $@76  go to state 1344


State 1141

  602 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 649

    variant_type  go to state 1345


State 1142

  283 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1346

    semicolon  go to state 644
    c_or_s     go to state 1347


State 1143

  282 type_declaration_no_options_list: type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 282 (type_declaration_no_options_list)


State 1144

  757 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 757 (type_declaration_no_options)


State 1145

  746 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 746 (dim_list)


State 1146

  732 bitfield_alias_bits: bitfield_alias_bits "name" '=' . expr semicolon

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1348
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1147

  731 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 731 (bitfield_alias_bits)


State 1148

  829 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 bitfield_basic_type_declaration open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 829 (bitfield_alias_declaration)


State 1149

  594 tuple_type: "name" ':' type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 594 (tuple_type)


State 1150

  600 variant_type: "name" ':' type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 600 (variant_type)


State 1151

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  684 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1349


State 1152

  685 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 685 (variable_name_with_pos_list)


State 1153

  686 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  687                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1350

    $default  reduce using rule 686 (variable_name_with_pos_list)


State 1154

  611 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  612                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 885
    '='   shift, and go to state 887
    '|'   shift, and go to state 439

    $default  reduce using rule 611 (variable_declaration_type)

    copy_or_move  go to state 1351


State 1155

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  610 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 610 (variable_declaration_no_type)


State 1156

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1352
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1157

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1353
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1158

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1354
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1159

  302 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1355


State 1160

  308 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  869 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    $default  reduce using rule 869 (use_initializer)

    make_struct_fields  go to state 755
    make_struct_single  go to state 1356


State 1161

  306 expr_new: "new" new_type_declaration '(' expr_list . ')'
  362 expr_list: expr_list . ',' expr

    ','  shift, and go to state 908
    ')'  shift, and go to state 1357


State 1162

  307 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1358


State 1163

  305 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1359


State 1164

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  357               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1360


State 1165

  355 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1361


State 1166

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  360               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1362
    '>'                  shift, and go to state 1363


State 1167

  358 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1364


State 1168

  354 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1365


State 1169

  904 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1366


State 1170

  907 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 642
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    tuple_type                   go to state 863
    tuple_type_list              go to state 1367
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 647


State 1171

  910 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 649

    variant_type       go to state 865
    variant_type_list  go to state 1368


State 1172

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1369
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1173

  911 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1370


State 1174

  362 expr_list: expr_list ',' expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 362 (expr_list)


State 1175

  401 expr_assign: expr "+=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 401 (expr_assign)


State 1176

  402 expr_assign: expr "-=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 402 (expr_assign)


State 1177

  404 expr_assign: expr "/=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 404 (expr_assign)


State 1178

  403 expr_assign: expr "*=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 403 (expr_assign)


State 1179

  405 expr_assign: expr "%=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 405 (expr_assign)


State 1180

  395 expr_assign: expr "&=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 395 (expr_assign)


State 1181

  396 expr_assign: expr "|=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 396 (expr_assign)


State 1182

  397 expr_assign: expr "^=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 397 (expr_assign)


State 1183

  406 expr_assign: expr "<<=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 406 (expr_assign)


State 1184

  407 expr_assign: expr ">>=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 407 (expr_assign)


State 1185

  393 expr_assign: expr "<-" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 393 (expr_assign)


State 1186

  408 expr_assign: expr "<<<=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 408 (expr_assign)


State 1187

  409 expr_assign: expr ">>>=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 409 (expr_assign)


State 1188

  398 expr_assign: expr "&&=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 398 (expr_assign)


State 1189

  399 expr_assign: expr "||=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 399 (expr_assign)


State 1190

  400 expr_assign: expr "^^=" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 400 (expr_assign)


State 1191

  392 expr_assign: expr '=' expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 392 (expr_assign)


State 1192

  323 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 323 (expression_try_catch)


State 1193

  926 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1371


State 1194

  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1372


State 1195

  925 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 925 (make_table_decl)


State 1196

  512 expr: "deref" '(' expr ')' .

    $default  reduce using rule 512 (expr)


State 1197

   92 expression_with_alias: "assume" "type" "name" '=' . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1373


State 1198

   91 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1374
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1199

  345 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1375
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1200

  348 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1376
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1201

  513 expr: "addr" '(' expr ')' .

    $default  reduce using rule 513 (expr)


State 1202

  351 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1377
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1203

  544 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 544 (expr)


State 1204

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1378
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1205

  915 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1379


State 1206

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  887 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1380
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1207

  596 tuple_type_list: tuple_type_list . c_or_s tuple_type
  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1381

    semicolon  go to state 644
    c_or_s     go to state 1139


State 1208

  893 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1382


State 1209

  602 variant_type_list: variant_type_list . c_or_s variant_type
  884 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1383

    semicolon  go to state 644
    c_or_s     go to state 1141


State 1210

  250 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  514 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  515     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1019
    "[["       shift, and go to state 1020

    $default  reduce using rule 376 (optional_capture_list)

    optional_capture_list  go to state 1384


State 1211

  380 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 1385


State 1212

  546 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1213

  547 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1214

  548 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 548 (expr_mtag)


State 1215

  549 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 549 (expr_mtag)


State 1216

  550 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 550 (expr_mtag)


State 1217

  552 expr_mtag: "$c" '(' expr ')' . '(' ')'
  553          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1386


State 1218

  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1387
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1219

  855 optional_block: "where" expr_block .

    $default  reduce using rule 855 (optional_block)


State 1220

  760 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    ']'                               shift, and go to state 870
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    ']'  [reduce using rule 276 (optional_expr_list)]

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1221

  361 expr_list: expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  745 dim_list: '[' expr . ']'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 871

    ']'       [reduce using rule 361 (expr_list)]
    $default  reduce using rule 361 (expr_list)


State 1222

  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  873                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 959
    "$f"     shift, and go to state 752
    "name"   shift, and go to state 1271

    $default  reduce using rule 854 (optional_block)

    make_struct_fields  go to state 964
    make_struct_dim     go to state 1388
    optional_block      go to state 1389


State 1223

  889 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1390
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1224

  837 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  838                   | make_struct_fields ',' . "name" ":=" expr
  841                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1257
    "name"  shift, and go to state 1258


State 1225

  847 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    make_struct_fields  go to state 1391


State 1226

  870 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1227
    ",]]"  shift, and go to state 1228
    ']'    shift, and go to state 1229

    optional_trailing_delim_sqr_sqr  go to state 1392


State 1227

  863 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 863 (optional_trailing_delim_sqr_sqr)


State 1228

  864 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 864 (optional_trailing_delim_sqr_sqr)


State 1229

  862 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1393


State 1230

  871 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 871 (make_struct_decl)


State 1231

  890 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1394
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1232

  898 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 963
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple              go to state 1395
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1233

  861 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 861 (optional_trailing_semicolon_sqr_sqr)


State 1234

  860 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1396


State 1235

  900 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 900 (make_dim_decl)


State 1236

  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1397
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1237

  875 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    make_struct_fields  go to state 964
    make_struct_dim     go to state 1398


State 1238

  874 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1399
    ";}]"                shift, and go to state 1400
    ",}]"                shift, and go to state 1401

    optional_trailing_delim_cur_sqr  go to state 1402


State 1239

  858 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1403


State 1240

  859 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 859 (optional_trailing_semicolon_cur_sqr)


State 1241

  901 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 901 (make_dim_decl)


State 1242

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1404
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1243

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  891 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 891 (make_map_tuple)


State 1244

  856 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 856 (optional_trailing_semicolon_cur_cur)


State 1245

  920 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 920 (make_table)


State 1246

  283 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  286 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1405

    semicolon  go to state 644
    c_or_s     go to state 1347


State 1247

  283 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  289 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1406

    semicolon  go to state 644
    c_or_s     go to state 1347


State 1248

   38 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    ':'    shift, and go to state 1407
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 33 (optional_format_string)

    optional_format_string  go to state 1408


State 1249

  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1409
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1250

  922 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 922 (expr_map_tuple_list)


State 1251

  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1410
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1252

  686 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  687                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1411
    ','   shift, and go to state 886


State 1253

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  839 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  840                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1412


State 1254

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  836 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 836 (make_struct_fields)


State 1255

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  835 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 835 (make_struct_fields)


State 1256

  501 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 501 (expr)


State 1257

  841 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  842                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1413


State 1258

  837 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  838                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1414
    '='   shift, and go to state 887

    copy_or_move  go to state 1415


State 1259

  436 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1416
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1260

  561 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1417
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1261

  440 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1418


State 1262

  443 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 1419


State 1263

   68 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1420


State 1264

   65 elif_or_static_elif: "elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1265

   66 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1266

   69 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1421
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1267

   82 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1268

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1422
    "is"    shift, and go to state 777
    "as"    shift, and go to state 778
    "<<"    shift, and go to state 787
    ">>"    shift, and go to state 788
    "++"    shift, and go to state 789
    "--"    shift, and go to state 790
    "<="    shift, and go to state 791
    ">="    shift, and go to state 794
    "=="    shift, and go to state 795
    "!="    shift, and go to state 796
    "->"    shift, and go to state 797
    "??"    shift, and go to state 799
    "?."    shift, and go to state 800
    "?["    shift, and go to state 801
    "<|"    shift, and go to state 802
    "|>"    shift, and go to state 803
    "<<<"   shift, and go to state 805
    ">>>"   shift, and go to state 806
    "&&"    shift, and go to state 809
    "||"    shift, and go to state 810
    "^^"    shift, and go to state 811
    ".."    shift, and go to state 815
    '?'     shift, and go to state 817
    '|'     shift, and go to state 818
    '^'     shift, and go to state 819
    '&'     shift, and go to state 820
    '<'     shift, and go to state 821
    '>'     shift, and go to state 822
    '-'     shift, and go to state 823
    '+'     shift, and go to state 824
    '*'     shift, and go to state 825
    '/'     shift, and go to state 826
    '%'     shift, and go to state 827
    '.'     shift, and go to state 828
    '['     shift, and go to state 829

    $default  reduce using rule 74 (expression_else_one_liner)

    expression_else_one_liner  go to state 1423


State 1269

  247 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  273 expressions: expressions . expression_any
  274            | expressions . error

    error                             shift, and go to state 465
    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 468
    "if"                              shift, and go to state 469
    "static_if"                       shift, and go to state 470
    "for"                             shift, and go to state 471
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 478
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "try"                             shift, and go to state 481
    "table"                           shift, and go to state 482
    "delete"                          shift, and go to state 483
    "deref"                           shift, and go to state 484
    "with"                            shift, and go to state 485
    "assume"                          shift, and go to state 486
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "pass"                            shift, and go to state 491
    "reinterpret"                     shift, and go to state 492
    "label"                           shift, and go to state 493
    "goto"                            shift, and go to state 494
    "unsafe"                          shift, and go to state 495
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "yield"                           shift, and go to state 502
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 525
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_label           go to state 540
    expression_goto            go to state 541
    semicolon                  go to state 542
    if_or_static_if            go to state 543
    expression_if_one_liner    go to state 544
    expression_if_then_else    go to state 545
    expression_for_loop        go to state 546
    expression_unsafe          go to state 547
    expression_while_loop      go to state 548
    expression_with            go to state 549
    expression_with_alias      go to state 550
    close_block                go to state 1424
    expr_call_pipe             go to state 552
    expression_any             go to state 553
    expr_keyword               go to state 554
    expression_keyword         go to state 555
    expr_pipe                  go to state 556
    name_in_namespace          go to state 557
    expression_delete          go to state 558
    expr_new                   go to state 559
    expression_break           go to state 560
    expression_continue        go to state 561
    expression_return_no_pipe  go to state 562
    expression_return          go to state 563
    expression_yield_no_pipe   go to state 564
    expression_yield           go to state 565
    expression_try_catch       go to state 566
    kwd_let                    go to state 567
    expression_let             go to state 568
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_assign                go to state 575
    expr_assign_pipe           go to state 576
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 582
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 1270

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 1019
    "[["       shift, and go to state 1020

    $default  reduce using rule 376 (optional_capture_list)

    optional_capture_list  go to state 1425


State 1271

  835 make_struct_fields: "name" . copy_or_move expr
  836                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 995
    '='   shift, and go to state 887

    copy_or_move  go to state 996


State 1272

  455 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 455 (expr_call)


State 1273

  457 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1426


State 1274

  431 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1224
    ']'  shift, and go to state 1427


State 1275

  362 expr_list: expr_list ',' . expr
  432 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1428
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1174
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1276

  458 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 458 (expr_call)


State 1277

  456 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 456 (expr_call)


State 1278

  331 tuple_expansion: "name" .

    $default  reduce using rule 331 (tuple_expansion)


State 1279

  332 tuple_expansion: tuple_expansion . ',' "name"
  333 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  337                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  338                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1429
    ']'  shift, and go to state 1430


State 1280

  332 tuple_expansion: tuple_expansion . ',' "name"
  335 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  336                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  339                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  340                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1429
    ')'  shift, and go to state 1431


State 1281

  378 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1282
    ":="    shift, and go to state 1283
    "name"  shift, and go to state 1284
    '='     shift, and go to state 1285
    '&'     shift, and go to state 1286

    capture_entry  go to state 1287
    capture_list   go to state 1432


State 1282

  371 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1433


State 1283

  372 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1434


State 1284

  373 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1435


State 1285

  370 capture_entry: '=' . "name"

    "name"  shift, and go to state 1436


State 1286

  369 capture_entry: '&' . "name"

    "name"  shift, and go to state 1437


State 1287

  374 capture_list: capture_entry .

    $default  reduce using rule 374 (capture_list)


State 1288

  375 capture_list: capture_list . ',' capture_entry
  377 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1438
    ']'  shift, and go to state 1439


State 1289

  381 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1440


State 1290

  520 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 518 ($@29)

    $@29  go to state 1441


State 1291

  560 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1442
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1292

  526 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 524 ($@31)

    $@31  go to state 1443


State 1293

  558 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1444
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1294

  412 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 412 (expr_assign_pipe_right)


State 1295

  410 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 410 (expr_assign_pipe_right)


State 1296

  411 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 411 (expr_assign_pipe_right)


State 1297

  433 expr_method_call: expr "->" "name" '(' . ')'
  434                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1445
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1446
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1298

  555 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1447
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1299

  505 expr: expr "?[" expr ']' .

    $default  reduce using rule 505 (expr)


State 1300

  531 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1448


State 1301

  559 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1449


State 1302

  528 expr: expr '?' "as" "name" .

    $default  reduce using rule 528 (expr)


State 1303

  532 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 532 (expr)


State 1304

  517 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1450
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1305

  557 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1451


State 1306

  508 expr: expr '.' "?." "name" .

    $default  reduce using rule 508 (expr)


State 1307

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  506     | expr '.' "?[" expr . ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 1452


State 1308

  554 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1453
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1309

  446 expr_field: expr '.' "name" '(' . ')'
  447           | expr '.' "name" '(' . expr_list ')'
  448           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 1454
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1455
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1456
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1310

  556 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1457


State 1311

  445 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 445 (expr_field)


State 1312

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  504     | expr '.' '[' expr . ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ']'    shift, and go to state 1458


State 1313

  453 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 452 ($@28)

    $@28  go to state 1459


State 1314

  449 expr_field: expr '.' basic_type_declaration '(' . ')'
  450           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1460
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1461
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1315

  503 expr: expr '[' expr ']' .

    $default  reduce using rule 503 (expr)


State 1316

  460 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 460 (expr_call)


State 1317

  665 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 665 (enum_declaration)


State 1318

  645 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 645 (enum_list)


State 1319

  133 optional_annotation_list: '[' annotation_list ']' .
  584 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 133 (optional_annotation_list)

    semicolon  go to state 1462


State 1320

  571 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 571 (optional_public_or_private_member_variable)


State 1321

  572 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 572 (optional_public_or_private_member_variable)


State 1322

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  583                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1463
    "static"    shift, and go to state 1323

    $default  reduce using rule 573 (optional_static_member_variable)

    optional_static_member_variable  go to state 1464


State 1323

  574 optional_static_member_variable: "static" .

    $default  reduce using rule 574 (optional_static_member_variable)


State 1324

  575 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1465
    "sealed"    shift, and go to state 1466

    $default  reduce using rule 565 (optional_override)

    optional_override  go to state 1467


State 1325

  579 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 579 (struct_variable_declaration_list)


State 1326

  514 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  515     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 1019
    "[["       shift, and go to state 1020

    $default  reduce using rule 376 (optional_capture_list)

    optional_capture_list  go to state 1468


State 1327

  626 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 626 (let_variable_declaration)


State 1328

  755 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 755 (type_declaration_no_options)


State 1329

  778 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 778 (type_declaration_no_options)


State 1330

  781 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 781 (type_declaration_no_options)


State 1331

  744 table_type_pair: type_declaration c_or_s type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 744 (table_type_pair)


State 1332

  784 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 784 (type_declaration_no_options)


State 1333

  774 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 774 (type_declaration_no_options)


State 1334

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 739 ($@49)

    $@49  go to state 1469


State 1335

  728 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1470


State 1336

  788 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 788 (type_declaration_no_options)


State 1337

  791 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 790 ($@64)

    $@64  go to state 1471


State 1338

  795 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 795 (type_declaration_no_options)


State 1339

  798 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 797 ($@68)

    $@68  go to state 1472


State 1340

  802 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 802 (type_declaration_no_options)


State 1341

  805 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 804 ($@72)

    $@72  go to state 1473


State 1342

  808 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 808 (type_declaration_no_options)


State 1343

  596 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 596 (tuple_type_list)


State 1344

  811 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 811 (type_declaration_no_options)


State 1345

  602 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 602 (variant_type_list)


State 1346

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1474


State 1347

  283 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1475


State 1348

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  732 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr . semicolon

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    semicolon  go to state 1476


State 1349

  684 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 684 (variable_name_with_pos_list)


State 1350

  687 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1477


State 1351

  612 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1478
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1352

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 877 ($@90)

    $@90  go to state 1479


State 1353

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 880 ($@92)

    $@92  go to state 1480


State 1354

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  362 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 908

    open_block        go to state 301
    expression_block  go to state 1481


State 1355

  302 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 301 ($@13)

    $@13  go to state 1482


State 1356

  308 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1483


State 1357

  306 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 306 (expr_new)


State 1358

  307 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 307 (expr_new)


State 1359

  305 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 305 (expr_new)


State 1360

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  357               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1484

    semicolon  go to state 644
    c_or_s     go to state 1485


State 1361

  355 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 355 (expr_type_info)


State 1362

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1486


State 1363

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1487


State 1364

  358 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 358 (expr_type_info)


State 1365

  354 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 353 ($@21)

    $@21  go to state 1488


State 1366

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1489
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1367

  596 tuple_type_list: tuple_type_list . c_or_s tuple_type
  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1490

    semicolon  go to state 644
    c_or_s     go to state 1139


State 1368

  602 variant_type_list: variant_type_list . c_or_s variant_type
  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 643
    '>'                  shift, and go to state 1491

    semicolon  go to state 644
    c_or_s     go to state 1141


State 1369

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 913 ($@106)

    $@106  go to state 1492


State 1370

  911 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 911 (make_dim_decl)


State 1371

  926 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 1493
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 731
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 740
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 741
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 1372

  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"
  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1494
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1373

   92 expression_with_alias: "assume" "type" "name" '=' type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 92 (expression_with_alias)


State 1374

   91 expression_with_alias: "assume" "name" '=' $@6 expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 91 (expression_with_alias)


State 1375

  345 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 344 ($@15)

    $@15  go to state 1495


State 1376

  348 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 347 ($@17)

    $@17  go to state 1496


State 1377

  351 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 350 ($@19)

    $@19  go to state 1497


State 1378

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 917 ($@108)

    $@108  go to state 1498


State 1379

  915 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 915 (make_dim_decl)


State 1380

  887 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 886 ($@96)

    $@96  go to state 1499


State 1381

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 895 ($@98)

    $@98  go to state 1500


State 1382

  893 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 893 (make_tuple_call)


State 1383

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 883 ($@94)

    $@94  go to state 1501


State 1384

  250 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  514 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1502
    '$'  shift, and go to state 536
    '@'  shift, and go to state 714

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 1503


State 1385

  380 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1504


State 1386

  552 expr_mtag: "$c" '(' expr ')' '(' . ')'
  553          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1505
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1506
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1387

  362 expr_list: expr_list . ',' expr
  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1507
    ','                  shift, and go to state 908


State 1388

  847 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  873 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 959
    "end of expression"  shift, and go to state 1225

    $default  reduce using rule 854 (optional_block)

    optional_block  go to state 1508


State 1389

  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1227
    ",]]"  shift, and go to state 1228
    ']'    shift, and go to state 1229

    optional_trailing_delim_sqr_sqr  go to state 1509


State 1390

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  889 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 889 (make_tuple)


State 1391

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  847 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1224

    $default  reduce using rule 847 (make_struct_dim)


State 1392

  870 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 870 (make_struct_decl)


State 1393

  862 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 862 (optional_trailing_delim_sqr_sqr)


State 1394

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  890 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 890 (make_tuple)


State 1395

  890 make_tuple: make_tuple . ',' expr
  898 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1231

    $default  reduce using rule 898 (make_dim)


State 1396

  860 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 860 (optional_trailing_semicolon_sqr_sqr)


State 1397

  362 expr_list: expr_list . ',' expr
  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1510
    ','                  shift, and go to state 908


State 1398

  847 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  875 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 959
    "end of expression"  shift, and go to state 1225

    $default  reduce using rule 854 (optional_block)

    optional_block  go to state 1511


State 1399

  865 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1512


State 1400

  866 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 866 (optional_trailing_delim_cur_sqr)


State 1401

  867 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 867 (optional_trailing_delim_cur_sqr)


State 1402

  874 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 874 (make_struct_decl)


State 1403

  858 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 858 (optional_trailing_semicolon_cur_sqr)


State 1404

  362 expr_list: expr_list . ',' expr
  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1513
    ','                  shift, and go to state 908


State 1405

  286 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 285 ($@9)

    $@9  go to state 1514


State 1406

  289 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 288 ($@11)

    $@11  go to state 1515


State 1407

   35 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 34 ($@1)

    $@1  go to state 1516


State 1408

   38 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1517


State 1409

  362 expr_list: expr_list . ',' expr
  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1518
    ','                  shift, and go to state 908


State 1410

  362 expr_list: expr_list . ',' expr
  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1519
    ','                  shift, and go to state 908


State 1411

  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1520
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1412

  839 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  840                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1521
    '='   shift, and go to state 887

    copy_or_move  go to state 1522


State 1413

  841 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  842                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1523
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1414

  838 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1524
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1415

  837 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1525
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1416

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  436 func_addr_name: "$i" '(' expr . ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1526


State 1417

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  561          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1527


State 1418

  440 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1528
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1419

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1529


State 1420

   68 expression_else: "else" expression_block .

    $default  reduce using rule 68 (expression_else)


State 1421

   69 expression_else: elif_or_static_elif expr . expression_block expression_else
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 777
    "as"                   shift, and go to state 778
    "<<"                   shift, and go to state 787
    ">>"                   shift, and go to state 788
    "++"                   shift, and go to state 789
    "--"                   shift, and go to state 790
    "<="                   shift, and go to state 791
    ">="                   shift, and go to state 794
    "=="                   shift, and go to state 795
    "!="                   shift, and go to state 796
    "->"                   shift, and go to state 797
    "??"                   shift, and go to state 799
    "?."                   shift, and go to state 800
    "?["                   shift, and go to state 801
    "<|"                   shift, and go to state 802
    "|>"                   shift, and go to state 803
    "<<<"                  shift, and go to state 805
    ">>>"                  shift, and go to state 806
    "&&"                   shift, and go to state 809
    "||"                   shift, and go to state 810
    "^^"                   shift, and go to state 811
    ".."                   shift, and go to state 815
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 817
    '|'                    shift, and go to state 818
    '^'                    shift, and go to state 819
    '&'                    shift, and go to state 820
    '<'                    shift, and go to state 821
    '>'                    shift, and go to state 822
    '-'                    shift, and go to state 823
    '+'                    shift, and go to state 824
    '*'                    shift, and go to state 825
    '/'                    shift, and go to state 826
    '%'                    shift, and go to state 827
    '.'                    shift, and go to state 828
    '['                    shift, and go to state 829

    open_block        go to state 301
    expression_block  go to state 1530


State 1422

   76 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 75 ($@3)

    $@3  go to state 1531


State 1423

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1532


State 1424

  247 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 247 (expression_block)


State 1425

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 299

    $default  reduce using rule 134 (optional_function_argument_list)

    optional_function_argument_list  go to state 1533


State 1426

  457 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 457 (expr_call)


State 1427

  431 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1534


State 1428

  432 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1535
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1429

  332 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1536


State 1430

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  337                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  338                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1537


State 1431

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  336                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  339                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  340                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1538
    '&'  shift, and go to state 411

    $default  reduce using rule 618 (optional_ref)

    optional_ref  go to state 1539


State 1432

  375 capture_list: capture_list . ',' capture_entry
  378 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1438
    ')'  shift, and go to state 1540


State 1433

  371 capture_entry: "<-" "name" .

    $default  reduce using rule 371 (capture_entry)


State 1434

  372 capture_entry: ":=" "name" .

    $default  reduce using rule 372 (capture_entry)


State 1435

  373 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1541


State 1436

  370 capture_entry: '=' "name" .

    $default  reduce using rule 370 (capture_entry)


State 1437

  369 capture_entry: '&' "name" .

    $default  reduce using rule 369 (capture_entry)


State 1438

  375 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1282
    ":="    shift, and go to state 1283
    "name"  shift, and go to state 1284
    '='     shift, and go to state 1285
    '&'     shift, and go to state 1286

    capture_entry  go to state 1542


State 1439

  377 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1543


State 1440

  381 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1544
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1545
    block_or_simple_block  go to state 1546


State 1441

  520 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1547


State 1442

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  560          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1548


State 1443

  526 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1549


State 1444

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  558          | expr "as" "$f" '(' expr . ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1550


State 1445

  433 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 433 (expr_method_call)


State 1446

  362 expr_list: expr_list . ',' expr
  434 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1551


State 1447

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  555          | expr "?." "$f" '(' expr . ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1552


State 1448

  531 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 529 ($@33)

    $@33  go to state 1553


State 1449

  559 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1554
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1450

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  517     | expr '?' expr ':' expr .
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 517 (expr)


State 1451

  557 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1555
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1452

  506 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 506 (expr)


State 1453

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  554          | expr '.' "$f" '(' expr . ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1556


State 1454

  448 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  899 make_dim_decl: '[' . optional_expr_list ']'
  932 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  933                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "for"                             shift, and go to state 747
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "iterator"                        shift, and go to state 748
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "$f"                              shift, and go to state 752
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 753
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 749
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_fields      go to state 1557
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1455

  446 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 446 (expr_field)


State 1456

  362 expr_list: expr_list . ',' expr
  447 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1558


State 1457

  556 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1559
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1458

  504 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 504 (expr)


State 1459

  453 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 453 (expr_field)


State 1460

  449 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 449 (expr_field)


State 1461

  362 expr_list: expr_list . ',' expr
  450 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1560


State 1462

  584 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 584 (struct_variable_declaration_list)


State 1463

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1561

    $default  reduce using rule 568 (optional_constant)

    optional_constant  go to state 1562


State 1464

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1465
    "sealed"    shift, and go to state 1466

    $default  reduce using rule 565 (optional_override)

    optional_override  go to state 1563


State 1465

  566 optional_override: "override" .

    $default  reduce using rule 566 (optional_override)


State 1466

  567 optional_override: "sealed" .

    $default  reduce using rule 567 (optional_override)


State 1467

  575 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1320
    "private"  shift, and go to state 1321

    $default  reduce using rule 570 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1564


State 1468

  514 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1502


State 1469

  740 bitfield_type_declaration: "bitfield" bitfield_basic_type_declaration '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 740 (bitfield_type_declaration)


State 1470

  728 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 728 (bitfield_bits)


State 1471

  791 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 791 (type_declaration_no_options)


State 1472

  798 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 798 (type_declaration_no_options)


State 1473

  805 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 805 (type_declaration_no_options)


State 1474

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1565
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1475

  283 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439

    $default  reduce using rule 283 (type_declaration_no_options_list)


State 1476

  732 bitfield_alias_bits: bitfield_alias_bits "name" '=' expr semicolon .

    $default  reduce using rule 732 (bitfield_alias_bits)


State 1477

  687 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 687 (variable_name_with_pos_list)


State 1478

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  612 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 612 (variable_declaration_type)


State 1479

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1566


State 1480

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1567


State 1481

   86 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 86 (expression_for_loop)


State 1482

  302 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 302 (new_type_declaration)


State 1483

  308 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 308 (expr_new)


State 1484

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1568
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1485

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1569


State 1486

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1570


State 1487

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1571
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1488

  354 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 354 (expr_type_decl)


State 1489

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 903 ($@100)

    $@100  go to state 1572


State 1490

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 906 ($@102)

    $@102  go to state 1573


State 1491

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 909 ($@104)

    $@104  go to state 1574


State 1492

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1575


State 1493

  926 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1576


State 1494

  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1577


State 1495

  345 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1578
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1496

  348 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1579
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1497

  351 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1580
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1498

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1581


State 1499

  887 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1583


State 1500

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1584


State 1501

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1585


State 1502

  514 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    ')'                               shift, and go to state 1586
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1587
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1503

  250 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 250 (expr_call_pipe)


State 1504

  380 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1544
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 301
    expression_block       go to state 1545
    block_or_simple_block  go to state 1588


State 1505

  552 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 552 (expr_mtag)


State 1506

  362 expr_list: expr_list . ',' expr
  553 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 908
    ')'  shift, and go to state 1589


State 1507

  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1590
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1508

  873 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1227
    ",]]"  shift, and go to state 1228
    ']'    shift, and go to state 1229

    optional_trailing_delim_sqr_sqr  go to state 1591


State 1509

  872 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 872 (make_struct_decl)


State 1510

  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1592
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1511

  875 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1399
    ";}]"                shift, and go to state 1400
    ",}]"                shift, and go to state 1401

    optional_trailing_delim_cur_sqr  go to state 1593


State 1512

  865 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 865 (optional_trailing_delim_cur_sqr)


State 1513

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1594
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1514

  286 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1595
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1515

  289 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1596

    '('       [reduce using rule 278 (optional_expr_list_in_braces)]
    $default  reduce using rule 278 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1597


State 1516

   35 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 31 (format_string)

    format_string  go to state 1598


State 1517

   38 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 38 (string_builder_body)


State 1518

  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 731
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_map_tuple          go to state 1599
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1519

  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1600
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1520

  362 expr_list: expr_list . ',' expr
  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1601
    ','                  shift, and go to state 908


State 1521

  840 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1602
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1522

  839 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1603
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1523

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  842                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1604


State 1524

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  838 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 838 (make_struct_fields)


State 1525

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  837 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 837 (make_struct_fields)


State 1526

  436 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 436 (func_addr_name)


State 1527

  561 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 561 (expr_mtag)


State 1528

  440 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 439 ($@24)

    $@24  go to state 1605


State 1529

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1606


State 1530

   69 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1263
    "elif"         shift, and go to state 1264
    "static_elif"  shift, and go to state 1265

    $default  reduce using rule 67 (expression_else)

    elif_or_static_elif  go to state 1266
    expression_else      go to state 1607


State 1531

   76 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "return"                          shift, and go to state 1608
    "null"                            shift, and go to state 479
    "break"                           shift, and go to state 480
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "continue"                        shift, and go to state 490
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "yield"                           shift, and go to state 1609
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder             go to state 538
    expr_reader                go to state 539
    expression_if_one_liner    go to state 1610
    expression_keyword         go to state 602
    name_in_namespace          go to state 557
    expr_new                   go to state 559
    expression_break           go to state 1611
    expression_continue        go to state 1612
    expression_return_no_pipe  go to state 1613
    expression_yield_no_pipe   go to state 1614
    expr_cast                  go to state 569
    expr_type_decl             go to state 570
    expr_type_info             go to state 571
    block_or_lambda            go to state 572
    expr_full_block            go to state 573
    expr_numeric_const         go to state 574
    expr_named_call            go to state 577
    expr_method_call           go to state 578
    func_addr_expr             go to state 579
    expr_field                 go to state 580
    expr_call                  go to state 581
    expr                       go to state 1615
    expr_mtag                  go to state 583
    basic_type_declaration     go to state 584
    make_decl                  go to state 585
    make_struct_decl           go to state 586
    make_tuple_call            go to state 587
    make_dim_decl              go to state 588
    make_table_decl            go to state 589
    array_comprehension        go to state 590


State 1532

   84 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 84 (expression_if_then_else)


State 1533

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 395

    $default  reduce using rule 137 (optional_function_type)

    optional_function_type  go to state 1616


State 1534

  431 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 431 (expr_named_call)


State 1535

  432 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1224
    ']'  shift, and go to state 1617


State 1536

  332 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 332 (tuple_expansion)


State 1537

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  337                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  338                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1618
    '&'  shift, and go to state 411

    $default  reduce using rule 618 (optional_ref)

    optional_ref  go to state 1619


State 1538

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  336                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1620


State 1539

  339 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  340                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 1621


State 1540

  378 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 378 (optional_capture_list)


State 1541

  373 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1622


State 1542

  375 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 375 (capture_list)


State 1543

  377 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 377 (optional_capture_list)


State 1544

  364 block_or_simple_block: "=>" . expr
  365                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1623
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1624
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1545

  363 block_or_simple_block: expression_block .

    $default  reduce using rule 363 (block_or_simple_block)


State 1546

  381 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 381 (expr_full_block)


State 1547

  520 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "??"        shift, and go to state 432
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '>'         shift, and go to state 1625
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    dim_list  go to state 438


State 1548

  560 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 560 (expr_mtag)


State 1549

  526 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1626


State 1550

  558 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 558 (expr_mtag)


State 1551

  434 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 434 (expr_method_call)


State 1552

  555 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 555 (expr_mtag)


State 1553

  531 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 373
    type_declaration             go to state 1627


State 1554

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  559          | expr '?' "as" "$f" '(' expr . ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1628


State 1555

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  557          | expr '.' "?." "$f" '(' expr . ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1629


State 1556

  554 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 554 (expr_mtag)


State 1557

  448 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1224
    ']'  shift, and go to state 1630


State 1558

  447 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 447 (expr_field)


State 1559

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  556          | expr '.' '.' "$f" '(' expr . ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1631


State 1560

  450 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 450 (expr_field)


State 1561

  569 optional_constant: "const" .

    $default  reduce using rule 569 (optional_constant)


State 1562

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 580 ($@36)

    $@36  go to state 1632


State 1563

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1561

    $default  reduce using rule 568 (optional_constant)

    optional_constant  go to state 1633


State 1564

  575 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 654
    "name"  shift, and go to state 655

    variable_declaration_no_type  go to state 1634
    variable_declaration_type     go to state 1635
    variable_declaration          go to state 1636
    variable_name_with_pos_list   go to state 658


State 1565

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1637


State 1566

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1638


State 1567

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1639


State 1568

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1640


State 1569

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1641


State 1570

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1642


State 1571

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1643


State 1572

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1644


State 1573

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1645


State 1574

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1646


State 1575

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1647
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1576

  926 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 926 (make_table_decl)


State 1577

  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 538
    expr_reader                   go to state 539
    optional_expr_map_tuple_list  go to state 1648
    expression_keyword            go to state 602
    name_in_namespace             go to state 557
    expr_new                      go to state 559
    expr_cast                     go to state 569
    expr_type_decl                go to state 570
    expr_type_info                go to state 571
    block_or_lambda               go to state 572
    expr_full_block               go to state 573
    expr_numeric_const            go to state 574
    expr_named_call               go to state 577
    expr_method_call              go to state 578
    func_addr_expr                go to state 579
    expr_field                    go to state 580
    expr_call                     go to state 581
    expr                          go to state 731
    expr_mtag                     go to state 583
    basic_type_declaration        go to state 584
    make_decl                     go to state 585
    make_struct_decl              go to state 586
    make_map_tuple                go to state 740
    make_tuple_call               go to state 587
    make_dim_decl                 go to state 588
    expr_map_tuple_list           go to state 741
    make_table_decl               go to state 589
    array_comprehension           go to state 590


State 1578

  345 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 345 (expr_cast)


State 1579

  348 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 348 (expr_cast)


State 1580

  351 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 351 (expr_cast)


State 1581

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 1649
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1582

  869 use_initializer: "uninitialized" .

    $default  reduce using rule 869 (use_initializer)


State 1583

  887 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 887 (make_struct_decl)


State 1584

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1650


State 1585

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1651


State 1586

  514 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 514 (expr)


State 1587

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  515     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1652


State 1588

  380 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 380 (expr_block)


State 1589

  553 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 553 (expr_mtag)


State 1590

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of expression"  shift, and go to state 1653
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1654


State 1591

  873 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 873 (make_struct_decl)


State 1592

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of expression"  shift, and go to state 1653
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1655


State 1593

  875 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 875 (make_struct_decl)


State 1594

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1653

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1656


State 1595

  286 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 286 (expression_keyword)


State 1596

  279 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 276 (optional_expr_list)

    string_builder          go to state 538
    expr_reader             go to state 539
    optional_expr_list      go to state 1657
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 750
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1597

  289 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 289 (expression_keyword)


State 1598

   32 format_string: format_string . STRING_CHARACTER
   35 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1658

    $default  reduce using rule 35 (optional_format_string)


State 1599

  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1653

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1659


State 1600

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of expression"  shift, and go to state 1653
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1660


State 1601

  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1661
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1602

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  840 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 840 (make_struct_fields)


State 1603

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  839 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 839 (make_struct_fields)


State 1604

  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  842                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1662
    '='   shift, and go to state 887

    copy_or_move  go to state 1663


State 1605

  440 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1001
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1004
    func_addr_name     go to state 1664


State 1606

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 442 ($@26)

    $@26  go to state 1665


State 1607

   69 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 69 (expression_else)


State 1608

  312 expression_return_no_pipe: "return" .
  313                          | "return" . expr_list
  314                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1666
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    $default  reduce using rule 312 (expression_return_no_pipe)

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 680
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1609

  318 expression_yield_no_pipe: "yield" . expr
  319                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "<-"                              shift, and go to state 1667
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1668
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1610

   76 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1611

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1612

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1613

   78 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1614

   79 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1615

   77 expression_if_one_liner: expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 77 (expression_if_one_liner)


State 1616

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1669


State 1617

  432 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1670


State 1618

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 327
    "array"      shift, and go to state 328
    "table"      shift, and go to state 329
    "typedecl"   shift, and go to state 330
    "iterator"   shift, and go to state 331
    "smart_ptr"  shift, and go to state 332
    "bool"       shift, and go to state 333
    "void"       shift, and go to state 334
    "string"     shift, and go to state 335
    "auto"       shift, and go to state 336
    "int"        shift, and go to state 337
    "int2"       shift, and go to state 338
    "int3"       shift, and go to state 339
    "int4"       shift, and go to state 340
    "uint"       shift, and go to state 341
    "bitfield"   shift, and go to state 342
    "uint2"      shift, and go to state 343
    "uint3"      shift, and go to state 344
    "uint4"      shift, and go to state 345
    "float"      shift, and go to state 346
    "float2"     shift, and go to state 347
    "float3"     shift, and go to state 348
    "float4"     shift, and go to state 349
    "range"      shift, and go to state 350
    "urange"     shift, and go to state 351
    "range64"    shift, and go to state 352
    "urange64"   shift, and go to state 353
    "block"      shift, and go to state 354
    "int64"      shift, and go to state 355
    "uint64"     shift, and go to state 356
    "double"     shift, and go to state 357
    "function"   shift, and go to state 358
    "lambda"     shift, and go to state 359
    "int8"       shift, and go to state 360
    "uint8"      shift, and go to state 361
    "int16"      shift, and go to state 362
    "uint16"     shift, and go to state 363
    "tuple"      shift, and go to state 364
    "variant"    shift, and go to state 365
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 366
    "name"       shift, and go to state 63
    '$'          shift, and go to state 367

    name_in_namespace            go to state 368
    basic_type_declaration       go to state 369
    structure_type_declaration   go to state 370
    auto_type_declaration        go to state 371
    bitfield_type_declaration    go to state 372
    type_declaration_no_options  go to state 1671


State 1619

  337 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  338                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 607
    ":="  shift, and go to state 608
    '='   shift, and go to state 609

    copy_or_move_or_clone  go to state 1672


State 1620

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  336                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 607
    "??"        shift, and go to state 432
    ":="        shift, and go to state 608
    '='         shift, and go to state 609
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1673
    dim_list               go to state 438


State 1621

  339 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  340                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1674
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1675
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1622

  373 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 373 (capture_entry)


State 1623

  365 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1676
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1624

  364 block_or_simple_block: "=>" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    ".."  error (nonassociative)

    $default  reduce using rule 364 (block_or_simple_block)


State 1625

  520 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 519 ($@30)

    $@30  go to state 1677


State 1626

  526 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 525 ($@32)

    $@32  go to state 1678


State 1627

  531 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  813 type_declaration: type_declaration . '|' type_declaration_no_options
  814                 | type_declaration . '|' '#'

    '|'  shift, and go to state 439
    '>'  shift, and go to state 1679


State 1628

  559 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 559 (expr_mtag)


State 1629

  557 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 557 (expr_mtag)


State 1630

  448 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1680


State 1631

  556 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 556 (expr_mtag)


State 1632

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1681


State 1633

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 582 ($@37)

    $@37  go to state 1682


State 1634

  614 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 614 (variable_declaration)


State 1635

  613 variable_declaration: variable_declaration_type .

    $default  reduce using rule 613 (variable_declaration)


State 1636

  575 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 575 (structure_variable_declaration)


State 1637

  759 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 759 (type_declaration_no_options)


State 1638

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    '('     shift, and go to state 1683

    $default  reduce using rule 853 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1684
    make_struct_dim_list           go to state 1685
    make_struct_dim_decl           go to state 1686
    optional_make_struct_dim_decl  go to state 1687


State 1639

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    '('     shift, and go to state 1683

    $default  reduce using rule 853 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1684
    make_struct_dim_list           go to state 1685
    make_struct_dim_decl           go to state 1686
    optional_make_struct_dim_decl  go to state 1688


State 1640

  356 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 356 (expr_type_info)


State 1641

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1689
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1642

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1690
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1643

  359 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 359 (expr_type_info)


State 1644

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1691


State 1645

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1582

    $default  reduce using rule 868 (use_initializer)

    use_initializer  go to state 1692


State 1646

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    $default  reduce using rule 843 (make_variant_dim)

    make_struct_fields  go to state 1693
    make_variant_dim    go to state 1694


State 1647

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1695


State 1648

  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1696


State 1649

  362 expr_list: expr_list . ',' expr
  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 992

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1697


State 1650

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    '('     shift, and go to state 1683

    $default  reduce using rule 853 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1684
    make_struct_dim_list           go to state 1685
    make_struct_dim_decl           go to state 1686
    optional_make_struct_dim_decl  go to state 1698


State 1651

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    $default  reduce using rule 843 (make_variant_dim)

    make_struct_fields  go to state 1693
    make_variant_dim    go to state 1699


State 1652

  515 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 515 (expr)


State 1653

  929 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1700


State 1654

  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1701


State 1655

  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1702


State 1656

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1703


State 1657

  279 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1704

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1705


State 1658

   32 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 32 (format_string)


State 1659

  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1706


State 1660

  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1707


State 1661

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    ".."                 shift, and go to state 815
    "end of expression"  shift, and go to state 1653
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829

    $default  reduce using rule 928 (array_comprehension_where)

    array_comprehension_where  go to state 1708


State 1662

  842 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1709
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1663

  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1710
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1664

  440 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 440 (func_addr_expr)


State 1665

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 1001
    "name"  shift, and go to state 63

    name_in_namespace  go to state 1004
    func_addr_name     go to state 1711


State 1666

  314 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    expr_list               go to state 907
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 751
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1667

  319 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1712
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1668

  318 expression_yield_no_pipe: "yield" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 318 (expression_yield_no_pipe)


State 1669

  383 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 383 (expr_full_block_assumed_piped)


State 1670

  432 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 432 (expr_named_call)


State 1671

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  334                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  751 type_declaration_no_options: type_declaration_no_options . dim_list
  752                            | type_declaration_no_options . '[' ']'
  760                            | type_declaration_no_options . '-' '[' ']'
  761                            | type_declaration_no_options . "explicit"
  762                            | type_declaration_no_options . "const"
  763                            | type_declaration_no_options . '-' "const"
  764                            | type_declaration_no_options . '&'
  765                            | type_declaration_no_options . '-' '&'
  766                            | type_declaration_no_options . '#'
  767                            | type_declaration_no_options . "implicit"
  768                            | type_declaration_no_options . '-' '#'
  769                            | type_declaration_no_options . "==" "const"
  770                            | type_declaration_no_options . "==" '&'
  771                            | type_declaration_no_options . '?'
  775                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 428
    "implicit"  shift, and go to state 429
    "explicit"  shift, and go to state 430
    "=="        shift, and go to state 431
    "<-"        shift, and go to state 607
    "??"        shift, and go to state 432
    ":="        shift, and go to state 608
    '='         shift, and go to state 609
    '?'         shift, and go to state 433
    '&'         shift, and go to state 434
    '-'         shift, and go to state 435
    '['         shift, and go to state 436
    '#'         shift, and go to state 437

    copy_or_move_or_clone  go to state 1713
    dim_list               go to state 438


State 1672

  337 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  338                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1714
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1715
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1673

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  336                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1716
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1717
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1674

  340 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 340 (tuple_expansion_variable_declaration)


State 1675

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  339 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1718
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1676

  365 block_or_simple_block: "=>" "<-" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 365 (block_or_simple_block)


State 1677

  520 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 520 (expr)


State 1678

  526 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 526 (expr)


State 1679

  531 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 530 ($@34)

    $@34  go to state 1719


State 1680

  448 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 448 (expr_field)


State 1681

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1720


State 1682

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 194
    "bool"      shift, and go to state 195
    "string"    shift, and go to state 196
    "int"       shift, and go to state 197
    "int2"      shift, and go to state 198
    "int3"      shift, and go to state 199
    "int4"      shift, and go to state 200
    "uint"      shift, and go to state 201
    "uint2"     shift, and go to state 202
    "uint3"     shift, and go to state 203
    "uint4"     shift, and go to state 204
    "float"     shift, and go to state 205
    "float2"    shift, and go to state 206
    "float3"    shift, and go to state 207
    "float4"    shift, and go to state 208
    "range"     shift, and go to state 209
    "urange"    shift, and go to state 210
    "range64"   shift, and go to state 211
    "urange64"  shift, and go to state 212
    "int64"     shift, and go to state 213
    "uint64"    shift, and go to state 214
    "double"    shift, and go to state 215
    "int8"      shift, and go to state 216
    "uint8"     shift, and go to state 217
    "int16"     shift, and go to state 218
    "uint16"    shift, and go to state 219
    "++"        shift, and go to state 220
    "--"        shift, and go to state 221
    "name"      shift, and go to state 222

    function_name                go to state 223
    function_declaration_header  go to state 1721


State 1683

  848 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    make_struct_fields  go to state 1722


State 1684

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  850 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1224

    $default  reduce using rule 850 (make_struct_dim_decl)


State 1685

  849 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  851 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1723

    $default  reduce using rule 930 (optional_comma)

    optional_comma  go to state 1724


State 1686

  852 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 852 (optional_make_struct_dim_decl)


State 1687

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1725


State 1688

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1726


State 1689

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1727


State 1690

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829
    ')'    shift, and go to state 1728


State 1691

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    '('     shift, and go to state 1683

    $default  reduce using rule 853 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1684
    make_struct_dim_list           go to state 1685
    make_struct_dim_decl           go to state 1686
    optional_make_struct_dim_decl  go to state 1729


State 1692

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271
    '('     shift, and go to state 1683

    $default  reduce using rule 853 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1684
    make_struct_dim_list           go to state 1685
    make_struct_dim_decl           go to state 1686
    optional_make_struct_dim_decl  go to state 1730


State 1693

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  844 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1224

    $default  reduce using rule 844 (make_variant_dim)


State 1694

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1731


State 1695

  914 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 914 (make_dim_decl)


State 1696

  927 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 927 (make_table_decl)


State 1697

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1732


State 1698

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1733


State 1699

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1734


State 1700

  929 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 600
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expression_keyword      go to state 602
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1735
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1701

  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1736


State 1702

  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1737


State 1703

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1738


State 1704

  931 optional_comma: ',' .

    $default  reduce using rule 931 (optional_comma)


State 1705

  279 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1739


State 1706

  936 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 936 (array_comprehension)


State 1707

  932 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 932 (array_comprehension)


State 1708

  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1740


State 1709

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  842 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 842 (make_struct_fields)


State 1710

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  841 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 841 (make_struct_fields)


State 1711

  443 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 443 (func_addr_expr)


State 1712

  319 expression_yield_no_pipe: "yield" "<-" expr .
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 319 (expression_yield_no_pipe)


State 1713

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  334                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 466
    "class"                           shift, and go to state 467
    "true"                            shift, and go to state 472
    "false"                           shift, and go to state 473
    "new"                             shift, and go to state 474
    "typeinfo"                        shift, and go to state 475
    "type"                            shift, and go to state 476
    "array"                           shift, and go to state 477
    "null"                            shift, and go to state 479
    "table"                           shift, and go to state 482
    "deref"                           shift, and go to state 484
    "cast"                            shift, and go to state 487
    "upcast"                          shift, and go to state 488
    "addr"                            shift, and go to state 489
    "reinterpret"                     shift, and go to state 492
    "unsafe"                          shift, and go to state 599
    "fixed_array"                     shift, and go to state 496
    "default"                         shift, and go to state 497
    "bool"                            shift, and go to state 333
    "void"                            shift, and go to state 334
    "string"                          shift, and go to state 335
    "int"                             shift, and go to state 337
    "int2"                            shift, and go to state 338
    "int3"                            shift, and go to state 339
    "int4"                            shift, and go to state 340
    "uint"                            shift, and go to state 341
    "bitfield"                        shift, and go to state 498
    "uint2"                           shift, and go to state 343
    "uint3"                           shift, and go to state 344
    "uint4"                           shift, and go to state 345
    "float"                           shift, and go to state 346
    "float2"                          shift, and go to state 347
    "float3"                          shift, and go to state 348
    "float4"                          shift, and go to state 349
    "range"                           shift, and go to state 350
    "urange"                          shift, and go to state 351
    "range64"                         shift, and go to state 352
    "urange64"                        shift, and go to state 353
    "int64"                           shift, and go to state 355
    "uint64"                          shift, and go to state 356
    "double"                          shift, and go to state 357
    "int8"                            shift, and go to state 360
    "uint8"                           shift, and go to state 361
    "int16"                           shift, and go to state 362
    "uint16"                          shift, and go to state 363
    "tuple"                           shift, and go to state 499
    "variant"                         shift, and go to state 500
    "generator"                       shift, and go to state 501
    "++"                              shift, and go to state 503
    "--"                              shift, and go to state 504
    "$ <|"                            shift, and go to state 505
    "@ <|"                            shift, and go to state 506
    "@@ <|"                           shift, and go to state 507
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 508
    "$i"                              shift, and go to state 509
    "$v"                              shift, and go to state 510
    "$b"                              shift, and go to state 511
    "$a"                              shift, and go to state 512
    "$c"                              shift, and go to state 513
    "..."                             shift, and go to state 514
    "[["                              shift, and go to state 515
    "[{"                              shift, and go to state 516
    "{{"                              shift, and go to state 517
    "integer constant"                shift, and go to state 518
    "long integer constant"           shift, and go to state 519
    "unsigned integer constant"       shift, and go to state 520
    "unsigned long integer constant"  shift, and go to state 521
    "unsigned int8 constant"          shift, and go to state 522
    "floating point constant"         shift, and go to state 523
    "double constant"                 shift, and go to state 524
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 601
    "type function"                   shift, and go to state 526
    "start of the string"             shift, and go to state 527
    "begin of code block"             shift, and go to state 528
    '-'                               shift, and go to state 529
    '+'                               shift, and go to state 530
    '*'                               shift, and go to state 531
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 532
    '!'                               shift, and go to state 533
    '['                               shift, and go to state 534
    '('                               shift, and go to state 535
    '$'                               shift, and go to state 536
    '@'                               shift, and go to state 537

    string_builder          go to state 538
    expr_reader             go to state 539
    expr_call_pipe          go to state 552
    expression_keyword      go to state 555
    expr_pipe               go to state 1741
    name_in_namespace       go to state 557
    expr_new                go to state 559
    expr_cast               go to state 569
    expr_type_decl          go to state 570
    expr_type_info          go to state 571
    block_or_lambda         go to state 572
    expr_full_block         go to state 573
    expr_numeric_const      go to state 574
    expr_assign             go to state 681
    expr_named_call         go to state 577
    expr_method_call        go to state 578
    func_addr_expr          go to state 579
    expr_field              go to state 580
    expr_call               go to state 581
    expr                    go to state 1742
    expr_mtag               go to state 583
    basic_type_declaration  go to state 584
    make_decl               go to state 585
    make_struct_decl        go to state 586
    make_tuple_call         go to state 587
    make_dim_decl           go to state 588
    make_table_decl         go to state 589
    array_comprehension     go to state 590


State 1714

  338 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 338 (tuple_expansion_variable_declaration)


State 1715

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  337 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1743
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1716

  336 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 336 (tuple_expansion_variable_declaration)


State 1717

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1744
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1718

  339 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 339 (tuple_expansion_variable_declaration)


State 1719

  531 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 531 (expr)


State 1720

  581 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 581 (struct_variable_declaration_list)


State 1721

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 301
    expression_block  go to state 1745


State 1722

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  848 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1224
    ')'  shift, and go to state 1746


State 1723

  849 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  931 optional_comma: ',' .

    '('  shift, and go to state 1747

    $default  reduce using rule 931 (optional_comma)


State 1724

  851 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 851 (make_struct_dim_decl)


State 1725

  878 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 878 (make_struct_decl)


State 1726

  881 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 881 (make_struct_decl)


State 1727

  357 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 357 (expr_type_info)


State 1728

  360 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 360 (expr_type_info)


State 1729

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1748


State 1730

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1749


State 1731

  910 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 910 (make_dim_decl)


State 1732

  918 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 918 (make_dim_decl)


State 1733

  896 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 896 (make_tuple_call)


State 1734

  884 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 884 (make_struct_decl)


State 1735

  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'
  929 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 777
    "as"   shift, and go to state 778
    "<<"   shift, and go to state 787
    ">>"   shift, and go to state 788
    "++"   shift, and go to state 789
    "--"   shift, and go to state 790
    "<="   shift, and go to state 791
    ">="   shift, and go to state 794
    "=="   shift, and go to state 795
    "!="   shift, and go to state 796
    "->"   shift, and go to state 797
    "??"   shift, and go to state 799
    "?."   shift, and go to state 800
    "?["   shift, and go to state 801
    "<|"   shift, and go to state 802
    "|>"   shift, and go to state 803
    "<<<"  shift, and go to state 805
    ">>>"  shift, and go to state 806
    "&&"   shift, and go to state 809
    "||"   shift, and go to state 810
    "^^"   shift, and go to state 811
    ".."   shift, and go to state 815
    '?'    shift, and go to state 817
    '|'    shift, and go to state 818
    '^'    shift, and go to state 819
    '&'    shift, and go to state 820
    '<'    shift, and go to state 821
    '>'    shift, and go to state 822
    '-'    shift, and go to state 823
    '+'    shift, and go to state 824
    '*'    shift, and go to state 825
    '/'    shift, and go to state 826
    '%'    shift, and go to state 827
    '.'    shift, and go to state 828
    '['    shift, and go to state 829

    $default  reduce using rule 929 (array_comprehension_where)


State 1736

  934 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 934 (array_comprehension)


State 1737

  935 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 935 (array_comprehension)


State 1738

  937 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 937 (array_comprehension)


State 1739

  279 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 279 (optional_expr_list_in_braces)


State 1740

  933 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 933 (array_comprehension)


State 1741

  334 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1742

  248 expr_call_pipe: expr . expr_full_block_assumed_piped
  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  391 expr_assign: expr .
  392            | expr . '=' expr
  393            | expr . "<-" expr
  394            | expr . ":=" expr
  395            | expr . "&=" expr
  396            | expr . "|=" expr
  397            | expr . "^=" expr
  398            | expr . "&&=" expr
  399            | expr . "||=" expr
  400            | expr . "^^=" expr
  401            | expr . "+=" expr
  402            | expr . "-=" expr
  403            | expr . "*=" expr
  404            | expr . "/=" expr
  405            | expr . "%=" expr
  406            | expr . "<<=" expr
  407            | expr . ">>=" expr
  408            | expr . "<<<=" expr
  409            | expr . ">>>=" expr
  433 expr_method_call: expr . "->" "name" '(' ')'
  434                 | expr . "->" "name" '(' expr_list ')'
  444 expr_field: expr . '.' "name"
  445           | expr . '.' '.' "name"
  446           | expr . '.' "name" '(' ')'
  447           | expr . '.' "name" '(' expr_list ')'
  448           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  449           | expr . '.' basic_type_declaration '(' ')'
  450           | expr . '.' basic_type_declaration '(' expr_list ')'
  453           | expr . '.' $@27 error $@28
  475 expr: expr . "<<" expr
  476     | expr . ">>" expr
  477     | expr . "<<<" expr
  478     | expr . ">>>" expr
  479     | expr . '+' expr
  480     | expr . '-' expr
  481     | expr . '*' expr
  482     | expr . '/' expr
  483     | expr . '%' expr
  484     | expr . '<' expr
  485     | expr . '>' expr
  486     | expr . "==" expr
  487     | expr . "!=" expr
  488     | expr . "<=" expr
  489     | expr . ">=" expr
  490     | expr . '&' expr
  491     | expr . '|' expr
  492     | expr . '^' expr
  493     | expr . "&&" expr
  494     | expr . "||" expr
  495     | expr . "^^" expr
  496     | expr . ".." expr
  499     | expr . "++"
  500     | expr . "--"
  503     | expr . '[' expr ']'
  504     | expr . '.' '[' expr ']'
  505     | expr . "?[" expr ']'
  506     | expr . '.' "?[" expr ']'
  507     | expr . "?." "name"
  508     | expr . '.' "?." "name"
  516     | expr . "??" expr
  517     | expr . '?' expr ':' expr
  520     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  521     | expr . "is" basic_type_declaration
  522     | expr . "is" "name"
  523     | expr . "as" "name"
  526     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  527     | expr . "as" basic_type_declaration
  528     | expr . '?' "as" "name"
  531     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  532     | expr . '?' "as" basic_type_declaration
  540     | expr . "<|" expr
  541     | expr . "|>" expr
  542     | expr . "|>" basic_type_declaration
  554 expr_mtag: expr . '.' "$f" '(' expr ')'
  555          | expr . "?." "$f" '(' expr ')'
  556          | expr . '.' '.' "$f" '(' expr ')'
  557          | expr . '.' "?." "$f" '(' expr ')'
  558          | expr . "as" "$f" '(' expr ')'
  559          | expr . '?' "as" "$f" '(' expr ')'
  560          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 777
    "as"                 shift, and go to state 778
    "+="                 shift, and go to state 909
    "-="                 shift, and go to state 910
    "/="                 shift, and go to state 911
    "*="                 shift, and go to state 912
    "%="                 shift, and go to state 913
    "&="                 shift, and go to state 914
    "|="                 shift, and go to state 915
    "^="                 shift, and go to state 916
    "<<"                 shift, and go to state 787
    ">>"                 shift, and go to state 788
    "++"                 shift, and go to state 789
    "--"                 shift, and go to state 790
    "<="                 shift, and go to state 791
    "<<="                shift, and go to state 917
    ">>="                shift, and go to state 918
    ">="                 shift, and go to state 794
    "=="                 shift, and go to state 795
    "!="                 shift, and go to state 796
    "->"                 shift, and go to state 797
    "<-"                 shift, and go to state 919
    "??"                 shift, and go to state 799
    "?."                 shift, and go to state 800
    "?["                 shift, and go to state 801
    "<|"                 shift, and go to state 802
    "|>"                 shift, and go to state 803
    ":="                 shift, and go to state 804
    "<<<"                shift, and go to state 805
    ">>>"                shift, and go to state 806
    "<<<="               shift, and go to state 920
    ">>>="               shift, and go to state 921
    "&&"                 shift, and go to state 809
    "||"                 shift, and go to state 810
    "^^"                 shift, and go to state 811
    "&&="                shift, and go to state 922
    "||="                shift, and go to state 923
    "^^="                shift, and go to state 924
    ".."                 shift, and go to state 815
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 925
    '?'                  shift, and go to state 817
    '|'                  shift, and go to state 818
    '^'                  shift, and go to state 819
    '&'                  shift, and go to state 820
    '<'                  shift, and go to state 821
    '>'                  shift, and go to state 822
    '-'                  shift, and go to state 823
    '+'                  shift, and go to state 824
    '*'                  shift, and go to state 825
    '/'                  shift, and go to state 826
    '%'                  shift, and go to state 827
    '.'                  shift, and go to state 828
    '['                  shift, and go to state 829
    '$'                  shift, and go to state 536
    '@'                  shift, and go to state 714

    $default  reduce using rule 391 (expr_assign)

    semicolon                      go to state 1750
    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 830


State 1743

  337 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 337 (tuple_expansion_variable_declaration)


State 1744

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1745

  583 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 583 (struct_variable_declaration_list)


State 1746

  848 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 848 (make_struct_dim_list)


State 1747

  849 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 752
    "name"  shift, and go to state 1271

    make_struct_fields  go to state 1751


State 1748

  904 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 904 (make_dim_decl)


State 1749

  907 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 907 (make_dim_decl)


State 1750

  333 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 333 (tuple_expansion_variable_declaration)


State 1751

  837 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  838                   | make_struct_fields . ',' "name" ":=" expr
  841                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  842                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  849 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1224
    ')'  shift, and go to state 1752


State 1752

  849 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 849 (make_struct_dim_list)
